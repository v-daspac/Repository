<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="20170206_delta_query_events.md" source-language="en-US" target-language="ja-JP" build-num="775290691">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">849</count>
        <count count-type="x-adjWordCount">640.5</count>
        <count count-type="x-curAdjWordCount">640.5</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">6</count>
        <count count-type="x-match100%">58</count>
        <count count-type="x-match99-90%">105</count>
        <count count-type="x-match89-75%">192</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get incremental changes to events in a calendar view (preview)</source>
          <target state="final">カレンダー ビューのイベントへの増分の変更を取得する (プレビュー)</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="10" adjWordcount="10" curWordcount="10"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source>A calendar view is a collection of events in a date/time range from the default calendar (../me/calendarview) or some other calendar of the user's. By using delta query, you can get new, updated, or deleted events in a calendar view. The returned events may include occurrences and exceptions of a recurring series, and single instances. The delta data enables you to maintain and synchronize a local store of a user's events, without having to fetch the entire set of the user's events from the server every time.</source>
            <target state="final">カレンダー ビューは、既定のカレンダー (../me/calendarview) またはユーザーの他のカレンダーからの日付/時刻範囲内にあるイベントのコレクションです。デルタ クエリを使用すると、カレンダー ビューで新規、更新済み、または削除済みのイベントを取得できます。返されるイベントには、定期的なアイテムの発生と例外、および単一のインスタンスが含まれている場合があります。デルタ データを使用すると、毎回サーバーからユーザーのイベントのセット全体をフェッチせずに、ユーザーのイベントのローカル ストアの保守と同期が行えます。</target>
          <note from="bb-metadata"> wordcount="87" adjWordcount="87" curWordcount="87"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="102" translate="no" xml:space="preserve">
              <source>A calendar view is a collection of events in a date/time range from the default calendar (../me/calendarview) or some other calendar of the user's.</source>
              <target state="final">A calendar view is a collection of events in a date/time range from the default calendar (../me/calendarview) or some other calendar of the user's.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>By using delta query, you can get new, updated, or deleted events in a calendar view.</source>
              <target state="final">By using delta query, you can get new, updated, or deleted events in a calendar view.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
            <trans-unit id="104" translate="no" xml:space="preserve">
              <source>The returned events may include occurrences and exceptions of a recurring series, and single instances.</source>
              <target state="final">The returned events may include occurrences and exceptions of a recurring series, and single instances.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
            <trans-unit id="105" translate="no" xml:space="preserve">
              <source>The delta data enables you to maintain and synchronize a local store of a user's events, without having to fetch the entire set of the user's events from the server every time.</source>
              <target state="final">The delta data enables you to maintain and synchronize a local store of a user's events, without having to fetch the entire set of the user's events from the server every time.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="32" adjWordcount="32" curWordcount="32"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>Delta query supports both full synchronization that retrieves all the events in the specified calendar view, and incremental synchronization that retrieves those events that have changed in the calendar view since the last synchronization. Typically, you would do an initial full synchronization, and subsequently, get incremental changes to that calendar view periodically.</source>
            <target state="final">デルタ クエリでは、指定したカレンダー ビュー内のすべてのイベントを取得する完全な同期と、最後の同期以降にカレンダー ビューで変更されたそれらのイベントを取得する増分同期の両方がサポートされています。通常は、最初の完全同期を実行して、その後、そのカレンダー ビューへの増分の変更を定期的に取得します。</target>
          <alt-trans match-quality="76%" tool="BlackBox/MSR MT"><source>Delta query supports both full synchronization that retrieves all of the messages in a folder (for example, the user's Inbox), and incremental synchronization that retrieves all of the messages that have changed in that folder since the last synchronization. Typically, you would do an initial full synchronization of all the messages in a folder, and subsequently, get incremental changes to that folder periodically.</source><target state-qualifier="tm-suggestion">デルタ クエリでは、フォルダー内 (ユーザーの受信トレイなど) のすべてのメッセージを取得する完全な同期と、最後の同期以降、そのフォルダー内で変更されたすべてのメッセージを取得する増分同期の両方がサポートされています。通常は、フォルダー内のすべてのメッセージの最初の完全同期を実行して、その後、そのフォルダーの増分の変更を定期的に取得します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="76" wordcount="52" adjWordcount="26" curWordcount="26" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>Delta query supports both full synchronization that retrieves all the events in the specified calendar view, and incremental synchronization that retrieves those events that have changed in the calendar view since the last synchronization.</source>
              <target state="final">Delta query supports both full synchronization that retrieves all the events in the specified calendar view, and incremental synchronization that retrieves those events that have changed in the calendar view since the last synchronization.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="34" adjWordcount="34" curWordcount="34"</note></trans-unit>
            <trans-unit id="107" translate="no" xml:space="preserve">
              <source>Typically, you would do an initial full synchronization, and subsequently, get incremental changes to that calendar view periodically.</source>
              <target state="final">Typically, you would do an initial full synchronization, and subsequently, get incremental changes to that calendar view periodically.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Track event changes in a calendar view</source>
          <target state="final">カレンダー ビューのイベントの変更を追跡する</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>Delta query for events is specific to a calendar and date/time range that you specify (i.e., a calendar view). To track the changes in multiple calendars, you need to track each calendar individually.</source>
            <target state="final">イベントのデルタ クエリは、指定するカレンダーと日付/時刻範囲 (つまり、カレンダー ビュー) に固有のものです。複数のカレンダー ビューの変更を追跡するには、各カレンダーを個別に追跡する必要があります。</target>
          <note from="bb-metadata"> wordcount="33" adjWordcount="33" curWordcount="33"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="109" translate="no" xml:space="preserve">
              <source>Delta query for events is specific to a calendar and date/time range that you specify (i.e., a calendar view).</source>
              <target state="final">Delta query for events is specific to a calendar and date/time range that you specify (i.e., a calendar view).</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
            <trans-unit id="110" translate="no" xml:space="preserve">
              <source>To track the changes in multiple calendars, you need to track each calendar individually.</source>
              <target state="final">To track the changes in multiple calendars, you need to track each calendar individually.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source>Tracking event changes in a calendar view typically is a round of one or more GET requests with the <bpt id="p1">[</bpt>delta<ept id="p1">](../api-reference/beta/api/event_delta.md)</ept> function. The initial GET request is very much like the way you <bpt id="p2">[</bpt>list a calendarView<ept id="p2">](https://graph.microsoft.io/en-us/docs/api-reference/beta/api/calendar_list_calendarview)</ept>, except that you include the <bpt id="p3">**</bpt>delta<ept id="p3">**</ept> function:</source>
            <target state="final">通常、カレンダー ビュー内のイベント変更の追跡は、<bpt id="p1">[</bpt>デルタ<ept id="p1">](../api-reference/beta/api/event_delta.md)</ept>関数を使用した、1 つ以上の GET 要求のラウンドです。最初の GET 要求は、<bpt id="p3">**</bpt>デルタ<ept id="p3">**</ept>関数を含めることを除いて、<bpt id="p2">[</bpt>calendarView の一覧表示<ept id="p2">](https://graph.microsoft.io/ja-jp/docs/api-reference/beta/api/calendar_list_calendarview)</ept>方法とほぼ同じです。</target>
          <note from="bb-metadata"> wordcount="42" adjWordcount="42" curWordcount="42"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="111" translate="no" xml:space="preserve">
              <source>Tracking event changes in a calendar view typically is a round of one or more GET requests with the <bpt id="p1">[</bpt>delta<ept id="p1">](../api-reference/beta/api/event_delta.md)</ept> function.</source>
              <target state="final">Tracking event changes in a calendar view typically is a round of one or more GET requests with the <bpt id="p1">[</bpt>delta<ept id="p1">](../api-reference/beta/api/event_delta.md)</ept> function.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
            <trans-unit id="112" translate="no" xml:space="preserve">
              <source>The initial GET request is very much like the way you <bpt id="p1">[</bpt>list a calendarView<ept id="p1">](https://graph.microsoft.io/en-us/docs/api-reference/beta/api/calendar_list_calendarview)</ept>, except that you include the <bpt id="p2">**</bpt>delta<ept id="p2">**</ept> function:</source>
              <target state="final">The initial GET request is very much like the way you <bpt id="p1">[</bpt>list a calendarView<ept id="p1">](https://graph.microsoft.io/ja-jp/docs/api-reference/beta/api/calendar_list_calendarview)</ept>, except that you include the <bpt id="p2">**</bpt>delta<ept id="p2">**</ept> function:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A GET request with the <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function returns either:</source>
          <target state="final"><bpt id="p1">**</bpt>デルタ<ept id="p1">**</ept>関数を使用した GET 要求は、次のいずれかを返します。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`nextLink`</ph> (that contains a URL with a <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function call and a <bpt id="p2">_</bpt>skipToken<ept id="p2">_</ept>), or</source>
          <target state="final"><ph id="ph1">`nextLink`</ph> (<bpt id="p1">**</bpt>デルタ<ept id="p1">**</ept>関数の呼び出しと <bpt id="p2">_</bpt>skipToken<ept id="p2">_</ept> を使用した URL を含む)、または</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`deltaLink`</ph> (that contains a URL with a <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function call and <bpt id="p2">_</bpt>deltaToken<ept id="p2">_</ept>).</source>
          <target state="final"><ph id="ph1">`deltaLink`</ph> (<bpt id="p1">**</bpt>デルタ<ept id="p1">**</ept>関数の呼び出しと <bpt id="p2">_</bpt>deltaToken<ept id="p2">_</ept> を使用した URL を含む)。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These tokens are <bpt id="p1">[</bpt>state tokens<ept id="p1">](../delat_query_overview.md#state-tokens)</ept> which encode the <bpt id="p2">_</bpt>startDateTime<ept id="p2">_</ept> and <bpt id="p3">_</bpt>endDateTime<ept id="p3">_</ept> parameters, and any other query parameter in your initial delta query GET request.</source>
          <target state="final">これらのトークンは、<bpt id="p2">_</bpt>startDateTime<ept id="p2">_</ept> パラメーターと <bpt id="p3">_</bpt>endDateTime<ept id="p3">_</ept> パラメーター、および最初のデルタ クエリの GET 要求内の他のすべてのクエリ パラメーターをエンコードする <bpt id="p1">[</bpt>state tokens<ept id="p1">](../delat_query_overview.md#state-tokens)</ept> です。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>State tokens are completely opaque to the client. To proceed with a round of change tracking, simply copy and apply the <ph id="ph1">`nextLink`</ph> or <ph id="ph2">`deltaLink`</ph> URL returned from the last GET request to the next <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function call for that same calendar view. A <ph id="ph3">`deltaLink`</ph> returned in a response signifies that the current round of change tracking is complete. You can save and use the <ph id="ph4">`deltaLink`</ph> URL when you begin the next round.</source>
            <target state="final">状態トークンは、クライアントに対して完全に不透明です。変更追跡のラウンドを続行する手順は、最後の GET 要求から返された <ph id="ph1">`nextLink`</ph> または <ph id="ph2">`deltaLink`</ph> の URL を、その同じカレンダー ビューの次の<bpt id="p1">**</bpt>デルタ<ept id="p1">**</ept>関数呼び出しにコピーして適用するだけです。応答で返される <ph id="ph3">`deltaLink`</ph> は、変更追跡の現在のラウンドが完了したことを示します。<ph id="ph4">`deltaLink`</ph> URL を保存して、次のラウンドを開始する際に使用することができます。</target>
          <note from="bb-metadata"> wordcount="68" adjWordcount="68" curWordcount="68"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="117" translate="no" xml:space="preserve">
              <source>State tokens are completely opaque to the client.</source>
              <target state="final">State tokens are completely opaque to the client.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
            <trans-unit id="118" translate="no" xml:space="preserve">
              <source>To proceed with a round of change tracking, simply copy and apply the <ph id="ph1">`nextLink`</ph> or <ph id="ph2">`deltaLink`</ph> URL returned from the last GET request to the next <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function call for that same calendar view.</source>
              <target state="final">To proceed with a round of change tracking, simply copy and apply the <ph id="ph1">`nextLink`</ph> or <ph id="ph2">`deltaLink`</ph> URL returned from the last GET request to the next <bpt id="p1">**</bpt>delta<ept id="p1">**</ept> function call for that same calendar view.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="32" adjWordcount="32" curWordcount="32"</note></trans-unit>
            <trans-unit id="119" translate="no" xml:space="preserve">
              <source>A <ph id="ph1">`deltaLink`</ph> returned in a response signifies that the current round of change tracking is complete.</source>
              <target state="final">A <ph id="ph1">`deltaLink`</ph> returned in a response signifies that the current round of change tracking is complete.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
            <trans-unit id="120" translate="no" xml:space="preserve">
              <source>You can save and use the <ph id="ph1">`deltaLink`</ph> URL when you begin the next round.</source>
              <target state="final">You can save and use the <ph id="ph1">`deltaLink`</ph> URL when you begin the next round.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>example<ept id="p1">](#example-to-synchronize-events-in-a-calendar-view)</ept> below to learn how to use these <ph id="ph1">`nextLink`</ph> and <ph id="ph2">`deltaLink`</ph> URLs.</source>
          <target state="final">これらの <ph id="ph1">`nextLink`</ph> と <ph id="ph2">`deltaLink`</ph> の URL を使用する方法については、以下の<bpt id="p1">[</bpt>例<ept id="p1">](#example-to-synchronize-events-in-a-calendar-view)</ept>を参照してください。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use query parameters in a delta query for calendar view</source>
          <target state="final">カレンダー ビューのデルタ クエリでクエリ パラメーターを使用する</target>
        <alt-trans match-quality="83%" tool="BlackBox/MSR MT"><source>Use query parameters in a delta query for messages</source><target state-qualifier="tm-suggestion">メッセージのデルタ クエリでクエリ パラメーターを使用する</target></alt-trans><note from="bb-metadata">fuzzyMatch="83" wordcount="10" adjWordcount="5" curWordcount="5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Include the <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> and <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> parameters to define a date/time range for your calendar view.</source>
          <target state="final"><bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> パラメーターと <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> パラメーターを含めて、カレンダー ビューの日付/時刻範囲を定義します。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$select`</ph> is not supported.</source>
          <target state="final"><ph id="ph1">`$select`</ph> はサポートされていません。</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion"><ph id="ph1">`$select`</ph> はサポートされていません。</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="3" adjWordcount="0.75" curWordcount="0.75" tmLabel="04_O365_FROM_OJ_RE_PROCESSED"</note></trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Optional request header</source>
          <target state="final">オプションの要求ヘッダー</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">オプションの要求ヘッダー</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="3" adjWordcount="0.75" curWordcount="0.75" tmLabel="20161017_GRAPHAPI_REF_CONTENT"</note></trans-unit>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source>Each delta query GET request returns a collection of one or more events in the response. You can optionally specify the request header, <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept>, to set the maximum number of events in a response.</source>
            <target state="final">各デルタ クエリの GET 要求は、応答で 1 つ以上のイベントのコレクションを返します。必要に応じて、要求ヘッダー <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept> を指定して、応答内の最大イベント数を設定できます。</target>
          <alt-trans match-quality="95%" tool="BlackBox/MSR MT"><source>Each delta query GET request returns a collection of one or more messages in the response. You can optionally specify the request header, <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept>, to set the maximum number of messages in a response.</source><target state-qualifier="tm-suggestion">各デルタ クエリの GET 要求は、応答で 1 つ以上のメッセージのコレクションを返します。必要に応じて、要求ヘッダー <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept> を指定して、応答内の最大メッセージ数を設定できます。</target></alt-trans><note from="bb-metadata">fuzzyMatch="95" wordcount="35" adjWordcount="14" curWordcount="14" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="126" translate="no" xml:space="preserve">
              <source>Each delta query GET request returns a collection of one or more events in the response.</source>
              <target state="final">Each delta query GET request returns a collection of one or more events in the response.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
            <trans-unit id="127" translate="no" xml:space="preserve">
              <source>You can optionally specify the request header, <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept>, to set the maximum number of events in a response.</source>
              <target state="final">You can optionally specify the request header, <bpt id="p1">_</bpt>Prefer: odata.maxpagesize={x}<ept id="p1">_</ept>, to set the maximum number of events in a response.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example to synchronize events in a calendar view</source>
          <target state="final">カレンダー ビューでのイベント同期の例</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source>The following example shows a series of 3 requests to synchronize the user's default calendar in a specific time range. There are 5 events in that calendar view.</source>
            <target state="final">次の例では、特定の時間範囲にあるユーザーの既定のカレンダーを同期するための一連の 3 つの要求を示します。そのカレンダー ビューには 5 つのイベントがあります。</target>
          <note from="bb-metadata"> wordcount="28" adjWordcount="28" curWordcount="28"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="129" translate="no" xml:space="preserve">
              <source>The following example shows a series of 3 requests to synchronize the user's default calendar in a specific time range.</source>
              <target state="final">The following example shows a series of 3 requests to synchronize the user's default calendar in a specific time range.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>There are 5 events in that calendar view.</source>
              <target state="final">There are 5 events in that calendar view.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Step 1: sample initial request<ept id="p1">](#step-1-sample-initial-request)</ept> and <bpt id="p2">[</bpt>response<ept id="p2">](#sample-initial-response)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>手順 1: サンプルの最初の要求<ept id="p1">](#step-1-sample-initial-request)</ept>と<bpt id="p2">[</bpt>応答<ept id="p2">](#sample-initial-response)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Step 2: sample second request<ept id="p1">](#step-2-sample-second-request)</ept> and <bpt id="p2">[</bpt>response<ept id="p2">](#sample-second-response)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>手順 2: サンプルの 2 番目の要求<ept id="p1">](#step-2-sample-second-request)</ept>と<bpt id="p2">[</bpt>応答<ept id="p2">](#sample-second-response)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Step 3: sample third request<ept id="p1">](#step-3-sample-third-request)</ept> and <bpt id="p2">[</bpt>final response<ept id="p2">](#sample-third-and-final-response)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>手順 3: サンプルの 3 番目の要求<ept id="p1">](#step-3-sample-third-request)</ept>と<bpt id="p2">[</bpt>最後の応答<ept id="p2">](#sample-third-and-final-response)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
        <group id="paragraph-108" merged-trans="yes">
          <trans-unit id="p108" translate="yes" xml:space="preserve">
            <source>For brevity, the sample responses show only a subset of the properties for an event. In an actual call, most event properties are returned.</source>
            <target state="final">簡潔にするため、サンプルの応答にはイベントのプロパティのサブセットのみを表示します。実際の呼び出しでは、ほとんどのイベント プロパティが返されます。</target>
          <note from="bb-metadata"> wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          <group id="sentence-108">
            <trans-unit id="134" translate="no" xml:space="preserve">
              <source>For brevity, the sample responses show only a subset of the properties for an event.</source>
              <target state="final">For brevity, the sample responses show only a subset of the properties for an event.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
            <trans-unit id="135" translate="no" xml:space="preserve">
              <source>In an actual call, most event properties are returned.</source>
              <target state="final">In an actual call, most event properties are returned.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See also what you'll do in the <bpt id="p1">[</bpt>next round<ept id="p1">](#the-next-round-sample-first-response)</ept>.</source>
          <target state="final"><bpt id="p1">[</bpt>次のラウンド<ept id="p1">](#the-next-round-sample-first-response)</ept>で行う操作も参照してください。</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>次のラウンド<ept id="p1">](#the-next-round-sample-first-response)</ept>で行う操作も参照してください。</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Step 1: sample initial request</source>
          <target state="final">手順 1: 最初の要求のサンプル</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <group id="paragraph-109" merged-trans="yes">
          <trans-unit id="p109" translate="yes" xml:space="preserve">
            <source>In this example, the specified calendar view is being synchronized for the first time, so the initial sync request does not include any state token. This round will return all the events in that calendar view.</source>
            <target state="final">この例では、指定されたカレンダー ビューは初めて同期されるため、最初の同期要求には状態トークンは含まれません。このラウンドは、そのカレンダー ビュー内のすべてのイベントを返します。</target>
          <alt-trans match-quality="88%" tool="BlackBox/MSR MT"><source>In this example, the specified folder is being synchronized for the first time, so the initial sync request does not include any state token. This round will return all the messages in that folder.</source><target state-qualifier="tm-suggestion">この例では、指定されたフォルダーは初めて同期されるため、最初の同期要求には状態トークンは含まれません。このラウンドは、そのフォルダー内のすべてのメッセージを返します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="88" wordcount="36" adjWordcount="18" curWordcount="18" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-109">
            <trans-unit id="138" translate="no" xml:space="preserve">
              <source>In this example, the specified calendar view is being synchronized for the first time, so the initial sync request does not include any state token.</source>
              <target state="final">In this example, the specified calendar view is being synchronized for the first time, so the initial sync request does not include any state token.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="25" adjWordcount="25" curWordcount="25"</note></trans-unit>
            <trans-unit id="139" translate="no" xml:space="preserve">
              <source>This round will return all the events in that calendar view.</source>
              <target state="final">This round will return all the events in that calendar view.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The first request specifies the following:</source>
          <target state="final">最初の要求では、次を指定します。</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">最初の要求では、次を指定します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="6" adjWordcount="1.5" curWordcount="1.5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Date/time values for the <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> and <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> parameters.</source>
          <target state="final"><bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> パラメーターと <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> パラメーターの日付/時刻の値。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>optional request header<ept id="p1">](#optional-request-header)</ept>, <bpt id="p2">_</bpt>odata.maxpagesize<ept id="p2">_</ept>, returning 2 events at a time.</source>
          <target state="final"><bpt id="p1">[</bpt>オプションの要求ヘッダー<ept id="p1">](#optional-request-header)</ept>である <bpt id="p2">_</bpt>odata.maxpagesize<ept id="p2">_</ept> が一度に 2 つのイベントを返します。</target>
        <alt-trans match-quality="92%" tool="BlackBox/MSR MT"><source>The <bpt id="p1">[</bpt>optional request header<ept id="p1">](#optional-request-header)</ept>, <bpt id="p2">_</bpt>odata.maxpagesize<ept id="p2">_</ept>, returning 2 messages at a time.</source><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>オプションの要求ヘッダー<ept id="p1">](#optional-request-header)</ept>である <bpt id="p2">_</bpt>odata.maxpagesize<ept id="p2">_</ept> が一度に 2 通のメッセージを返します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="92" wordcount="11" adjWordcount="4.4" curWordcount="4.4" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sample initial response</source>
          <target state="final">最初の応答のサンプル</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">最初の応答のサンプル</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="3" adjWordcount="0.75" curWordcount="0.75" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <group id="paragraph-110" merged-trans="yes">
          <trans-unit id="p110" translate="yes" xml:space="preserve">
            <source>The response includes two events and a <ph id="ph1">`@odata.nextLink`</ph> response header with a <ph id="ph2">`skipToken`</ph>. The <ph id="ph3">`nextLink`</ph> URL indicates there are more events in the calendar view to get.</source>
            <target state="final">応答には、2 つのイベントと <ph id="ph2">`skipToken`</ph> のある <ph id="ph1">`@odata.nextLink`</ph> 応答ヘッダーが含まれています。<ph id="ph3">`nextLink`</ph> URL は、取得するカレンダー ビューにさらにイベントがあることを示します。</target>
          <alt-trans match-quality="81%" tool="BlackBox/MSR MT"><source>The response includes two messages and a <ph id="ph1">`@odata.nextLink`</ph> response header with a <ph id="ph2">`skipToken`</ph>. The <ph id="ph3">`nextLink`</ph> indicates there are more messages in the folder to get.</source><target state-qualifier="tm-suggestion">応答には、2 つのメッセージと <ph id="ph2">`skipToken`</ph> のある <ph id="ph1">`@odata.nextLink`</ph> 応答ヘッダーが含まれています。<ph id="ph3">`nextLink`</ph> は、取得するフォルダーにさらにメッセージがあることを示します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="81" wordcount="24" adjWordcount="12" curWordcount="12" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-110">
            <trans-unit id="144" translate="no" xml:space="preserve">
              <source>The response includes two events and a <ph id="ph1">`@odata.nextLink`</ph> response header with a <ph id="ph2">`skipToken`</ph>.</source>
              <target state="final">The response includes two events and a <ph id="ph1">`@odata.nextLink`</ph> response header with a <ph id="ph2">`skipToken`</ph>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="145" translate="no" xml:space="preserve">
              <source>The <ph id="ph1">`nextLink`</ph> URL indicates there are more events in the calendar view to get.</source>
              <target state="final">The <ph id="ph1">`nextLink`</ph> URL indicates there are more events in the calendar view to get.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Step 2: sample second request</source>
          <target state="final">手順 2: 2 番目の要求のサンプル</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <group id="paragraph-111" merged-trans="yes">
          <trans-unit id="p111" translate="yes" xml:space="preserve">
            <source>The second request specifies the <ph id="ph1">`nextLink`</ph> URL returned from the previous response. Notice that it no longer has to specify the same <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> and <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> parameters as in the initial request, as the <ph id="ph2">`skipToken`</ph> in the <ph id="ph3">`nextLink`</ph> URL encodes and includes them.</source>
            <target state="final">2 番目の要求では、前の応答で返された <ph id="ph1">`nextLink`</ph> URL を指定します。最初の要求にあるような同じ <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> パラメーターと <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> パラメーターを指定する必要はなくなりましたのでご注意ください。これは、<ph id="ph3">`nextLink`</ph> URL の <ph id="ph2">`skipToken`</ph> によってこれらのパラメーターがエンコードされて含まれるためです。</target>
          <alt-trans match-quality="81%" tool="BlackBox/MSR MT"><source>The second request specifies the  returned from the previous response. Notice that it no longer has to specify the same  parameter as in the initial request, as the  encodes and includes it.</source><target state-qualifier="tm-suggestion">2 番目の要求は、前の応答から返された  を指定します。最初の要求にあるような同じ  パラメーターを指定する必要はなくなりましたのでご注意ください。これは、 によってこのパラメーターがエンコードされて含まれるためです。</target></alt-trans><note from="bb-metadata">fuzzyMatch="81" wordcount="39" adjWordcount="19.5" curWordcount="19.5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-111">
            <trans-unit id="147" translate="no" xml:space="preserve">
              <source>The second request specifies the <ph id="ph1">`nextLink`</ph> URL returned from the previous response.</source>
              <target state="final">The second request specifies the <ph id="ph1">`nextLink`</ph> URL returned from the previous response.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="148" translate="no" xml:space="preserve">
              <source>Notice that it no longer has to specify the same <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> and <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> parameters as in the initial request, as the <ph id="ph1">`skipToken`</ph> in the <ph id="ph2">`nextLink`</ph> URL encodes and includes them.</source>
              <target state="final">Notice that it no longer has to specify the same <bpt id="p1">_</bpt>startDateTime<ept id="p1">_</ept> and <bpt id="p2">_</bpt>endDateTime<ept id="p2">_</ept> parameters as in the initial request, as the <ph id="ph1">`skipToken`</ph> in the <ph id="ph2">`nextLink`</ph> URL encodes and includes them.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="28" adjWordcount="28" curWordcount="28"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sample second response</source>
          <target state="final">2 番目の応答のサンプル</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">2 番目の応答のサンプル</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="3" adjWordcount="0.75" curWordcount="0.75" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second response returns the next 2 events in the calendar view and another <ph id="ph1">`nextLink`</ph>, indicating there are more events to get from the calendar view.</source>
          <target state="final">2 番目の応答は、カレンダー ビューから取得するイベントがまだあることを示す、カレンダー ビュー内の次の 2 つのイベントと別の <ph id="ph1">`nextLink`</ph> を返します。</target>
        <alt-trans match-quality="77%" tool="BlackBox/MSR MT"><source>The second response returns the next 2 messages in the folder, a  and another , indicating there are more messages to get from the folder.</source><target state-qualifier="tm-suggestion">2 番目の応答は、フォルダーから取得するメッセージがまだあることを示す、フォルダー内の次の 2 つメッセージ ( と別の ) を返します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="77" wordcount="25" adjWordcount="12.5" curWordcount="12.5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Step 3: sample third request</source>
          <target state="final">手順 3: 3 番目の要求のサンプル</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third request continues to use the latest <ph id="ph1">`nextLink`</ph> returned from the last sync request.</source>
          <target state="final">3 番目の要求は、最後の同期要求から返された最新の <ph id="ph1">`nextLink`</ph> を引き続き使用します。</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">3 番目の要求は、最後の同期要求から返された最新の <ph id="ph1">`nextLink`</ph> を引き続き使用します。</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="14" adjWordcount="3.5" curWordcount="3.5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Sample third and final response</source>
          <target state="final">3 番目と最後の応答のサンプル</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">3 番目と最後の応答のサンプル</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="5" adjWordcount="1.25" curWordcount="1.25" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <group id="paragraph-112" merged-trans="yes">
          <trans-unit id="p112" translate="yes" xml:space="preserve">
            <source>The third response returns the only remaining event in the calendar view, and a <ph id="ph1">`deltaLink`</ph> URL which indicates synchronization is complete for this calendar view. Save and use the <ph id="ph2">`deltaLink`</ph> URL to <bpt id="p1">[</bpt>synchronize that calendar view in the next round<ept id="p1">](#the-next-round-sample-request)</ept>.</source>
            <target state="final">3 番目の応答では、カレンダー ビューに残っている 1 つだけのイベントと、このカレンダー ビューの同期が完了したことを示す <ph id="ph1">`deltaLink`</ph> URL が返されます。<ph id="ph2">`deltaLink`</ph> URL を保存して、<bpt id="p1">[</bpt>次のラウンドでそのカレンダー ビューを同期するために使用します<ept id="p1">](#the-next-round-sample-request)</ept>。</target>
          <note from="bb-metadata"> wordcount="38" adjWordcount="38" curWordcount="38"</note></trans-unit>
          <group id="sentence-112">
            <trans-unit id="154" translate="no" xml:space="preserve">
              <source>The third response returns the only remaining event in the calendar view, and a <ph id="ph1">`deltaLink`</ph> URL which indicates synchronization is complete for this calendar view.</source>
              <target state="final">The third response returns the only remaining event in the calendar view, and a <ph id="ph1">`deltaLink`</ph> URL which indicates synchronization is complete for this calendar view.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
            <trans-unit id="155" translate="no" xml:space="preserve">
              <source>Save and use the <ph id="ph1">`deltaLink`</ph> URL to <bpt id="p1">[</bpt>synchronize that calendar view in the next round<ept id="p1">](#the-next-round-sample-request)</ept>.</source>
              <target state="final">Save and use the <ph id="ph1">`deltaLink`</ph> URL to <bpt id="p1">[</bpt>synchronize that calendar view in the next round<ept id="p1">](#the-next-round-sample-request)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The next round: sample first request</source>
          <target state="final">次のラウンド: 最初の要求のサンプル</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <group id="paragraph-113" merged-trans="yes">
          <trans-unit id="p113" translate="yes" xml:space="preserve">
            <source>Using the <ph id="ph1">`deltaLink`</ph> from the <bpt id="p1">[</bpt>last request<ept id="p1">](#step-3-sample-third-request)</ept> in the last round, you will be able to get only those events that have changed (by being added, deleted, or updated) in that calendar view since then. Your first request in the next round will look like the following, assuming you prefer to keep the same maximum page size in the response:</source>
            <target state="final">最後のラウンドの<bpt id="p1">[</bpt>最後の応答<ept id="p1">](#step-3-sample-third-request)</ept>からの <ph id="ph1">`deltaLink`</ph> を使用すると、それ以降にそのカレンダー ビューで (追加、削除、または更新によって) 変更されたこれらのイベントのみを取得できます。次のラウンドの最初の要求は、同じ最大ページ サイズを維持することを前提とすると、次のようになります。</target>
          <alt-trans match-quality="94%" tool="BlackBox/MSR MT"><source>Using the <ph id="ph1">`deltaLink`</ph> from the <bpt id="p1">[</bpt>last request<ept id="p1">](#step-3-sample-third-request)</ept> in the last round, you will be able to get only those messages that have changed (by being added, deleted, or updated) since then in that folder. Your first request in the next round will look like the following, assuming you prefer to keep the same maximum page size in the response:</source><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>最後の応答<ept id="p1">](#step-3-sample-third-request)</ept>からの <ph id="ph1">`deltaLink`</ph> を使用すると、そのフォルダーでそれ以降に (追加、削除、または更新によって) 変更されたこれらのメッセージのみを取得できます。次のラウンドの最初の要求は、同じ最大ページ サイズを維持することを前提とすると、次のようになります。</target></alt-trans><note from="bb-metadata">fuzzyMatch="94" wordcount="59" adjWordcount="23.6" curWordcount="23.6" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
          <group id="sentence-113">
            <trans-unit id="157" translate="no" xml:space="preserve">
              <source>Using the <ph id="ph1">`deltaLink`</ph> from the <bpt id="p1">[</bpt>last request<ept id="p1">](#step-3-sample-third-request)</ept> in the last round, you will be able to get only those events that have changed (by being added, deleted, or updated) in that calendar view since then.</source>
              <target state="final">Using the <ph id="ph1">`deltaLink`</ph> from the <bpt id="p1">[</bpt>last request<ept id="p1">](#step-3-sample-third-request)</ept> in the last round, you will be able to get only those events that have changed (by being added, deleted, or updated) in that calendar view since then.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="34" adjWordcount="34" curWordcount="34"</note></trans-unit>
            <trans-unit id="158" translate="no" xml:space="preserve">
              <source>Your first request in the next round will look like the following, assuming you prefer to keep the same maximum page size in the response:</source>
              <target state="final">Your first request in the next round will look like the following, assuming you prefer to keep the same maximum page size in the response:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="25" adjWordcount="25" curWordcount="25"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The next round: sample first response</source>
          <target state="final">次のラウンド: 最初の応答のサンプル</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="final">関連項目</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">関連項目</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="2" adjWordcount="0.5" curWordcount="0.5" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft Graph delta query<ept id="p1">](../Concepts/delta_query_overview.md)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>Microsoft Graph デルタ クエリ<ept id="p1">](../Concepts/delta_query_overview.md)</ept></target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>Microsoft Graph デルタ クエリ<ept id="p1">](../Concepts/delta_query_overview.md)</ept></target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="4" adjWordcount="1" curWordcount="1" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get incremental changes to messages (preview)<ept id="p1">](../Concepts/delta_query_messages.md)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>メッセージへの増分の変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_messages.md)</ept></target>
        <alt-trans match-quality="89%" tool="BlackBox/MSR MT"><source><bpt id="p1">[</bpt>Get incremental changes to messages in a folder (preview)<ept id="p1">](../Concepts/delta_query_messages.md)</ept></source><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>フォルダー内のメッセージへの増分変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_messages.md)</ept></target></alt-trans><note from="bb-metadata">fuzzyMatch="89" wordcount="6" adjWordcount="3" curWordcount="3" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get incremental changes to groups (preview)<ept id="p1">](../Concepts/delta_query_groups.md)</ept></source>
          <target state="final"><bpt id="p1">[</bpt>グループへの増分の変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_groups.md)</ept></target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion"><bpt id="p1">[</bpt>グループへの増分の変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_groups.md)</ept></target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="6" adjWordcount="1.5" curWordcount="1.5" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get incremental changes to users (preview)<ept id="p1">](../Concepts/delta_query_users.md)</ept></source>
          <target state="final" state-qualifier="leveraged-tm"><bpt id="p1">[</bpt>ユーザーへの増分の変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_users.md)</ept></target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm"><bpt id="p1">[</bpt>ユーザーへの増分の変更を取得する (プレビュー)<ept id="p1">](../Concepts/delta_query_users.md)</ept></target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="6" adjWordcount="0" curWordcount="0" tmLabel="20161219_GRAPH_CONTENT_HB"</note></trans-unit>
      </group>
    </body>
  </file>
</xliff>