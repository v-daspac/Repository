<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="sharepoint-webhooks-using-azure-functions.md" source-language="en-US" target-language="ja-JP" build-num="1651807185">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">656</count>
        <count count-type="x-adjWordCount">656</count>
        <count count-type="x-curAdjWordCount">656</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">0</count>
        <count count-type="x-match100%">0</count>
        <count count-type="x-match99-90%">0</count>
        <count count-type="x-match89-75%">0</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Azure Functions with SharePoint webhooks</source>
          <target state="final">Azure Functions と SharePoint Webhooks の使用</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source><bpt id="p1">[</bpt>Azure functions<ept id="p1">](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview)</ept> offer an easy way to host your SharePoint webhooks: you can simply add your webhook C# or Javascript code via the browser and Azure will take care of the hosting and scaling of your function! This guide shows how to setup and use Azure Functions for your webhooks.</source>
            <target state="final"><bpt id="p1">[</bpt>Azure Functions<ept id="p1">](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview)</ept> を使用すると、SharePoint Webhook を簡単にホストできます。ブラウザーで Webhook C# や Javascript コードを追加すると、Azure で関数のホストとスケーリングが行われます。このガイドでは、Webhook 用の Azure Functions をセットアップして使用する方法を説明します。</target>
          <note from="bb-metadata"> wordcount="50" adjWordcount="50" curWordcount="50"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="102" translate="no" xml:space="preserve">
              <source><bpt id="p1">[</bpt>Azure functions<ept id="p1">](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview)</ept> offer an easy way to host your SharePoint webhooks: you can simply add your webhook C# or Javascript code via the browser and Azure will take care of the hosting and scaling of your function!</source>
              <target state="final"><bpt id="p1">[</bpt>Azure functions<ept id="p1">](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview)</ept> offer an easy way to host your SharePoint webhooks: you can simply add your webhook C# or Javascript code via the browser and Azure will take care of the hosting and scaling of your function!</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="37" adjWordcount="37" curWordcount="37"</note></trans-unit>
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>This guide shows how to setup and use Azure Functions for your webhooks.</source>
              <target state="final">This guide shows how to setup and use Azure Functions for your webhooks.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Create a an Azure Function App</source>
          <target state="final">Azure 関数アプリを作成する</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>The first step you'll need to do is creating an Azure Function App, which is a special kind of Azure Web App focused on hosting Azure Functions. Navigate to <bpt id="p1">[</bpt>https://portal.azure.com<ept id="p1">](https://portal.azure.com)</ept>, click on the "New" and search for "Function app":</source>
            <target state="final">最初に Azure 関数アプリを作成する必要があります。これは、Azure Functions をホストすることを主とした特殊な Azure Web アプリです。<bpt id="p1">[</bpt>https://portal.azure.com<ept id="p1">](https://portal.azure.com)</ept> に移動し、[新規] をクリックして、"関数アプリ" を検索してください。</target>
          <note from="bb-metadata"> wordcount="39" adjWordcount="39" curWordcount="39"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="105" translate="no" xml:space="preserve">
              <source>The first step you'll need to do is creating an Azure Function App, which is a special kind of Azure Web App focused on hosting Azure Functions.</source>
              <target state="final">The first step you'll need to do is creating an Azure Function App, which is a special kind of Azure Web App focused on hosting Azure Functions.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>Navigate to <bpt id="p1">[</bpt>https://portal.azure.com<ept id="p1">](https://portal.azure.com)</ept>, click on the "New" and search for "Function app":</source>
              <target state="final">Navigate to <bpt id="p1">[</bpt>https://portal.azure.com<ept id="p1">](https://portal.azure.com)</ept>, click on the "New" and search for "Function app":</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating an Azure Function App</source>
          <target state="final">Azure 関数アプリの作成</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Select "Function App" and complete the information needed to create the Function App:</source>
          <target state="final">[関数アプリ] を選択し、関数アプリの作成に必要な情報をすべて入力します。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Complte Azure Function App details</source>
          <target state="final">Azure 関数アプリの詳細をすべて入力する</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create an Azure Function</source>
          <target state="final">Azure 関数を作成する</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Now that the app to host the functions is ready you can continue with creating your first Azure Function by clicking on the "New Function" link:</source>
          <target state="final">関数をホストするためのアプリが完成したら、"新しい関数" リンクをクリックして、最初の Azure 関数を作成できます。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="26" adjWordcount="26" curWordcount="26"</note></trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adding an Azure Function</source>
          <target state="final">Azure 関数の追加</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>This will offer you to start your function from a template, in the case of SharePoint webhooks we will need a HTTP triggered function and since we'll be writing C# code in our sample this means we're using the <bpt id="p1">**</bpt>HttpTrigger-CSharp<ept id="p1">**</ept> function template. Given that SharePoint webhook services need to be anonymously callable it's important to switch the <bpt id="p2">**</bpt>Authorization level<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Anonymous<ept id="p3">**</ept>.</source>
            <target state="final">ここでは、テンプレートから関数を開始できます。SharePoint Webhooks の場合、HTTP でトリガーされる関数が必要です。このサンプルでは C# コードを作成するため、<bpt id="p1">**</bpt>HttpTrigger-CSharp<ept id="p1">**</ept> 関数テンプレートを使用します。SharePoint Webhook サービスが匿名で呼び出し可能であることが必要だとすると、<bpt id="p2">**</bpt>[承認レベル]<ept id="p2">**</ept> を <bpt id="p3">**</bpt>[匿名]<ept id="p3">**</ept> に切り替えることは重要です。</target>
          <note from="bb-metadata"> wordcount="61" adjWordcount="61" curWordcount="61"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="113" translate="no" xml:space="preserve">
              <source>This will offer you to start your function from a template, in the case of SharePoint webhooks we will need a HTTP triggered function and since we'll be writing C# code in our sample this means we're using the <bpt id="p1">**</bpt>HttpTrigger-CSharp<ept id="p1">**</ept> function template.</source>
              <target state="final">This will offer you to start your function from a template, in the case of SharePoint webhooks we will need a HTTP triggered function and since we'll be writing C# code in our sample this means we're using the <bpt id="p1">**</bpt>HttpTrigger-CSharp<ept id="p1">**</ept> function template.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="42" adjWordcount="42" curWordcount="42"</note></trans-unit>
            <trans-unit id="114" translate="no" xml:space="preserve">
              <source>Given that SharePoint webhook services need to be anonymously callable it's important to switch the <bpt id="p1">**</bpt>Authorization level<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Anonymous<ept id="p2">**</ept>.</source>
              <target state="final">Given that SharePoint webhook services need to be anonymously callable it's important to switch the <bpt id="p1">**</bpt>Authorization level<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Anonymous<ept id="p2">**</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Choosing an Azure Function template</source>
          <target state="final">Azure 関数テンプレートの選択</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Using the <bpt id="p2">**</bpt>GenericWebHook<ept id="p2">**</ept> template currently does not yet work for SharePoint webhooks but the SharePoint product team is aware of this problem and will address it.</source>
          <target state="final"><bpt id="p1">**</bpt>注:<ept id="p1">**</ept>現在、<bpt id="p2">**</bpt>GenericWebHook<ept id="p2">**</ept> テンプレートは SharePoint Webhooks で使用できませんが、SharePoint 製品チームは問題を把握しており、取り組んでいます。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The result will be a "default" Azure Function written in C# <ph id="ph1">![</ph>The default Azure Function<ph id="ph2">](../../../images/webhook-azure-function4.png)</ph></source>
          <target state="final">結果として、C# で記述された "既定" の Azure 関数が完成します。<ph id="ph1">![</ph>既定の Azure 関数<ph id="ph2">](../../../images/webhook-azure-function4.png)</ph></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In our case we want this Azure Function to behave as a SharePoint webhook service, so we'll need to implement the following in C#:</source>
          <target state="final">今回は、この Azure 関数を SharePoint Webhook サービスとして機能させるため、C# で以下の内容を実装する必要があります。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source>Return the validationtoken if specified as URL parameter to the call. This is needed as described <bpt id="p1">[</bpt>here<ept id="p1">](./lists/create-subscription)</ept> and SharePoint expects the reply to happen within 5 seconds.</source>
            <target state="final">呼び出しの URL パラメーターとして指定されている場合、validationtoken を返します。これが必要な理由は<bpt id="p1">[</bpt>ここ<ept id="p1">](./lists/create-subscription)</ept>で説明されています。SharePoint では 5 秒以内に返信が行われることを想定しています。</target>
          <note from="bb-metadata"> wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="119" translate="no" xml:space="preserve">
              <source>Return the validationtoken if specified as URL parameter to the call.</source>
              <target state="final">Return the validationtoken if specified as URL parameter to the call.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="120" translate="no" xml:space="preserve">
              <source>This is needed as described <bpt id="p1">[</bpt>here<ept id="p1">](./lists/create-subscription)</ept> and SharePoint expects the reply to happen within 5 seconds.</source>
              <target state="final">This is needed as described <bpt id="p1">[</bpt>here<ept id="p1">](./lists/create-subscription)</ept> and SharePoint expects the reply to happen within 5 seconds.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>Process the JSON webhook notification. In below sample we've opted to store the JSON in a storage queue so that an Azure Web Job can pick it up and process it asynchronously. Depending on your needs you could also process the notification directly in your webhook service, but keep in mind that all webhook service calls need to complete in 5 seconds, hence using an asynchronous model is recommended</source>
            <target state="final">JSON Webhook 通知を処理します。以下のサンプルで、JSON をストレージ キューに格納することを選択することにより、Azure Web ジョブはその JSON を取得して、非同期的に処理できます。必要に応じて、通知を Webhook サービスで直接処理することもできますが、Webhook サービスのすべての呼び出しは 5 秒以内に完了する必要があるため、非同期モデルの使用をお勧めします。</target>
          <note from="bb-metadata"> wordcount="69" adjWordcount="69" curWordcount="69"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="121" translate="no" xml:space="preserve">
              <source>Process the JSON webhook notification.</source>
              <target state="final">Process the JSON webhook notification.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
            <trans-unit id="122" translate="no" xml:space="preserve">
              <source>In below sample we've opted to store the JSON in a storage queue so that an Azure Web Job can pick it up and process it asynchronously.</source>
              <target state="final">In below sample we've opted to store the JSON in a storage queue so that an Azure Web Job can pick it up and process it asynchronously.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
            <trans-unit id="123" translate="no" xml:space="preserve">
              <source>Depending on your needs you could also process the notification directly in your webhook service, but keep in mind that all webhook service calls need to complete in 5 seconds, hence using an asynchronous model is recommended</source>
              <target state="final">Depending on your needs you could also process the notification directly in your webhook service, but keep in mind that all webhook service calls need to complete in 5 seconds, hence using an asynchronous model is recommended</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="37" adjWordcount="37" curWordcount="37"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can achieve above by replacing the default code by below code (please enter your storage account connection string and update the queue name if you're using a different one):</source>
          <target state="final">上記の内容は、既定のコードを以下のコードに置き換えることによって実行できます (別のキュー名を使用している場合は、ストレージ アカウント接続文字列を入力して、キュー名を更新してください)。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="30" adjWordcount="30" curWordcount="30"</note></trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Configure your Azure Function</source>
          <target state="final">Azure 関数を構成する</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source>Since we've chosen the correct template to start from our configuration is almost complete, the only thing you need to still do is to switch the <bpt id="p1">**</bpt>Allowed HTTP methods<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Selected methods<ept id="p2">**</ept> and then only allow the <bpt id="p3">**</bpt>POST<ept id="p3">**</ept> HTTP method. Also cross check that <bpt id="p4">**</bpt>Mode<ept id="p4">**</ept> is equal to <bpt id="p5">**</bpt>Standard<ept id="p5">**</ept> and <bpt id="p6">**</bpt>Authorization level<ept id="p6">**</ept> is set to <bpt id="p7">**</bpt>Anonymous<ept id="p7">**</ept>.</source>
            <target state="final">適切なテンプレートを選択し、構成からの開始が間もなく完了するため、今行う必要があるのは、<bpt id="p1">**</bpt>[許可されている HTTP メソッド]<ept id="p1">**</ept> を <bpt id="p2">**</bpt>[選択されたメソッド]<ept id="p2">**</ept> に切り替え、<bpt id="p3">**</bpt>POST<ept id="p3">**</ept> HTTP メソッドのみを許可することです。また、<bpt id="p4">**</bpt>[モード]<ept id="p4">**</ept> が <bpt id="p5">**</bpt>[標準]<ept id="p5">**</ept> に、<bpt id="p6">**</bpt>[承認レベル]<ept id="p6">**</ept> が <bpt id="p7">**</bpt>[匿名]<ept id="p7">**</ept> に設定されていることをご確認ください。</target>
          <note from="bb-metadata"> wordcount="56" adjWordcount="56" curWordcount="56"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="126" translate="no" xml:space="preserve">
              <source>Since we've chosen the correct template to start from our configuration is almost complete, the only thing you need to still do is to switch the <bpt id="p1">**</bpt>Allowed HTTP methods<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Selected methods<ept id="p2">**</ept> and then only allow the <bpt id="p3">**</bpt>POST<ept id="p3">**</ept> HTTP method.</source>
              <target state="final">Since we've chosen the correct template to start from our configuration is almost complete, the only thing you need to still do is to switch the <bpt id="p1">**</bpt>Allowed HTTP methods<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Selected methods<ept id="p2">**</ept> and then only allow the <bpt id="p3">**</bpt>POST<ept id="p3">**</ept> HTTP method.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="40" adjWordcount="40" curWordcount="40"</note></trans-unit>
            <trans-unit id="127" translate="no" xml:space="preserve">
              <source>Also cross check that <bpt id="p1">**</bpt>Mode<ept id="p1">**</ept> is equal to <bpt id="p2">**</bpt>Standard<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Authorization level<ept id="p3">**</ept> is set to <bpt id="p4">**</bpt>Anonymous<ept id="p4">**</ept>.</source>
              <target state="final">Also cross check that <bpt id="p1">**</bpt>Mode<ept id="p1">**</ept> is equal to <bpt id="p2">**</bpt>Standard<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Authorization level<ept id="p3">**</ept> is set to <bpt id="p4">**</bpt>Anonymous<ept id="p4">**</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Azure Function settings</source>
          <target state="final">Azure 関数の設定</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Test your Azure Function</source>
          <target state="final">Azure 関数をテストする</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source>You're now all set for your first Azure Function test: navigate to the <bpt id="p1">**</bpt>Develop<ept id="p1">**</ept> screen. Click on the <bpt id="p2">**</bpt>Test<ept id="p2">**</ept> icon to pop-up the test pane at the right side, add a URL parameter "validationtoken" with a random string as value. Using this setup we're mimicking the behavior of SharePoint calling your web hook service when validating a new webhook addition. Click on <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> to test...if everything goes well you'll see in the logs section that your service was called and that it returned the passed value with a HTTP 200 response:</source>
            <target state="final">最初の Azure 関数をテストする準備ができました。<bpt id="p1">**</bpt>[開発]<ept id="p1">**</ept> 画面に移動します。<bpt id="p2">**</bpt>[テスト]<ept id="p2">**</ept> アイコンをクリックして、右側にテスト ペインを表示し、URL パラメーター "validationtoken" を追加して、その値としてランダムな文字列を入力します。このセットアップを使用して、新しく追加した Webhook の検証の際に、Webhook サービスを呼び出す SharePoint の動作を模倣します。<bpt id="p3">**</bpt>[実行]<ept id="p3">**</ept> をクリックしてテストを開始します。正常に完了すると、ログ セクションには、サービスが呼び出され、渡された値と HTTP 200 応答が返されたことが表示されます。</target>
          <note from="bb-metadata"> wordcount="91" adjWordcount="91" curWordcount="91"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>You're now all set for your first Azure Function test: navigate to the <bpt id="p1">**</bpt>Develop<ept id="p1">**</ept> screen.</source>
              <target state="final">You're now all set for your first Azure Function test: navigate to the <bpt id="p1">**</bpt>Develop<ept id="p1">**</ept> screen.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="15" adjWordcount="15" curWordcount="15"</note></trans-unit>
            <trans-unit id="131" translate="no" xml:space="preserve">
              <source>Click on the <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> icon to pop-up the test pane at the right side, add a URL parameter "validationtoken" with a random string as value.</source>
              <target state="final">Click on the <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> icon to pop-up the test pane at the right side, add a URL parameter "validationtoken" with a random string as value.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="25" adjWordcount="25" curWordcount="25"</note></trans-unit>
            <trans-unit id="132" translate="no" xml:space="preserve">
              <source>Using this setup we're mimicking the behavior of SharePoint calling your web hook service when validating a new webhook addition.</source>
              <target state="final">Using this setup we're mimicking the behavior of SharePoint calling your web hook service when validating a new webhook addition.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
            <trans-unit id="133" translate="no" xml:space="preserve">
              <source>Click on <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> to test...if everything goes well you'll see in the logs section that your service was called and that it returned the passed value with a HTTP 200 response:</source>
              <target state="final">Click on <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> to test...if everything goes well you'll see in the logs section that your service was called and that it returned the passed value with a HTTP 200 response:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="31" adjWordcount="31" curWordcount="31"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Azure Function testing</source>
          <target state="final">Azure 関数のテスト</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Grab the webhook URL to use in your implementation</source>
          <target state="final">実装で使用する Webhook URL の把握</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
        <group id="paragraph-108" merged-trans="yes">
          <trans-unit id="p108" translate="yes" xml:space="preserve">
            <source>We'll need to let SharePoint now what webhook URL we're using. To so let's start by copying the Azure Function URL:</source>
            <target state="final">どの Webhook URL を使用するかを SharePoint に認識させる必要があります。最初に Azure 関数の URL をコピーします。</target>
          <note from="bb-metadata"> wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          <group id="sentence-108">
            <trans-unit id="136" translate="no" xml:space="preserve">
              <source>We'll need to let SharePoint now what webhook URL we're using.</source>
              <target state="final">We'll need to let SharePoint now what webhook URL we're using.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="137" translate="no" xml:space="preserve">
              <source>To so let's start by copying the Azure Function URL:</source>
              <target state="final">To so let's start by copying the Azure Function URL:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="10" adjWordcount="10" curWordcount="10"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Azure Function authorization codes</source>
          <target state="final">Azure 関数の承認コード</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <group id="paragraph-109" merged-trans="yes">
          <trans-unit id="p109" translate="yes" xml:space="preserve">
            <source>To avoid unathorized usage of your Azure Function the caller will need to specify a code when calling your function. This code can be retreived via the <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept> screen:</source>
            <target state="final">Azure 関数の不正使用を避けるため、呼び出し元は、関数を呼び出すときにコードを指定する必要があります。このコードは <bpt id="p1">**</bpt>[管理]<ept id="p1">**</ept> 画面から取得できます。</target>
          <note from="bb-metadata"> wordcount="29" adjWordcount="29" curWordcount="29"</note></trans-unit>
          <group id="sentence-109">
            <trans-unit id="139" translate="no" xml:space="preserve">
              <source>To avoid unathorized usage of your Azure Function the caller will need to specify a code when calling your function.</source>
              <target state="final">To avoid unathorized usage of your Azure Function the caller will need to specify a code when calling your function.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
            <trans-unit id="140" translate="no" xml:space="preserve">
              <source>This code can be retreived via the <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept> screen:</source>
              <target state="final">This code can be retreived via the <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept> screen:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Azure Function webhook URL</source>
          <target state="final">Azure 関数の Webhook URL</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>So in our case the webhook URL to use is the following: <ph id="ph1">`https://pnp-functions.azurewebsites.net/api/spwebhookfunction?code=wyx9iAxp3o7fdGFZTbnp9Kfc5o2UhlzwgSOT/XGGM6QZcdYYa/o9aw==`</ph></source>
          <target state="final">今回の場合、使用する Webhook URL は <ph id="ph1">`https://pnp-functions.azurewebsites.net/api/spwebhookfunction?code=wyx9iAxp3o7fdGFZTbnp9Kfc5o2UhlzwgSOT/XGGM6QZcdYYa/o9aw==`</ph> です。</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
      </group>
    </body>
  </file>
</xliff>