<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="extending-webpack-in-build-pipeline.md" source-language="en-US" target-language="ko-KR" build-num="-2075605014">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[eyJub2RlcyI6W3sicG9zIjpbMiw1N10sImNvbnRlbnQiOiJFeHRlbmRpbmcgd2VicGFjayBpbiB0aGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgdG9vbGNoYWluIiwibGlua2lmeSI6IkV4dGVuZGluZyB3ZWJwYWNrIGluIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB0b29sY2hhaW4iLCJub2RlcyI6W3siY29udGVudCI6IkV4dGVuZGluZyB3ZWJwYWNrIGluIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB0b29sY2hhaW4iLCJwb3MiOlswLDU1XX1dfSx7InBvcyI6WzYwLDI1MV0sImNvbnRlbnQiOiI8YnB0IGlkPVwicDFcIj4qKjwvYnB0Pk5vdGU6PGVwdCBpZD1cInAxXCI+Kio8L2VwdD4gVGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3IGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4gU2hhcmVQb2ludCBGcmFtZXdvcmsgY2xpZW50LXNpZGUgd2ViIHBhcnRzIGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdXNlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiIsIm5vZGVzIjpbeyJjb250ZW50IjoiPGJwdCBpZD1cInAxXCI+Kio8L2JwdD5Ob3RlOjxlcHQgaWQ9XCJwMVwiPioqPC9lcHQ+IFRoZSBTaGFyZVBvaW50IEZyYW1ld29yayBpcyBjdXJyZW50bHkgaW4gcHJldmlldyBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2UuIiwicG9zIjpbMCw4NF0sInNvdXJjZSI6IioqTm90ZToqKiBUaGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgaXMgY3VycmVudGx5IGluIHByZXZpZXcgYW5kIGlzIHN1YmplY3QgdG8gY2hhbmdlLiJ9LHsiY29udGVudCI6IlNoYXJlUG9pbnQgRnJhbWV3b3JrIGNsaWVudC1zaWRlIHdlYiBwYXJ0cyBhcmUgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgZm9yIHVzZSBpbiBwcm9kdWN0aW9uIGVudmlyb25tZW50cy4iLCJwb3MiOls4NSwxOTFdfV0sImlzUGFyYWdyYXBoIjp0cnVlLCJzb3VyY2UiOiIqKk5vdGU6KiogVGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3IGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4gU2hhcmVQb2ludCBGcmFtZXdvcmsgY2xpZW50LXNpZGUgd2ViIHBhcnRzIGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdXNlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiJ9LHsicG9zIjpbMjUzLDQ3OV0sImNvbnRlbnQiOiI8YnB0IGlkPVwicDFcIj5bPC9icHQ+V2VicGFjazxlcHQgaWQ9XCJwMVwiPl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby8pPC9lcHQ+IGlzIGEgSmF2YVNjcmlwdCBtb2R1bGUgYnVuZGxlciB0aGF0IHRha2VzIHlvdXIgSmF2YVNjcmlwdCBmaWxlcyBhbmQgaXRzIGRlcGVuZGVuY2llcyBhbmQgZ2VuZXJhdGVzIG9uZSBvciBtb3JlIEphdmFTY3JpcHQgYnVuZGxlcyBzbyB5b3UgY2FuIGxvYWQgZGlmZmVyZW50IGJ1bmRsZXMgZm9yIGRpZmZlcmVudCBzY2VuYXJpb3MuIiwic291cmNlIjoiW1dlYnBhY2tdKGh0dHBzOi8vd2VicGFjay5naXRodWIuaW8vKSBpcyBhIEphdmFTY3JpcHQgbW9kdWxlIGJ1bmRsZXIgdGhhdCB0YWtlcyB5b3VyIEphdmFTY3JpcHQgZmlsZXMgYW5kIGl0cyBkZXBlbmRlbmNpZXMgYW5kIGdlbmVyYXRlcyBvbmUgb3IgbW9yZSBKYXZhU2NyaXB0IGJ1bmRsZXMgc28geW91IGNhbiBsb2FkIGRpZmZlcmVudCBidW5kbGVzIGZvciBkaWZmZXJlbnQgc2NlbmFyaW9zLiJ9LHsiY29udGVudCI6IlRoZSBmcmFtZXdvcmsgdG9vbCBjaGFpbiB1c2VzIENvbW1vbkpTIGZvciBidW5kbGluZy4gVGhpcyBlbmFibGVzIHlvdSB0byBkZWZpbmUgbW9kdWxlcyBhbmQgd2hlcmUgeW91IHdhbnQgdG8gdXNlIHRoZW0uIFRoZSB0b29sIGNoYWluIGFsc28gdXNlcyBTeXN0ZW1KUywgYSB1bml2ZXJzYWwgbW9kdWxlIGxvYWRlciwgdG8gbG9hZCB5b3VyIG1vZHVsZXMuIFRoaXMgaGVscHMgeW91IHRvIHNjb3BlIHlvdXIgd2ViIHBhcnRzIGJ5IG1ha2luZyBzdXJlIHRoYXQgZWFjaCB3ZWIgcGFydCBpcyBleGVjdXRlZCBpbiBpdHMgb3duIG5hbWVzcGFjZS4iLCJwb3MiOls0ODEsNzkxXSwibm9kZXMiOlt7ImNvbnRlbnQiOiJUaGUgZnJhbWV3b3JrIHRvb2wgY2hhaW4gdXNlcyBDb21tb25KUyBmb3IgYnVuZGxpbmcuIiwicG9zIjpbMCw1Ml19LHsiY29udGVudCI6IlRoaXMgZW5hYmxlcyB5b3UgdG8gZGVmaW5lIG1vZHVsZXMgYW5kIHdoZXJlIHlvdSB3YW50IHRvIHVzZSB0aGVtLiIsInBvcyI6WzUzLDExOV19LHsiY29udGVudCI6IlRoZSB0b29sIGNoYWluIGFsc28gdXNlcyBTeXN0ZW1KUywgYSB1bml2ZXJzYWwgbW9kdWxlIGxvYWRlciwgdG8gbG9hZCB5b3VyIG1vZHVsZXMuIiwicG9zIjpbMTIwLDIwM119LHsiY29udGVudCI6IlRoaXMgaGVscHMgeW91IHRvIHNjb3BlIHlvdXIgd2ViIHBhcnRzIGJ5IG1ha2luZyBzdXJlIHRoYXQgZWFjaCB3ZWIgcGFydCBpcyBleGVjdXRlZCBpbiBpdHMgb3duIG5hbWVzcGFjZS4iLCJwb3MiOlsyMDQsMzEwXX1dLCJpc1BhcmFncmFwaCI6dHJ1ZX0seyJjb250ZW50IjoiT25lIGNvbW1vbiB0YXNrIHlvdSB3b3VsZCB3YW50IHRvIGFkZCB0byB0aGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgdG9vbGNoYWluIGlzIHRvIGV4dGVuZCB0aGUgd2VicGFjayBjb25maWd1cmF0aW9uIHdpdGggY3VzdG9tIGxvYWRlcnMgYW5kIHBsdWdpbnMuIiwicG9zIjpbNzkzLDk0MF19LHsicG9zIjpbOTQ1LDk2Nl0sImNvbnRlbnQiOiJVc2luZyB3ZWJwYWNrIGxvYWRlcnMiLCJsaW5raWZ5IjoiVXNpbmcgd2VicGFjayBsb2FkZXJzIiwibm9kZXMiOlt7ImNvbnRlbnQiOiJVc2luZyB3ZWJwYWNrIGxvYWRlcnMiLCJwb3MiOlswLDIxXX1dfSx7InBvcyI6Wzk2NywxNDIxXSwiY29udGVudCI6IlRoZXJlIGFyZSBtYW55IGNhc2VzIHdoZXJlIG9uZSB3b3VsZCBsaWtlIHRvIGltcG9ydCBhbmQgdXRpbGl6ZSBhIG5vbi1KYXZhU2NyaXB0IHJlc291cmNlIGR1cmluZyBkZXZlbG9wbWVudCwgdHlwaWNhbGx5IHRoaXMgaXMgZG9uZSB3aXRoIGltYWdlcyBvciB0ZW1wbGF0ZXMuIEEgPGJwdCBpZD1cInAxXCI+WzwvYnB0PndlYnBhY2sgbG9hZGVyPGVwdCBpZD1cInAxXCI+XShodHRwczovL3dlYnBhY2suZ2l0aHViLmlvL2RvY3MvbG9hZGVycy5odG1sKTwvZXB0PiB3aWxsIGNvbnZlcnQgdGhlIHJlc291cmNlIGludG8gc29tZXRoaW5nIHRoYXQgY2FuIGJlIHV0aWxpemVkIGJ5IHlvdXIgSmF2YVNjcmlwdCBhcHBsaWNhdGlvbi4gRm9yIGV4YW1wbGUsIGEgTWFya2Rvd24gdGVtcGxhdGUgbWF5IGJlIGNvbXBpbGVkIGFuZCBjb252ZXJ0ZWQgdG8gYSB0ZXh0IHN0cmluZywgd2hpbGUgYSBpbWFnZSByZXNvdXJjZSBtYXkgYmUgY29udmVydGVkIHRvIEJhc2U2NCBpbWFnZS4iLCJub2RlcyI6W3siY29udGVudCI6IlRoZXJlIGFyZSBtYW55IGNhc2VzIHdoZXJlIG9uZSB3b3VsZCBsaWtlIHRvIGltcG9ydCBhbmQgdXRpbGl6ZSBhIG5vbi1KYXZhU2NyaXB0IHJlc291cmNlIGR1cmluZyBkZXZlbG9wbWVudCwgdHlwaWNhbGx5IHRoaXMgaXMgZG9uZSB3aXRoIGltYWdlcyBvciB0ZW1wbGF0ZXMuIiwicG9zIjpbMCwxNThdfSx7ImNvbnRlbnQiOiJBIDxicHQgaWQ9XCJwMVwiPls8L2JwdD53ZWJwYWNrIGxvYWRlcjxlcHQgaWQ9XCJwMVwiPl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby9kb2NzL2xvYWRlcnMuaHRtbCk8L2VwdD4gd2lsbCBjb252ZXJ0IHRoZSByZXNvdXJjZSBpbnRvIHNvbWV0aGluZyB0aGF0IGNhbiBiZSB1dGlsaXplZCBieSB5b3VyIEphdmFTY3JpcHQgYXBwbGljYXRpb24uIiwicG9zIjpbMTU5LDMxNl0sInNvdXJjZSI6IiBBIFt3ZWJwYWNrIGxvYWRlcl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby9kb2NzL2xvYWRlcnMuaHRtbCkgd2lsbCBjb252ZXJ0IHRoZSByZXNvdXJjZSBpbnRvIHNvbWV0aGluZyB0aGF0IGNhbiBiZSB1dGlsaXplZCBieSB5b3VyIEphdmFTY3JpcHQgYXBwbGljYXRpb24uIn0seyJjb250ZW50IjoiRm9yIGV4YW1wbGUsIGEgTWFya2Rvd24gdGVtcGxhdGUgbWF5IGJlIGNvbXBpbGVkIGFuZCBjb252ZXJ0ZWQgdG8gYSB0ZXh0IHN0cmluZywgd2hpbGUgYSBpbWFnZSByZXNvdXJjZSBtYXkgYmUgY29udmVydGVkIHRvIEJhc2U2NCBpbWFnZS4iLCJwb3MiOlszMTcsNDU0XX1dLCJpc1BhcmFncmFwaCI6dHJ1ZSwic291cmNlIjoiVGhlcmUgYXJlIG1hbnkgY2FzZXMgd2hlcmUgb25lIHdvdWxkIGxpa2UgdG8gaW1wb3J0IGFuZCB1dGlsaXplIGEgbm9uLUphdmFTY3JpcHQgcmVzb3VyY2UgZHVyaW5nIGRldmVsb3BtZW50LCB0eXBpY2FsbHkgdGhpcyBpcyBkb25lIHdpdGggaW1hZ2VzIG9yIHRlbXBsYXRlcy4gQSBbd2VicGFjayBsb2FkZXJdKGh0dHBzOi8vd2VicGFjay5naXRodWIuaW8vZG9jcy9sb2FkZXJzLmh0bWwpIHdpbGwgY29udmVydCB0aGUgcmVzb3VyY2UgaW50byBzb21ldGhpbmcgdGhhdCBjYW4gYmUgdXRpbGl6ZWQgYnkgeW91ciBKYXZhU2NyaXB0IGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgYSBNYXJrZG93biB0ZW1wbGF0ZSBtYXkgYmUgY29tcGlsZWQgYW5kIGNvbnZlcnRlZCB0byBhIHRleHQgc3RyaW5nLCB3aGlsZSBhIGltYWdlIHJlc291cmNlIG1heSBiZSBjb252ZXJ0ZWQgdG8gQmFzZTY0IGltYWdlLiJ9LHsiY29udGVudCI6IlRoZXJlIGFyZSBhIG51bWJlciBvZiB1c2VmdWwgbG9hZGVycywgc2V2ZXJhbCBvZiB3aGljaCBhcmUgYWxyZWFkeSB1c2VkIGJ5IHRoZSBzdGFuZGFyZCBTaGFyZVBvaW50IEZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24sIHN1Y2ggYXM6IiwicG9zIjpbMTQyMywxNTYzXX0seyJjb250ZW50IjoiaHRtbC1sb2FkZXIiLCJwb3MiOlsxNTY3LDE1NzhdfSx7ImNvbnRlbnQiOiJqc29uLWxvYWRlciIsInBvcyI6WzE1ODEsMTU5Ml19LHsiY29udGVudCI6ImxvYWRlci1sb2FkLXRoZW1lZC1zdHlsZXMiLCJwb3MiOlsxNTk1LDE2MjBdfSx7InBvcyI6WzE2MjIsMTgzNV0sImNvbnRlbnQiOiJFeHRlbmRpbmcgdGhlIGZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24gd2l0aCBjdXN0b20gbG9hZGVycyBpcyBhIHN0cmFpZ2h0Zm9yd2FyZCBwcm9jZXNzIHdoaWNoIGlzIGRvY3VtZW50ZWQgPGJwdCBpZD1cInAxXCI+WzwvYnB0PmhlcmUgaW4gdGhlIHdlYnBhY2sgZG9jdW1lbnRhdGlvbjxlcHQgaWQ9XCJwMVwiPl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby9kb2NzL2xvYWRlcnMuaHRtbCN3cml0aW5nLWEtbG9hZGVyKTwvZXB0Pi4iLCJzb3VyY2UiOiJFeHRlbmRpbmcgdGhlIGZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24gd2l0aCBjdXN0b20gbG9hZGVycyBpcyBhIHN0cmFpZ2h0Zm9yd2FyZCBwcm9jZXNzIHdoaWNoIGlzIGRvY3VtZW50ZWQgW2hlcmUgaW4gdGhlIHdlYnBhY2sgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby9kb2NzL2xvYWRlcnMuaHRtbCN3cml0aW5nLWEtbG9hZGVyKS4ifSx7InBvcyI6WzE4MzksMTk2MV0sImNvbnRlbnQiOiJZb3UgY2FuIGZpbmQgbW9yZSBkZXRhaWxzIG9uIHRoZSBsb2FkZXJzIGZyb20gPGJwdCBpZD1cInAxXCI+WzwvYnB0PndlYnBhY2sgbG9hZGVycyBkb2N1bWVudGF0aW9uPGVwdCBpZD1cInAxXCI+XShodHRwczovL3dlYnBhY2suZ2l0aHViLmlvL2RvY3MvbG9hZGVycy5odG1sKTwvZXB0PiIsInNvdXJjZSI6IllvdSBjYW4gZmluZCBtb3JlIGRldGFpbHMgb24gdGhlIGxvYWRlcnMgZnJvbSBbd2VicGFjayBsb2FkZXJzIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vd2VicGFjay5naXRodWIuaW8vZG9jcy9sb2FkZXJzLmh0bWwpIn0seyJwb3MiOlsxOTY2LDIwMDhdLCJjb250ZW50IjoiRXhhbXBsZTogVXNpbmcgdGhlIG1hcmtkb3duLWxvYWRlciBwYWNrYWdlIiwibGlua2lmeSI6IkV4YW1wbGU6IFVzaW5nIHRoZSBtYXJrZG93bi1sb2FkZXIgcGFja2FnZSIsIm5vZGVzIjpbeyJjb250ZW50IjoiRXhhbXBsZTogVXNpbmcgdGhlIG1hcmtkb3duLWxvYWRlciBwYWNrYWdlIiwicG9zIjpbMCw0Ml19XX0seyJwb3MiOlsyMDA5LDIyMDBdLCJjb250ZW50IjoiQXMgYW4gZXhhbXBsZSwgbGV0J3MgdXNlIHRoZSA8YnB0IGlkPVwicDFcIj5bPC9icHQ+bWFya2Rvd24tbG9hZGVyIHBhY2thZ2U8ZXB0IGlkPVwicDFcIj5dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL21hcmtkb3duLWxvYWRlcik8L2VwdD4uICBJdCdzIGEgbG9hZGVyIHdoaWNoIGFsbG93cyB5b3UgdG8gcmVmZXJlbmNlIGFuIDxwaCBpZD1cInBoMVwiPmAubWRgPC9waD4gZmlsZSBhbmQgb3V0cHV0IGl0IGFzIEhUTUwgc3RyaW5nLiIsIm5vZGVzIjpbeyJjb250ZW50IjoiQXMgYW4gZXhhbXBsZSwgbGV0J3MgdXNlIHRoZSA8YnB0IGlkPVwicDFcIj5bPC9icHQ+bWFya2Rvd24tbG9hZGVyIHBhY2thZ2U8ZXB0IGlkPVwicDFcIj5dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL21hcmtkb3duLWxvYWRlcik8L2VwdD4uIiwicG9zIjpbMCwxMDJdLCJzb3VyY2UiOiJBcyBhbiBleGFtcGxlLCBsZXQncyB1c2UgdGhlIFttYXJrZG93bi1sb2FkZXIgcGFja2FnZV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbWFya2Rvd24tbG9hZGVyKS4ifSx7ImNvbnRlbnQiOiJJdCdzIGEgbG9hZGVyIHdoaWNoIGFsbG93cyB5b3UgdG8gcmVmZXJlbmNlIGFuIDxwaCBpZD1cInBoMVwiPmAubWRgPC9waD4gZmlsZSBhbmQgb3V0cHV0IGl0IGFzIEhUTUwgc3RyaW5nLiIsInBvcyI6WzEwNCwxOTFdLCJzb3VyY2UiOiIgIEl0J3MgYSBsb2FkZXIgd2hpY2ggYWxsb3dzIHlvdSB0byByZWZlcmVuY2UgYW4gYC5tZGAgZmlsZSBhbmQgb3V0cHV0IGl0IGFzIEhUTUwgc3RyaW5nLiJ9XSwiaXNQYXJhZ3JhcGgiOnRydWUsInNvdXJjZSI6IkFzIGFuIGV4YW1wbGUsIGxldCdzIHVzZSB0aGUgW21hcmtkb3duLWxvYWRlciBwYWNrYWdlXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9tYXJrZG93bi1sb2FkZXIpLiAgSXQncyBhIGxvYWRlciB3aGljaCBhbGxvd3MgeW91IHRvIHJlZmVyZW5jZSBhbiBgLm1kYCBmaWxlIGFuZCBvdXRwdXQgaXQgYXMgSFRNTCBzdHJpbmcuIn0seyJwb3MiOlsyMjAyLDIyOTBdLCJjb250ZW50IjoiWW91IGNhbiBkb3dubG9hZCB0aGUgY29tcGxldGVkIHNhbXBsZSA8YnB0IGlkPVwicDFcIj5bPC9icHQ+aGVyZTxlcHQgaWQ9XCJwMVwiPl0oaHR0cHM6Ly9ha2EubXMvc3BmeC1leHRlbmQtd2VicGFjay1zYW1wbGUpPC9lcHQ+LiIsInNvdXJjZSI6IllvdSBjYW4gZG93bmxvYWQgdGhlIGNvbXBsZXRlZCBzYW1wbGUgW2hlcmVdKGh0dHBzOi8vYWthLm1zL3NwZngtZXh0ZW5kLXdlYnBhY2stc2FtcGxlKS4ifSx7InBvcyI6WzIyOTYsMjMyNF0sImNvbnRlbnQiOiJTdGVwIDEgLSBJbnN0YWxsIHRoZSBwYWNrYWdlIiwibGlua2lmeSI6IlN0ZXAgMSAtIEluc3RhbGwgdGhlIHBhY2thZ2UiLCJub2RlcyI6W3siY29udGVudCI6IlN0ZXAgMSAtIEluc3RhbGwgdGhlIHBhY2thZ2UiLCJwb3MiOlswLDI4XX1dfSx7ImNvbnRlbnQiOiJMZXQncyByZWZlcmVuY2UgbWFya2Rvd24tbG9hZGVyIGluIG91ciBwcm9qZWN0LiIsInBvcyI6WzIzMjUsMjM3Ml19LHsicG9zIjpbMjQxNywyNDQzXSwiY29udGVudCI6IlN0ZXAgMiAtIENvbmZpZ3VyZSBXZWJwYWNrIiwibGlua2lmeSI6IlN0ZXAgMiAtIENvbmZpZ3VyZSBXZWJwYWNrIiwibm9kZXMiOlt7ImNvbnRlbnQiOiJTdGVwIDIgLSBDb25maWd1cmUgV2VicGFjayIsInBvcyI6WzAsMjZdfV19LHsiY29udGVudCI6Ik5vdyB0aGF0IHdlIGhhdmUgdGhlIHBhY2thZ2UgaW5zdGFsbGVkLCBsZXRzIG5vdyBjb25maWd1cmUgdGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIHdlYnBhY2sgY29uZmlndXJhdGlvbiB0byBpbmNsdWRlIHRoZSBtYXJrZG93bi1sb2FkZXIuIiwicG9zIjpbMjQ0NSwyNTgyXX0seyJwb3MiOlsyNTg1LDI3NDRdLCJjb250ZW50IjoiSW4gdGhlIDxicHQgaWQ9XCJwMVwiPls8L2JwdD5kb2N1bWVudGF0aW9uIG9mIG1hcmtkb3duLWxvYWRlcjxlcHQgaWQ9XCJwMVwiPl0oaHR0cHM6Ly9naXRodWIuY29tL3BlZXJpZ29uL21hcmtkb3duLWxvYWRlcik8L2VwdD4sIGl0IHNob3dzIGhvdyB0byBleHRlbmQgdGhlIHdlYnBhY2sgY29uZmlndXJhdGlvbiB0byBpbmNsdWRlIHRoZSBsb2FkZXI6Iiwic291cmNlIjoiSW4gdGhlIFtkb2N1bWVudGF0aW9uIG9mIG1hcmtkb3duLWxvYWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL3BlZXJpZ29uL21hcmtkb3duLWxvYWRlciksIGl0IHNob3dzIGhvdyB0byBleHRlbmQgdGhlIHdlYnBhY2sgY29uZmlndXJhdGlvbiB0byBpbmNsdWRlIHRoZSBsb2FkZXI6In0seyJjb250ZW50IjoiV2Ugd2lsbCB1c2UgdGhpcyBpbmZvcm1hdGlvbiB0byBjb25maWd1cmUgaXQgaW4gb3VyIHByb2plY3QuIiwicG9zIjpbMjg1NSwyOTE1XX0seyJwb3MiOlsyOTE4LDMzMzFdLCJjb250ZW50IjoiSW4gb3JkZXIgdG8gYWRkIHRoaXMgY3VzdG9tIGxvYWRlciBpbnRvIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24sIHdlIHdpbGwgbmVlZCB0byBpbnN0cnVjdCB0aGUgYnVpbGQgdGFzayB0byBjb25maWd1cmUgd2VicGFjay4gVGhlIGJ1aWxkIHRhc2tzIGFyZSBkZWZpbmVkIGluIHRoZSBndWxwIGZpbGUgLSA8cGggaWQ9XCJwaDFcIj5gZ3VscGZpbGUuanNgPC9waD4gLSB3aGljaCBpcyBsb2NhdGVkIGF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdC4gU2hhcmVQb2ludCBGcmFtZXdvcmsgdXNlcyA8YnB0IGlkPVwicDFcIj5bPC9icHQ+Z3VscDxlcHQgaWQ9XCJwMVwiPl0oaHR0cDovL2d1bHBqcy5jb20vKTwvZXB0PiBhcyBpdHMgdGFzayBydW5uZXIgYW5kIGhlbmNlIHdlIHVzZSBpdCB0byBkZWZpbmUgYW5kIHJlZ2lzdGVyIGN1c3RvbSB0YXNrcyB3aXRoIHRoZSBndWxwIHRhc2sgcnVubmVyLiIsIm5vZGVzIjpbeyJjb250ZW50IjoiSW4gb3JkZXIgdG8gYWRkIHRoaXMgY3VzdG9tIGxvYWRlciBpbnRvIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24sIHdlIHdpbGwgbmVlZCB0byBpbnN0cnVjdCB0aGUgYnVpbGQgdGFzayB0byBjb25maWd1cmUgd2VicGFjay4iLCJwb3MiOlswLDE0OV19LHsiY29udGVudCI6IlRoZSBidWlsZCB0YXNrcyBhcmUgZGVmaW5lZCBpbiB0aGUgZ3VscCBmaWxlIC0gPHBoIGlkPVwicGgxXCI+YGd1bHBmaWxlLmpzYDwvcGg+IC0gd2hpY2ggaXMgbG9jYXRlZCBhdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QuIiwicG9zIjpbMTUwLDI1OF0sInNvdXJjZSI6IiBUaGUgYnVpbGQgdGFza3MgYXJlIGRlZmluZWQgaW4gdGhlIGd1bHAgZmlsZSAtIGBndWxwZmlsZS5qc2AgLSB3aGljaCBpcyBsb2NhdGVkIGF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdC4ifSx7ImNvbnRlbnQiOiJTaGFyZVBvaW50IEZyYW1ld29yayB1c2VzIDxicHQgaWQ9XCJwMVwiPls8L2JwdD5ndWxwPGVwdCBpZD1cInAxXCI+XShodHRwOi8vZ3VscGpzLmNvbS8pPC9lcHQ+IGFzIGl0cyB0YXNrIHJ1bm5lciBhbmQgaGVuY2Ugd2UgdXNlIGl0IHRvIGRlZmluZSBhbmQgcmVnaXN0ZXIgY3VzdG9tIHRhc2tzIHdpdGggdGhlIGd1bHAgdGFzayBydW5uZXIuIiwicG9zIjpbMjU5LDQxM10sInNvdXJjZSI6IiBTaGFyZVBvaW50IEZyYW1ld29yayB1c2VzIFtndWxwXShodHRwOi8vZ3VscGpzLmNvbS8pIGFzIGl0cyB0YXNrIHJ1bm5lciBhbmQgaGVuY2Ugd2UgdXNlIGl0IHRvIGRlZmluZSBhbmQgcmVnaXN0ZXIgY3VzdG9tIHRhc2tzIHdpdGggdGhlIGd1bHAgdGFzayBydW5uZXIuIn1dLCJpc1BhcmFncmFwaCI6dHJ1ZSwic291cmNlIjoiSW4gb3JkZXIgdG8gYWRkIHRoaXMgY3VzdG9tIGxvYWRlciBpbnRvIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24sIHdlIHdpbGwgbmVlZCB0byBpbnN0cnVjdCB0aGUgYnVpbGQgdGFzayB0byBjb25maWd1cmUgd2VicGFjay4gVGhlIGJ1aWxkIHRhc2tzIGFyZSBkZWZpbmVkIGluIHRoZSBndWxwIGZpbGUgLSBgZ3VscGZpbGUuanNgIC0gd2hpY2ggaXMgbG9jYXRlZCBhdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QuIFNoYXJlUG9pbnQgRnJhbWV3b3JrIHVzZXMgW2d1bHBdKGh0dHA6Ly9ndWxwanMuY29tLykgYXMgaXRzIHRhc2sgcnVubmVyIGFuZCBoZW5jZSB3ZSB1c2UgaXQgdG8gZGVmaW5lIGFuZCByZWdpc3RlciBjdXN0b20gdGFza3Mgd2l0aCB0aGUgZ3VscCB0YXNrIHJ1bm5lci4ifSx7InBvcyI6WzMzMzMsMzQyMl0sImNvbnRlbnQiOiJFZGl0IHRoZSA8cGggaWQ9XCJwaDFcIj5gZ3VscGZpbGUuanNgPC9waD4gYW5kIGFkZCB0aGUgZm9sbG93aW5nIGNvZGUgcmlnaHQgYmVmb3JlIDxwaCBpZD1cInBoMlwiPmBidWlsZC5pbml0aWFsaXplKGd1bHApO2A8L3BoPjoiLCJzb3VyY2UiOiJFZGl0IHRoZSBgZ3VscGZpbGUuanNgIGFuZCBhZGQgdGhlIGZvbGxvd2luZyBjb2RlIHJpZ2h0IGJlZm9yZSBgYnVpbGQuaW5pdGlhbGl6ZShndWxwKTtgOiJ9LHsicG9zIjpbMzY5NSwzOTg5XSwiY29udGVudCI6Ik5vdGljZSB0aGF0IHdlIHNpbXBseSBwdXNoIHRoZSBsb2FkZXIgY29uZmlnIG9udG8gdGhlIGxpc3Qgb2YgZXhpc3RpbmcgbG9hZGVycyBpbiB0aGUgdG9vbGNoYWluLiBJdCdzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3VyIDxwaCBpZD1cInBoMVwiPmBhZGRpdGlvbmFsQ29uZmlndXJhdGlvbmA8L3BoPiBmdW5jdGlvbiBlbmRzIHdpdGggdGhlIDxwaCBpZD1cInBoMlwiPmByZXR1cm4gZ2VuZXJhdGVkQ29uZmlndXJhdGlvbmA8L3BoPiBsaW5lLCBhcyB0aGlzIGVuc3VyZXMgdGhhdCBpdCAgcmV0dXJucyB0aGUgbG9hZGVyIGNvbmZpZ3VyYXRpb24gdG8gdGhlIHRvb2xjaGFpbi4iLCJub2RlcyI6W3siY29udGVudCI6Ik5vdGljZSB0aGF0IHdlIHNpbXBseSBwdXNoIHRoZSBsb2FkZXIgY29uZmlnIG9udG8gdGhlIGxpc3Qgb2YgZXhpc3RpbmcgbG9hZGVycyBpbiB0aGUgdG9vbGNoYWluLiIsInBvcyI6WzAsOTZdfSx7ImNvbnRlbnQiOiJJdCdzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3VyIDxwaCBpZD1cInBoMVwiPmBhZGRpdGlvbmFsQ29uZmlndXJhdGlvbmA8L3BoPiBmdW5jdGlvbiBlbmRzIHdpdGggdGhlIDxwaCBpZD1cInBoMlwiPmByZXR1cm4gZ2VuZXJhdGVkQ29uZmlndXJhdGlvbmA8L3BoPiBsaW5lLCBhcyB0aGlzIGVuc3VyZXMgdGhhdCBpdCAgcmV0dXJucyB0aGUgbG9hZGVyIGNvbmZpZ3VyYXRpb24gdG8gdGhlIHRvb2xjaGFpbi4iLCJwb3MiOls5NywyOTRdLCJzb3VyY2UiOiIgSXQncyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91ciBgYWRkaXRpb25hbENvbmZpZ3VyYXRpb25gIGZ1bmN0aW9uIGVuZHMgd2l0aCB0aGUgYHJldHVybiBnZW5lcmF0ZWRDb25maWd1cmF0aW9uYCBsaW5lLCBhcyB0aGlzIGVuc3VyZXMgdGhhdCBpdCAgcmV0dXJucyB0aGUgbG9hZGVyIGNvbmZpZ3VyYXRpb24gdG8gdGhlIHRvb2xjaGFpbi4ifV0sImlzUGFyYWdyYXBoIjp0cnVlLCJzb3VyY2UiOiJOb3RpY2UgdGhhdCB3ZSBzaW1wbHkgcHVzaCB0aGUgbG9hZGVyIGNvbmZpZyBvbnRvIHRoZSBsaXN0IG9mIGV4aXN0aW5nIGxvYWRlcnMgaW4gdGhlIHRvb2xjaGFpbi4gSXQncyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91ciBgYWRkaXRpb25hbENvbmZpZ3VyYXRpb25gIGZ1bmN0aW9uIGVuZHMgd2l0aCB0aGUgYHJldHVybiBnZW5lcmF0ZWRDb25maWd1cmF0aW9uYCBsaW5lLCBhcyB0aGlzIGVuc3VyZXMgdGhhdCBpdCAgcmV0dXJucyB0aGUgbG9hZGVyIGNvbmZpZ3VyYXRpb24gdG8gdGhlIHRvb2xjaGFpbi4ifSx7ImNvbnRlbnQiOiJXaGlsZSB5b3UgYXJlIGFibGUgdG8gY29tcGxldGVseSByZXBsYWNlIHRoZSB0b29sY2hhaW4ncyBkZWZhdWx0IHdlYnBhY2sgY29uZmlndXJhdGlvbiB1c2luZyB0aGlzIGFwcHJvYWNoLCB0byBnZXQgdGhlIG1heGltdW0gYmVuZWZpdCB3aXRoIHBlcmZvcm1hbmNlIGFuZCBvcHRpbWl6YXRpb24sIGl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byBkbyBzbyB1bmxlc3Mgc3RhdGVkIG90aGVyd2lzZSBpbiB0aGUgZG9jdW1lbnRhdGlvbi4iLCJwb3MiOlszOTk0LDQyNDBdfSx7InBvcyI6WzQyNDcsNDI3Ml0sImNvbnRlbnQiOiJTdGVwIDMgLSBVcGRhdGUgeW91ciBjb2RlIiwibGlua2lmeSI6IlN0ZXAgMyAtIFVwZGF0ZSB5b3VyIGNvZGUiLCJub2RlcyI6W3siY29udGVudCI6IlN0ZXAgMyAtIFVwZGF0ZSB5b3VyIGNvZGUiLCJwb3MiOlswLDI1XX1dfSx7ImNvbnRlbnQiOiJOb3cgdGhhdCB3ZSBoYXZlIGNvbmZpZ3VyZWQgdGhlIGxvYWRlciwgbGV0cyB1cGRhdGUgb3VyIGNvZGUgYW5kIGFkZCBmZXcgZmlsZXMgdG8gdGVzdCB0aGUgc2NlbmFyaW8uIiwicG9zIjpbNDI3Myw0MzczXX0seyJwb3MiOls0Mzc2LDQ0ODNdLCJjb250ZW50IjoiQ3JlYXRlIGEgZmlsZSA8cGggaWQ9XCJwaDFcIj5gbXktbWFya2Rvd24ubWRgPC9waD4gaW4gdGhlIDxwaCBpZD1cInBoMlwiPmBzcmNgPC9waD4gZGlyZWN0b3J5IG9mIHlvdXIgcHJvamVjdCBmb2xkZXIgd2l0aCBzb21lIE1hcmtkb3duIHRleHQgaW4gaXQuIiwic291cmNlIjoiQ3JlYXRlIGEgZmlsZSBgbXktbWFya2Rvd24ubWRgIGluIHRoZSBgc3JjYCBkaXJlY3Rvcnkgb2YgeW91ciBwcm9qZWN0IGZvbGRlciB3aXRoIHNvbWUgTWFya2Rvd24gdGV4dCBpbiBpdC4ifSx7InBvcyI6WzQ2NDQsNDkwMF0sImNvbnRlbnQiOiJXaGVuIHlvdSBidWlsZCB0aGUgcHJvamVjdCwgdGhlIHdlYnBhY2sgbWFya2Rvd24tbG9hZGVyIHdpbGwgY29udmVydCB0aGlzIG1hcmtkb3duIHRleHQgdG8gYSBIVE1MIHN0cmluZy4gVG8gdXNlIHRoaXMgSFRNTCBzdHJpbmcgaW4gYW55IG9mIHlvdXIgc291cmNlIDxwaCBpZD1cInBoMVwiPmAqLnRzYDwvcGg+IGZpbGVzLCBhZGQgdGhlIGZvbGxvd2luZyA8cGggaWQ9XCJwaDJcIj5gcmVxdWlyZSgpYDwvcGg+IGxpbmUgYXQgdGhlIHRvcCBvZiB0aGUgZmlsZSBhZnRlciB5b3VyIGltcG9ydHMsIGZvciBleGFtcGxlOiIsIm5vZGVzIjpbeyJjb250ZW50IjoiV2hlbiB5b3UgYnVpbGQgdGhlIHByb2plY3QsIHRoZSB3ZWJwYWNrIG1hcmtkb3duLWxvYWRlciB3aWxsIGNvbnZlcnQgdGhpcyBtYXJrZG93biB0ZXh0IHRvIGEgSFRNTCBzdHJpbmcuIiwicG9zIjpbMCwxMDVdfSx7ImNvbnRlbnQiOiJUbyB1c2UgdGhpcyBIVE1MIHN0cmluZyBpbiBhbnkgb2YgeW91ciBzb3VyY2UgPHBoIGlkPVwicGgxXCI+YCoudHNgPC9waD4gZmlsZXMsIGFkZCB0aGUgZm9sbG93aW5nIDxwaCBpZD1cInBoMlwiPmByZXF1aXJlKClgPC9waD4gbGluZSBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlIGFmdGVyIHlvdXIgaW1wb3J0cywgZm9yIGV4YW1wbGU6IiwicG9zIjpbMTA2LDI1Nl0sInNvdXJjZSI6IiBUbyB1c2UgdGhpcyBIVE1MIHN0cmluZyBpbiBhbnkgb2YgeW91ciBzb3VyY2UgYCoudHNgIGZpbGVzLCBhZGQgdGhlIGZvbGxvd2luZyBgcmVxdWlyZSgpYCBsaW5lIGF0IHRoZSB0b3Agb2YgdGhlIGZpbGUgYWZ0ZXIgeW91ciBpbXBvcnRzLCBmb3IgZXhhbXBsZToifV0sImlzUGFyYWdyYXBoIjp0cnVlLCJzb3VyY2UiOiJXaGVuIHlvdSBidWlsZCB0aGUgcHJvamVjdCwgdGhlIHdlYnBhY2sgbWFya2Rvd24tbG9hZGVyIHdpbGwgY29udmVydCB0aGlzIG1hcmtkb3duIHRleHQgdG8gYSBIVE1MIHN0cmluZy4gVG8gdXNlIHRoaXMgSFRNTCBzdHJpbmcgaW4gYW55IG9mIHlvdXIgc291cmNlIGAqLnRzYCBmaWxlcywgYWRkIHRoZSBmb2xsb3dpbmcgYHJlcXVpcmUoKWAgbGluZSBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlIGFmdGVyIHlvdXIgaW1wb3J0cywgZm9yIGV4YW1wbGU6In0seyJwb3MiOls0OTk2LDUyOTVdLCJjb250ZW50IjoiV2VicGFjayBieSBkZWZhdWx0IHdpbGwgbG9vayBpbiB0aGUgPHBoIGlkPVwicGgxXCI+YGxpYmA8L3BoPiBmb2xkZXIgZm9yIHRoZSBmaWxlLCBidXQgYnkgZGVmYXVsdCA8cGggaWQ9XCJwaDJcIj5gLm1kYDwvcGg+IGZpbGVzIGRvbid0IGdldCBjb3BpZWQgdG8gdGhlIDxwaCBpZD1cInBoM1wiPmBsaWJgPC9waD4gZm9sZGVyLCBtZWFuaW5nIHdlIG5lZWQgdG8gY3JlYXRlIGEgcmF0aGVyIGxlbmd0aHkgcmVsYXRpdmUgcGF0aC4gV2UgY2FuIGNvbnRyb2wgdGhpcyBzZXR0aW5nIGJ5IGRlZmluaW5nIGEgY29uZmlnIGZpbGUgdG8gdGVsbCB0aGUgdG9vbGNoYWluIHRvIGNvcHkgPHBoIGlkPVwicGg0XCI+YG1kYDwvcGg+IGZpbGVzIHRvIHRoZSBsaWIgZm9sZGVyLiIsIm5vZGVzIjpbeyJjb250ZW50IjoiV2VicGFjayBieSBkZWZhdWx0IHdpbGwgbG9vayBpbiB0aGUgPHBoIGlkPVwicGgxXCI+YGxpYmA8L3BoPiBmb2xkZXIgZm9yIHRoZSBmaWxlLCBidXQgYnkgZGVmYXVsdCA8cGggaWQ9XCJwaDJcIj5gLm1kYDwvcGg+IGZpbGVzIGRvbid0IGdldCBjb3BpZWQgdG8gdGhlIDxwaCBpZD1cInBoM1wiPmBsaWJgPC9waD4gZm9sZGVyLCBtZWFuaW5nIHdlIG5lZWQgdG8gY3JlYXRlIGEgcmF0aGVyIGxlbmd0aHkgcmVsYXRpdmUgcGF0aC4iLCJwb3MiOlswLDE4NV0sInNvdXJjZSI6IldlYnBhY2sgYnkgZGVmYXVsdCB3aWxsIGxvb2sgaW4gdGhlIGBsaWJgIGZvbGRlciBmb3IgdGhlIGZpbGUsIGJ1dCBieSBkZWZhdWx0IGAubWRgIGZpbGVzIGRvbid0IGdldCBjb3BpZWQgdG8gdGhlIGBsaWJgIGZvbGRlciwgbWVhbmluZyB3ZSBuZWVkIHRvIGNyZWF0ZSBhIHJhdGhlciBsZW5ndGh5IHJlbGF0aXZlIHBhdGguIn0seyJjb250ZW50IjoiV2UgY2FuIGNvbnRyb2wgdGhpcyBzZXR0aW5nIGJ5IGRlZmluaW5nIGEgY29uZmlnIGZpbGUgdG8gdGVsbCB0aGUgdG9vbGNoYWluIHRvIGNvcHkgPHBoIGlkPVwicGgxXCI+YG1kYDwvcGg+IGZpbGVzIHRvIHRoZSBsaWIgZm9sZGVyLiIsInBvcyI6WzE4NiwyOTldLCJzb3VyY2UiOiIgV2UgY2FuIGNvbnRyb2wgdGhpcyBzZXR0aW5nIGJ5IGRlZmluaW5nIGEgY29uZmlnIGZpbGUgdG8gdGVsbCB0aGUgdG9vbGNoYWluIHRvIGNvcHkgYG1kYCBmaWxlcyB0byB0aGUgbGliIGZvbGRlci4ifV0sImlzUGFyYWdyYXBoIjp0cnVlLCJzb3VyY2UiOiJXZWJwYWNrIGJ5IGRlZmF1bHQgd2lsbCBsb29rIGluIHRoZSBgbGliYCBmb2xkZXIgZm9yIHRoZSBmaWxlLCBidXQgYnkgZGVmYXVsdCBgLm1kYCBmaWxlcyBkb24ndCBnZXQgY29waWVkIHRvIHRoZSBgbGliYCBmb2xkZXIsIG1lYW5pbmcgd2UgbmVlZCB0byBjcmVhdGUgYSByYXRoZXIgbGVuZ3RoeSByZWxhdGl2ZSBwYXRoLiBXZSBjYW4gY29udHJvbCB0aGlzIHNldHRpbmcgYnkgZGVmaW5pbmcgYSBjb25maWcgZmlsZSB0byB0ZWxsIHRoZSB0b29sY2hhaW4gdG8gY29weSBgbWRgIGZpbGVzIHRvIHRoZSBsaWIgZm9sZGVyLiJ9LHsicG9zIjpbNTI5OCw1NjM0XSwiY29udGVudCI6IkNyZWF0ZSBhIGZpbGUgPHBoIGlkPVwicGgxXCI+YGNvcHktc3RhdGljLWFzc2V0cy5qc29uYDwvcGg+IGluIHRoZSA8cGggaWQ9XCJwaDJcIj5gY29uZmlnYDwvcGg+IGRpcmVjdG9yeSB0byB0ZWxsIHRoZSBidWlsZCBzeXN0ZW0gdG8gY29weSBzb21lIGFkZGl0aW9uYWwgZmlsZXMgZnJvbSA8cGggaWQ9XCJwaDNcIj5gc3JjYDwvcGg+IHRvIDxwaCBpZD1cInBoNFwiPmBsaWJgPC9waD4uIEJ5IGRlZmF1bHQsIHRoaXMgYnVpbGQgdGFzayBjb3BpZXMgZmlsZXMgd2l0aCBleHRlbnNpb25zIHRoYXQgdGhlIGRlZmF1bHQgdG9vbGNoYWluIHdlYnBhY2sgY29uZmlndXJhdGlvbiB1bmRlcnN0YW5kcyAobGlrZSA8cGggaWQ9XCJwaDVcIj5gcG5nYDwvcGg+IGFuZCA8cGggaWQ9XCJwaDZcIj5ganNvbmA8L3BoPiksIHNvIHdlIGp1c3QgbmVlZCB0byB0ZWxsIGl0IHRvIGFsc28gY29weSA8cGggaWQ9XCJwaDdcIj5gbWRgPC9waD4gZmlsZXMuIiwibm9kZXMiOlt7ImNvbnRlbnQiOiJDcmVhdGUgYSBmaWxlIDxwaCBpZD1cInBoMVwiPmBjb3B5LXN0YXRpYy1hc3NldHMuanNvbmA8L3BoPiBpbiB0aGUgPHBoIGlkPVwicGgyXCI+YGNvbmZpZ2A8L3BoPiBkaXJlY3RvcnkgdG8gdGVsbCB0aGUgYnVpbGQgc3lzdGVtIHRvIGNvcHkgc29tZSBhZGRpdGlvbmFsIGZpbGVzIGZyb20gPHBoIGlkPVwicGgzXCI+YHNyY2A8L3BoPiB0byA8cGggaWQ9XCJwaDRcIj5gbGliYDwvcGg+LiIsInBvcyI6WzAsMTQxXSwic291cmNlIjoiQ3JlYXRlIGEgZmlsZSBgY29weS1zdGF0aWMtYXNzZXRzLmpzb25gIGluIHRoZSBgY29uZmlnYCBkaXJlY3RvcnkgdG8gdGVsbCB0aGUgYnVpbGQgc3lzdGVtIHRvIGNvcHkgc29tZSBhZGRpdGlvbmFsIGZpbGVzIGZyb20gYHNyY2AgdG8gYGxpYmAuIn0seyJjb250ZW50IjoiQnkgZGVmYXVsdCwgdGhpcyBidWlsZCB0YXNrIGNvcGllcyBmaWxlcyB3aXRoIGV4dGVuc2lvbnMgdGhhdCB0aGUgZGVmYXVsdCB0b29sY2hhaW4gd2VicGFjayBjb25maWd1cmF0aW9uIHVuZGVyc3RhbmRzIChsaWtlIDxwaCBpZD1cInBoMVwiPmBwbmdgPC9waD4gYW5kIDxwaCBpZD1cInBoMlwiPmBqc29uYDwvcGg+KSwgc28gd2UganVzdCBuZWVkIHRvIHRlbGwgaXQgdG8gYWxzbyBjb3B5IDxwaCBpZD1cInBoM1wiPmBtZGA8L3BoPiBmaWxlcy4iLCJwb3MiOlsxNDIsMzM2XSwic291cmNlIjoiIEJ5IGRlZmF1bHQsIHRoaXMgYnVpbGQgdGFzayBjb3BpZXMgZmlsZXMgd2l0aCBleHRlbnNpb25zIHRoYXQgdGhlIGRlZmF1bHQgdG9vbGNoYWluIHdlYnBhY2sgY29uZmlndXJhdGlvbiB1bmRlcnN0YW5kcyAobGlrZSBgcG5nYCBhbmQgYGpzb25gKSwgc28gd2UganVzdCBuZWVkIHRvIHRlbGwgaXQgdG8gYWxzbyBjb3B5IGBtZGAgZmlsZXMuIn1dLCJpc1BhcmFncmFwaCI6dHJ1ZSwic291cmNlIjoiQ3JlYXRlIGEgZmlsZSBgY29weS1zdGF0aWMtYXNzZXRzLmpzb25gIGluIHRoZSBgY29uZmlnYCBkaXJlY3RvcnkgdG8gdGVsbCB0aGUgYnVpbGQgc3lzdGVtIHRvIGNvcHkgc29tZSBhZGRpdGlvbmFsIGZpbGVzIGZyb20gYHNyY2AgdG8gYGxpYmAuIEJ5IGRlZmF1bHQsIHRoaXMgYnVpbGQgdGFzayBjb3BpZXMgZmlsZXMgd2l0aCBleHRlbnNpb25zIHRoYXQgdGhlIGRlZmF1bHQgdG9vbGNoYWluIHdlYnBhY2sgY29uZmlndXJhdGlvbiB1bmRlcnN0YW5kcyAobGlrZSBgcG5nYCBhbmQgYGpzb25gKSwgc28gd2UganVzdCBuZWVkIHRvIHRlbGwgaXQgdG8gYWxzbyBjb3B5IGBtZGAgZmlsZXMuIn0seyJwb3MiOls1NjkxLDU3OThdLCJjb250ZW50IjoiTm93IGluc3RlYWQgb2YgdXNpbmcgdGhlIHJlbGF0aXZlIHBhdGgsIHlvdSBjYW4gdXNlIHRoZSBmaWxlIHBhdGggaW4geW91ciA8cGggaWQ9XCJwaDFcIj5gcmVxdWlyZWA8L3BoPiBzdGF0ZW1lbnQsIGZvciBleGFtcGxlOiIsInNvdXJjZSI6Ik5vdyBpbnN0ZWFkIG9mIHVzaW5nIHRoZSByZWxhdGl2ZSBwYXRoLCB5b3UgY2FuIHVzZSB0aGUgZmlsZSBwYXRoIGluIHlvdXIgYHJlcXVpcmVgIHN0YXRlbWVudCwgZm9yIGV4YW1wbGU6In0seyJjb250ZW50IjoiWW91IGNhbiB0aGVuIHJlZmVyZW5jZSB0aGlzIHN0cmluZyBpbiB5b3VyIGNvZGUsIGZvciBleGFtcGxlOiIsInBvcyI6WzU4ODQsNTk0NV19LHsicG9zIjpbNjA0Niw2MDc5XSwiY29udGVudCI6IlN0ZXAgNCAtIEJ1aWxkIGFuZCB0ZXN0IHlvdXIgY29kZSIsImxpbmtpZnkiOiJTdGVwIDQgLSBCdWlsZCBhbmQgdGVzdCB5b3VyIGNvZGUiLCJub2RlcyI6W3siY29udGVudCI6IlN0ZXAgNCAtIEJ1aWxkIGFuZCB0ZXN0IHlvdXIgY29kZSIsInBvcyI6WzAsMzNdfV19LHsiY29udGVudCI6IlRvIGJ1aWxkIGFuZCB0ZXN0IHlvdXIgY29kZSwgZXhlY3V0ZSB0aGUgZm9sbG93aW5nIGNvbW1hbmQgaW4gYSBjb25zb2xlIGluIHRoZSByb290IG9mIHlvdXIgcHJvamVjdCBkaXJlY3Rvcnk6IiwicG9zIjpbNjA4MCw2MTkwXX1dLCJjb250ZW50IjoiIyBFeHRlbmRpbmcgd2VicGFjayBpbiB0aGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgdG9vbGNoYWluXG5cbj4qKk5vdGU6KiogVGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3IGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4gU2hhcmVQb2ludCBGcmFtZXdvcmsgY2xpZW50LXNpZGUgd2ViIHBhcnRzIGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdXNlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLlxuXG5bV2VicGFja10oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby8pIGlzIGEgSmF2YVNjcmlwdCBtb2R1bGUgYnVuZGxlciB0aGF0IHRha2VzIHlvdXIgSmF2YVNjcmlwdCBmaWxlcyBhbmQgaXRzIGRlcGVuZGVuY2llcyBhbmQgZ2VuZXJhdGVzIG9uZSBvciBtb3JlIEphdmFTY3JpcHQgYnVuZGxlcyBzbyB5b3UgY2FuIGxvYWQgZGlmZmVyZW50IGJ1bmRsZXMgZm9yIGRpZmZlcmVudCBzY2VuYXJpb3MuXG5cblRoZSBmcmFtZXdvcmsgdG9vbCBjaGFpbiB1c2VzIENvbW1vbkpTIGZvciBidW5kbGluZy4gVGhpcyBlbmFibGVzIHlvdSB0byBkZWZpbmUgbW9kdWxlcyBhbmQgd2hlcmUgeW91IHdhbnQgdG8gdXNlIHRoZW0uIFRoZSB0b29sIGNoYWluIGFsc28gdXNlcyBTeXN0ZW1KUywgYSB1bml2ZXJzYWwgbW9kdWxlIGxvYWRlciwgdG8gbG9hZCB5b3VyIG1vZHVsZXMuIFRoaXMgaGVscHMgeW91IHRvIHNjb3BlIHlvdXIgd2ViIHBhcnRzIGJ5IG1ha2luZyBzdXJlIHRoYXQgZWFjaCB3ZWIgcGFydCBpcyBleGVjdXRlZCBpbiBpdHMgb3duIG5hbWVzcGFjZS5cblxuT25lIGNvbW1vbiB0YXNrIHlvdSB3b3VsZCB3YW50IHRvIGFkZCB0byB0aGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgdG9vbGNoYWluIGlzIHRvIGV4dGVuZCB0aGUgd2VicGFjayBjb25maWd1cmF0aW9uIHdpdGggY3VzdG9tIGxvYWRlcnMgYW5kIHBsdWdpbnMuXG5cbiMjIFVzaW5nIHdlYnBhY2sgbG9hZGVyc1xuVGhlcmUgYXJlIG1hbnkgY2FzZXMgd2hlcmUgb25lIHdvdWxkIGxpa2UgdG8gaW1wb3J0IGFuZCB1dGlsaXplIGEgbm9uLUphdmFTY3JpcHQgcmVzb3VyY2UgZHVyaW5nIGRldmVsb3BtZW50LCB0eXBpY2FsbHkgdGhpcyBpcyBkb25lIHdpdGggaW1hZ2VzIG9yIHRlbXBsYXRlcy4gQSBbd2VicGFjayBsb2FkZXJdKGh0dHBzOi8vd2VicGFjay5naXRodWIuaW8vZG9jcy9sb2FkZXJzLmh0bWwpIHdpbGwgY29udmVydCB0aGUgcmVzb3VyY2UgaW50byBzb21ldGhpbmcgdGhhdCBjYW4gYmUgdXRpbGl6ZWQgYnkgeW91ciBKYXZhU2NyaXB0IGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgYSBNYXJrZG93biB0ZW1wbGF0ZSBtYXkgYmUgY29tcGlsZWQgYW5kIGNvbnZlcnRlZCB0byBhIHRleHQgc3RyaW5nLCB3aGlsZSBhIGltYWdlIHJlc291cmNlIG1heSBiZSBjb252ZXJ0ZWQgdG8gQmFzZTY0IGltYWdlLlxuXG5UaGVyZSBhcmUgYSBudW1iZXIgb2YgdXNlZnVsIGxvYWRlcnMsIHNldmVyYWwgb2Ygd2hpY2ggYXJlIGFscmVhZHkgdXNlZCBieSB0aGUgc3RhbmRhcmQgU2hhcmVQb2ludCBGcmFtZXdvcmsgd2VicGFjayBjb25maWd1cmF0aW9uLCBzdWNoIGFzOlxuXG4tIGh0bWwtbG9hZGVyXG4tIGpzb24tbG9hZGVyXG4tIGxvYWRlci1sb2FkLXRoZW1lZC1zdHlsZXNcblxuRXh0ZW5kaW5nIHRoZSBmcmFtZXdvcmsgd2VicGFjayBjb25maWd1cmF0aW9uIHdpdGggY3VzdG9tIGxvYWRlcnMgaXMgYSBzdHJhaWdodGZvcndhcmQgcHJvY2VzcyB3aGljaCBpcyBkb2N1bWVudGVkIFtoZXJlIGluIHRoZSB3ZWJwYWNrIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vd2VicGFjay5naXRodWIuaW8vZG9jcy9sb2FkZXJzLmh0bWwjd3JpdGluZy1hLWxvYWRlcikuXG5cbj4gWW91IGNhbiBmaW5kIG1vcmUgZGV0YWlscyBvbiB0aGUgbG9hZGVycyBmcm9tIFt3ZWJwYWNrIGxvYWRlcnMgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5pby9kb2NzL2xvYWRlcnMuaHRtbClcblxuIyMgRXhhbXBsZTogVXNpbmcgdGhlIG1hcmtkb3duLWxvYWRlciBwYWNrYWdlXG5BcyBhbiBleGFtcGxlLCBsZXQncyB1c2UgdGhlIFttYXJrZG93bi1sb2FkZXIgcGFja2FnZV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbWFya2Rvd24tbG9hZGVyKS4gIEl0J3MgYSBsb2FkZXIgd2hpY2ggYWxsb3dzIHlvdSB0byByZWZlcmVuY2UgYW4gYC5tZGAgZmlsZSBhbmQgb3V0cHV0IGl0IGFzIEhUTUwgc3RyaW5nLlxuXG5Zb3UgY2FuIGRvd25sb2FkIHRoZSBjb21wbGV0ZWQgc2FtcGxlIFtoZXJlXShodHRwczovL2FrYS5tcy9zcGZ4LWV4dGVuZC13ZWJwYWNrLXNhbXBsZSkuXG5cbiMjIyBTdGVwIDEgLSBJbnN0YWxsIHRoZSBwYWNrYWdlXG5MZXQncyByZWZlcmVuY2UgbWFya2Rvd24tbG9hZGVyIGluIG91ciBwcm9qZWN0LlxuXG5gYGBcbm5wbSBpIC0tc2F2ZSBtYXJrZG93bi1sb2FkZXIgXG5gYGBcblxuIyMjIFN0ZXAgMiAtIENvbmZpZ3VyZSBXZWJwYWNrIFxuTm93IHRoYXQgd2UgaGF2ZSB0aGUgcGFja2FnZSBpbnN0YWxsZWQsIGxldHMgbm93IGNvbmZpZ3VyZSB0aGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgd2VicGFjayBjb25maWd1cmF0aW9uIHRvIGluY2x1ZGUgdGhlIG1hcmtkb3duLWxvYWRlci4gXG5cbkluIHRoZSBbZG9jdW1lbnRhdGlvbiBvZiBtYXJrZG93bi1sb2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9wZWVyaWdvbi9tYXJrZG93bi1sb2FkZXIpLCBpdCBzaG93cyBob3cgdG8gZXh0ZW5kIHRoZSB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24gdG8gaW5jbHVkZSB0aGUgbG9hZGVyOlxuXG5gYGBKYXZhU2NyaXB0XG57XG4gIG1vZHVsZToge1xuICAgIGxvYWRlcnM6IFtcbiAgICAgIHsgdGVzdDogL1xcLm1kJC8sIGxvYWRlcjogXCJodG1sIW1hcmtkb3duXCIgfVxuICAgIF1cbiAgfVxufVxuYGBgXG5cbldlIHdpbGwgdXNlIHRoaXMgaW5mb3JtYXRpb24gdG8gY29uZmlndXJlIGl0IGluIG91ciBwcm9qZWN0LiBcblxuSW4gb3JkZXIgdG8gYWRkIHRoaXMgY3VzdG9tIGxvYWRlciBpbnRvIHRoZSBTaGFyZVBvaW50IEZyYW1ld29yayB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24sIHdlIHdpbGwgbmVlZCB0byBpbnN0cnVjdCB0aGUgYnVpbGQgdGFzayB0byBjb25maWd1cmUgd2VicGFjay4gVGhlIGJ1aWxkIHRhc2tzIGFyZSBkZWZpbmVkIGluIHRoZSBndWxwIGZpbGUgLSBgZ3VscGZpbGUuanNgIC0gd2hpY2ggaXMgbG9jYXRlZCBhdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QuIFNoYXJlUG9pbnQgRnJhbWV3b3JrIHVzZXMgW2d1bHBdKGh0dHA6Ly9ndWxwanMuY29tLykgYXMgaXRzIHRhc2sgcnVubmVyIGFuZCBoZW5jZSB3ZSB1c2UgaXQgdG8gZGVmaW5lIGFuZCByZWdpc3RlciBjdXN0b20gdGFza3Mgd2l0aCB0aGUgZ3VscCB0YXNrIHJ1bm5lci5cblxuRWRpdCB0aGUgYGd1bHBmaWxlLmpzYCBhbmQgYWRkIHRoZSBmb2xsb3dpbmcgY29kZSByaWdodCBiZWZvcmUgYGJ1aWxkLmluaXRpYWxpemUoZ3VscCk7YDpcblxuYGBgSmF2YVNjcmlwdCBcbmJ1aWxkLmNvbmZpZ3VyZVdlYnBhY2subWVyZ2VDb25maWcoeyBcbiAgYWRkaXRpb25hbENvbmZpZ3VyYXRpb246IChnZW5lcmF0ZWRDb25maWd1cmF0aW9uKSA9PiB7IFxuICAgIGdlbmVyYXRlZENvbmZpZ3VyYXRpb24ubW9kdWxlLmxvYWRlcnMucHVzaChbIFxuICAgICAgeyB0ZXN0OiAvXFwubWQkLywgbG9hZGVyOiBcImh0bWwhbWFya2Rvd25cIiB9IFxuICAgIF0pOyBcblxuICAgIHJldHVybiBnZW5lcmF0ZWRDb25maWd1cmF0aW9uOyBcbiAgfSBcbn0pO1xuYGBgXG5cbk5vdGljZSB0aGF0IHdlIHNpbXBseSBwdXNoIHRoZSBsb2FkZXIgY29uZmlnIG9udG8gdGhlIGxpc3Qgb2YgZXhpc3RpbmcgbG9hZGVycyBpbiB0aGUgdG9vbGNoYWluLiBJdCdzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3VyIGBhZGRpdGlvbmFsQ29uZmlndXJhdGlvbmAgZnVuY3Rpb24gZW5kcyB3aXRoIHRoZSBgcmV0dXJuIGdlbmVyYXRlZENvbmZpZ3VyYXRpb25gIGxpbmUsIGFzIHRoaXMgZW5zdXJlcyB0aGF0IGl0ICByZXR1cm5zIHRoZSBsb2FkZXIgY29uZmlndXJhdGlvbiB0byB0aGUgdG9vbGNoYWluLiBcblxuPiBXaGlsZSB5b3UgYXJlIGFibGUgdG8gY29tcGxldGVseSByZXBsYWNlIHRoZSB0b29sY2hhaW4ncyBkZWZhdWx0IHdlYnBhY2sgY29uZmlndXJhdGlvbiB1c2luZyB0aGlzIGFwcHJvYWNoLCB0byBnZXQgdGhlIG1heGltdW0gYmVuZWZpdCB3aXRoIHBlcmZvcm1hbmNlIGFuZCBvcHRpbWl6YXRpb24sIGl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byBkbyBzbyB1bmxlc3Mgc3RhdGVkIG90aGVyd2lzZSBpbiB0aGUgZG9jdW1lbnRhdGlvbi4gXG5cbiMjIyBTdGVwIDMgLSBVcGRhdGUgeW91ciBjb2RlXG5Ob3cgdGhhdCB3ZSBoYXZlIGNvbmZpZ3VyZWQgdGhlIGxvYWRlciwgbGV0cyB1cGRhdGUgb3VyIGNvZGUgYW5kIGFkZCBmZXcgZmlsZXMgdG8gdGVzdCB0aGUgc2NlbmFyaW8uIFxuXG5DcmVhdGUgYSBmaWxlIGBteS1tYXJrZG93bi5tZGAgaW4gdGhlIGBzcmNgIGRpcmVjdG9yeSBvZiB5b3VyIHByb2plY3QgZm9sZGVyIHdpdGggc29tZSBNYXJrZG93biB0ZXh0IGluIGl0LlxuXG5gYGBtZFxuI0hlbGxvIE1hcmtkb3duXG5cbipNYXJrZG93biogaXMgYSBzaW1wbGUgbWFya3VwIGZvcm1hdCB0byB3cml0ZSBjb250ZW50LiBcblxuWW91IGNhbiBhbHNvIGZvcm1hdCB0ZXh0IGFzICoqYm9sZCoqIG9yICppdGFsaWNzKiBvciAqKipib2xkIGl0YWxpY3MqKiogIFxuYGBgXG5cbldoZW4geW91IGJ1aWxkIHRoZSBwcm9qZWN0LCB0aGUgd2VicGFjayBtYXJrZG93bi1sb2FkZXIgd2lsbCBjb252ZXJ0IHRoaXMgbWFya2Rvd24gdGV4dCB0byBhIEhUTUwgc3RyaW5nLiBUbyB1c2UgdGhpcyBIVE1MIHN0cmluZyBpbiBhbnkgb2YgeW91ciBzb3VyY2UgYCoudHNgIGZpbGVzLCBhZGQgdGhlIGZvbGxvd2luZyBgcmVxdWlyZSgpYCBsaW5lIGF0IHRoZSB0b3Agb2YgdGhlIGZpbGUgYWZ0ZXIgeW91ciBpbXBvcnRzLCBmb3IgZXhhbXBsZTpcblxuXG5gYGBUeXBlU2NyaXB0XG5jb25zdCBzdHJNYXJrZG93blN0cmluZyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9zcmMvcmVhZG1lLm1kXCIpIGFzIHN0cmluZztcbmBgYFxuXG5XZWJwYWNrIGJ5IGRlZmF1bHQgd2lsbCBsb29rIGluIHRoZSBgbGliYCBmb2xkZXIgZm9yIHRoZSBmaWxlLCBidXQgYnkgZGVmYXVsdCBgLm1kYCBmaWxlcyBkb24ndCBnZXQgY29waWVkIHRvIHRoZSBgbGliYCBmb2xkZXIsIG1lYW5pbmcgd2UgbmVlZCB0byBjcmVhdGUgYSByYXRoZXIgbGVuZ3RoeSByZWxhdGl2ZSBwYXRoLiBXZSBjYW4gY29udHJvbCB0aGlzIHNldHRpbmcgYnkgZGVmaW5pbmcgYSBjb25maWcgZmlsZSB0byB0ZWxsIHRoZSB0b29sY2hhaW4gdG8gY29weSBgbWRgIGZpbGVzIHRvIHRoZSBsaWIgZm9sZGVyLiBcblxuQ3JlYXRlIGEgZmlsZSBgY29weS1zdGF0aWMtYXNzZXRzLmpzb25gIGluIHRoZSBgY29uZmlnYCBkaXJlY3RvcnkgdG8gdGVsbCB0aGUgYnVpbGQgc3lzdGVtIHRvIGNvcHkgc29tZSBhZGRpdGlvbmFsIGZpbGVzIGZyb20gYHNyY2AgdG8gYGxpYmAuIEJ5IGRlZmF1bHQsIHRoaXMgYnVpbGQgdGFzayBjb3BpZXMgZmlsZXMgd2l0aCBleHRlbnNpb25zIHRoYXQgdGhlIGRlZmF1bHQgdG9vbGNoYWluIHdlYnBhY2sgY29uZmlndXJhdGlvbiB1bmRlcnN0YW5kcyAobGlrZSBgcG5nYCBhbmQgYGpzb25gKSwgc28gd2UganVzdCBuZWVkIHRvIHRlbGwgaXQgdG8gYWxzbyBjb3B5IGBtZGAgZmlsZXMuXG5cbmBgYEpTT05cbntcbiAgXCJpbmNsdWRlRXh0ZW5zaW9uc1wiOiBbXG4gICAgXCJtZFwiXG4gIF1cbn1cbmBgYFxuXG5Ob3cgaW5zdGVhZCBvZiB1c2luZyB0aGUgcmVsYXRpdmUgcGF0aCwgeW91IGNhbiB1c2UgdGhlIGZpbGUgcGF0aCBpbiB5b3VyIGByZXF1aXJlYCBzdGF0ZW1lbnQsIGZvciBleGFtcGxlOlxuXG5gYGBUeXBlU2NyaXB0XG5jb25zdCBzdHJNYXJrZG93blN0cmluZyA9IHJlcXVpcmUoXCIuLi8uLi9yZWFkbWUubWRcIikgYXMgc3RyaW5nO1xuYGBgXG4gXG5Zb3UgY2FuIHRoZW4gcmVmZXJlbmNlIHRoaXMgc3RyaW5nIGluIHlvdXIgY29kZSwgZm9yIGV4YW1wbGU6XG5cbmBgYCBUeXBlU2NyaXB0XG5wdWJsaWMgcmVuZGVyKCk6IHZvaWQge1xuICB0aGlzLmRvbUVsZW1lbnQuaW5uZXJIVE1MID0gc3RyTWFya2Rvd25TdHJpbmc7XG59XG5gYGBcblxuIyMjIFN0ZXAgNCAtIEJ1aWxkIGFuZCB0ZXN0IHlvdXIgY29kZVxuVG8gYnVpbGQgYW5kIHRlc3QgeW91ciBjb2RlLCBleGVjdXRlIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBpbiBhIGNvbnNvbGUgaW4gdGhlIHJvb3Qgb2YgeW91ciBwcm9qZWN0IGRpcmVjdG9yeTpcblxuYGBgXG5ndWxwIHNlcnZlXG5gYGAifQ==]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">758</count>
        <count count-type="x-adjWordCount">682.4</count>
        <count count-type="x-curAdjWordCount">682.4</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">27</count>
        <count count-type="x-match100%">0</count>
        <count count-type="x-match99-90%">56</count>
        <count count-type="x-match89-75%">30</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extending webpack in the SharePoint Framework toolchain</source>
          <target state="final">SharePoint Framework 도구 체인에서 Webpack 확장</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change. SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
            <target state="final" state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>참고:<ept id="p1">**</ept> SharePoint Framework는 현재 미리 보기로 제공되며 변경될 수 있습니다. SharePoint Framework 클라이언트 쪽 웹 파트는 현재 프로덕션 환경에서 사용하도록 지원되지 않습니다.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>참고:<ept id="p1">**</ept> SharePoint Framework는 현재 미리 보기로 제공되며 변경될 수 있습니다. SharePoint Framework 클라이언트 쪽 웹 파트는 현재 프로덕션 환경에서 사용하도록 지원되지 않습니다.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="102" translate="no" xml:space="preserve">
              <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</source>
              <target state="final"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
              <target state="final">SharePoint Framework client-side web parts are not currently supported for use in production environments.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Webpack<ept id="p1">](https://webpack.github.io/)</ept> is a JavaScript module bundler that takes your JavaScript files and its dependencies and generates one or more JavaScript bundles so you can load different bundles for different scenarios.</source>
          <target state="final"><bpt id="p1">[</bpt>Webpack<ept id="p1">](https://webpack.github.io/)</ept>은 JavaScript 파일 및 해당 종속 파일을 사용하고 하나 이상의 JavaScript 번들을 생성하여 다른 시나리오마다 다른 번들을 로드할 수 있도록 하는 JavaScript 모듈 번들러입니다.</target>
        <alt-trans match-quality="88%" tool="BlackBox/MSR MT"><source>Webpack is a module bundler that takes your web part files an dependencies and generates one or more JavaScript bundles so you can load different bundles for different scenarios.</source><target state-qualifier="tm-suggestion">Webpack은 웹 파트 파일을 종속성으로 사용하고 하나 이상의 JavaScript 번들을 생성하여 다른 시나리오마다 다른 번들을 로드할 수 있도록 하는 모듈 번들러입니다.</target></alt-trans><note from="bb-metadata">fuzzyMatch="88" wordcount="30" adjWordcount="15" curWordcount="15" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>The framework tool chain uses CommonJS for bundling. This enables you to define modules and where you want to use them. The tool chain also uses SystemJS, a universal module loader, to load your modules. This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source>
            <target state="final">Framework 도구 체인은 번들화를 위해 CommonJS를 사용합니다. 이를 통해 모듈 및 사용하려는 위치를 정의할 수 있습니다. 도구 체인은 유니버설 모듈 로더인 SystemJS를 사용하여 모듈을 로드합니다. 이러한 도구 체인은 각 웹 파트가 자체 네임스페이스에 실행되도록 하여 웹 파트의 범위를 지정할 수 있도록 합니다.</target>
          <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>The development tool chain uses CommonJS for bundling. This enables you to define modules and where you want to use them. The tool chain also uses SystemJS, a universal module loader, to load your modules. This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source><target state-qualifier="tm-suggestion">개발 도구 체인은 번들화를 위해 CommonJS를 사용합니다. 이를 통해 모듈 및 사용하려는 위치를 정의할 수 있습니다. 도구 체인은 유니버설 모듈 로더인 SystemJS를 사용하여 모듈을 로드합니다. 이러한 도구 체인은 각 웹 파트가 자체 네임스페이스에 실행되도록 하여 웹 파트의 범위를 지정할 수 있도록 합니다.</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="56" adjWordcount="22.4" curWordcount="22.4" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="105" translate="no" xml:space="preserve">
              <source>The framework tool chain uses CommonJS for bundling.</source>
              <target state="final">The framework tool chain uses CommonJS for bundling.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>This enables you to define modules and where you want to use them.</source>
              <target state="final">This enables you to define modules and where you want to use them.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
            <trans-unit id="107" translate="no" xml:space="preserve">
              <source>The tool chain also uses SystemJS, a universal module loader, to load your modules.</source>
              <target state="final">The tool chain also uses SystemJS, a universal module loader, to load your modules.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
            <trans-unit id="108" translate="no" xml:space="preserve">
              <source>This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source>
              <target state="final">This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One common task you would want to add to the SharePoint Framework toolchain is to extend the webpack configuration with custom loaders and plugins.</source>
          <target state="final">SharePoint Framework 도구 체인에 추가할 수 있는 일반적인 작업은 사용자 지정 로더 및 플러그 인을 사용하여 webpack 구성을 확장하는 것입니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using webpack loaders</source>
          <target state="final">webpack 로더 사용</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates. A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application. For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</source>
            <target state="final">개발 중에 JavaScript 이외 리소스를 가져와 활용하려는 많은 경우가 있을 수 있으며 일반적으로 이러한 작업은 이미지 또는 템플릿을 사용하여 수행합니다. <bpt id="p1">[</bpt>webpack 로더<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept>는 리소스를 JavaScript 응용 프로그램에서 사용할 수 있는 형태로 변환합니다. 예를 들어 Markdown 템플릿은 텍스트 문자열로 컴파일 및 변환할 수 있지만 이미지 리소스는 Base64 이미지로 변환할 수 있습니다.</target>
          <note from="bb-metadata"> wordcount="66" adjWordcount="66" curWordcount="66"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="111" translate="no" xml:space="preserve">
              <source>There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates.</source>
              <target state="final">There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="25" adjWordcount="25" curWordcount="25"</note></trans-unit>
            <trans-unit id="112" translate="no" xml:space="preserve">
              <source>A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application.</source>
              <target state="final">A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="113" translate="no" xml:space="preserve">
              <source>For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</source>
              <target state="final">For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are a number of useful loaders, several of which are already used by the standard SharePoint Framework webpack configuration, such as:</source>
          <target state="final">유용한 많은 로더가 있으며 다음과 같은 일부 로더는 표준 SharePoint Framework webpack 구성에서 이미 사용되고 있습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="22" adjWordcount="22" curWordcount="22"</note></trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>html-loader</source>
          <target state="final">html-loader</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>json-loader</source>
          <target state="final">json-loader</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>loader-load-themed-styles</source>
          <target state="final">loader-load-themed-styles</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Extending the framework webpack configuration with custom loaders is a straightforward process which is documented <bpt id="p1">[</bpt>here in the webpack documentation<ept id="p1">](https://webpack.github.io/docs/loaders.html#writing-a-loader)</ept>.</source>
          <target state="final">사용자 지정 로더를 사용하여 Framework Webpack 구성을 확장하는 과정은 간단한 프로세스로, <bpt id="p1">[</bpt>이 Webpack 설명서<ept id="p1">](https://webpack.github.io/docs/loaders.html#writing-a-loader)</ept>에 자세히 설명되어 있습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can find more details on the loaders from <bpt id="p1">[</bpt>webpack loaders documentation<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept></source>
          <target state="final">로더에 대한 자세한 내용은 <bpt id="p1">[</bpt>Webpack 로더 설명서<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept>를 참조하세요.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example: Using the markdown-loader package</source>
          <target state="final">예제: markdown-loader 패키지 사용</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source>As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.  It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</source>
            <target state="final">예를 들어 <bpt id="p1">[</bpt>markdown-loader 패키지<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>를 사용해보겠습니다.  <ph id="ph1">`.md`</ph> 파일에서 참조하고 HTML 문자열로 출력할 수 있는 로더입니다.</target>
          <note from="bb-metadata"> wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="121" translate="no" xml:space="preserve">
              <source>As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.</source>
              <target state="final">As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
            <trans-unit id="122" translate="no" xml:space="preserve">
              <source>It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</source>
              <target state="final">It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can download the completed sample <bpt id="p1">[</bpt>here<ept id="p1">](https://aka.ms/spfx-extend-webpack-sample)</ept>.</source>
          <target state="final">전체 샘플은 <bpt id="p1">[</bpt>여기<ept id="p1">](https://aka.ms/spfx-extend-webpack-sample)</ept>에서 다운로드할 수 있습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Step 1 - Install the package</source>
          <target state="final">1단계 - 패키지 설치</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Let's reference markdown-loader in our project.</source>
          <target state="final">프로젝트에서 markdown-loader를 참조하겠습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Step 2 - Configure Webpack</source>
          <target state="final">2단계 - Webpack 구성</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Now that we have the package installed, lets now configure the SharePoint Framework webpack configuration to include the markdown-loader.</source>
          <target state="final">이제 패키지를 설치했으므로 markdown-loader를 포함하도록 SharePoint Framework webpack 구성을 지정합니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>documentation of markdown-loader<ept id="p1">](https://github.com/peerigon/markdown-loader)</ept>, it shows how to extend the webpack configuration to include the loader:</source>
          <target state="final"><bpt id="p1">[</bpt>markdown-loader 설명서<ept id="p1">](https://github.com/peerigon/markdown-loader)</ept>에는 이 로더를 포함하도록 webpack 구성을 확장하는 방법이 나와 있습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We will use this information to configure it in our project.</source>
          <target state="final">이 정보를 사용하여 프로젝트에서 해당 항목을 구성해보겠습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack. The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project. SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</source>
            <target state="final">이 사용자 지정 로더를 SharePoint Framework webpack 구성에 추가하려면 webpack을 구성하도록 빌드 작업을 지정해야 합니다. 빌드 작업은 프로젝트의 루트에 있는 gulp 파일 <ph id="ph1">`gulpfile.js`</ph>에 정의됩니다. SharePoint Framework는 <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept>를 작업 실행기로 사용하므로 이를 활용하여 사용자 지정 작업을 정의하고 Gulp 작업 실행기에 등록합니다.</target>
          <note from="bb-metadata"> wordcount="66" adjWordcount="66" curWordcount="66"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack.</source>
              <target state="final">In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
            <trans-unit id="131" translate="no" xml:space="preserve">
              <source>The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project.</source>
              <target state="final">The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
            <trans-unit id="132" translate="no" xml:space="preserve">
              <source>SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</source>
              <target state="final">SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Edit the <ph id="ph1">`gulpfile.js`</ph> and add the following code right before <ph id="ph2">`build.initialize(gulp);`</ph>:</source>
          <target state="final"><ph id="ph1">`gulpfile.js`</ph>를 편집하고 <ph id="ph2">`build.initialize(gulp);`</ph> 바로 앞에 다음 코드를 추가합니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source>Notice that we simply push the loader config onto the list of existing loaders in the toolchain. It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</source>
            <target state="final">도구 체인에서 기존 로더 목록에 해당 로더 구성을 밀어넣기만 하면 됩니다. <ph id="ph1">`additionalConfiguration`</ph> 함수가 <ph id="ph2">`return generatedConfiguration`</ph> 줄로 끝나는지 확인해야 합니다. 그래야 로더 구성이 도구 체인으로 반환됩니다.</target>
          <note from="bb-metadata"> wordcount="40" adjWordcount="40" curWordcount="40"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="134" translate="no" xml:space="preserve">
              <source>Notice that we simply push the loader config onto the list of existing loaders in the toolchain.</source>
              <target state="final">Notice that we simply push the loader config onto the list of existing loaders in the toolchain.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="135" translate="no" xml:space="preserve">
              <source>It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</source>
              <target state="final">It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="23" adjWordcount="23" curWordcount="23"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>While you are able to completely replace the toolchain's default webpack configuration using this approach, to get the maximum benefit with performance and optimization, it is not recommended to do so unless stated otherwise in the documentation.</source>
          <target state="final">이 접근 방법을 사용하여 도구 체인의 기본 webpack 구성을 완전히 바꿀 수 있으나 최상의 성능 및 최적화를 구현하려는 경우 다른 언급이 없는 한, 이 방식은 권장되지 않습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="37" adjWordcount="37" curWordcount="37"</note></trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Step 3 - Update your code</source>
          <target state="final">3단계 - 코드 업데이트</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Now that we have configured the loader, lets update our code and add few files to test the scenario.</source>
          <target state="final">로더를 구성했으므로 코드를 업데이트하고 몇 개의 파일을 추가하여 시나리오를 테스트해보겠습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create a file <ph id="ph1">`my-markdown.md`</ph> in the <ph id="ph2">`src`</ph> directory of your project folder with some Markdown text in it.</source>
          <target state="final">일부 Markdown 텍스트가 있는 프로젝트 폴더의 <ph id="ph2">`src`</ph> 디렉터리에 파일 <ph id="ph1">`my-markdown.md`</ph>를 만듭니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source>When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string. To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</source>
            <target state="final">프로젝트를 빌드할 때 webpack markdown-loader는 이 markdown 텍스트를 HTML 문자열로 변환합니다. 소스 <ph id="ph1">`*.ts`</ph> 파일에 이 HTML 문자열을 사용하려면 가져오기 후에 파일 맨 위에 다음 <ph id="ph2">`require()`</ph> 줄을 추가합니다. 예를 들면 다음과 같습니다.</target>
          <note from="bb-metadata"> wordcount="43" adjWordcount="43" curWordcount="43"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="140" translate="no" xml:space="preserve">
              <source>When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string.</source>
              <target state="final">When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="141" translate="no" xml:space="preserve">
              <source>To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</source>
              <target state="final">To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="26" adjWordcount="26" curWordcount="26"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-108" merged-trans="yes">
          <trans-unit id="p108" translate="yes" xml:space="preserve">
            <source>Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path. We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph4">`md`</ph> files to the lib folder.</source>
            <target state="final">기본적으로 webpack은 <ph id="ph1">`lib`</ph> 폴더에서 해당 파일을 찾지만 기본적으로 <ph id="ph2">`.md`</ph> 파일은 <ph id="ph3">`lib`</ph> 폴더로 복사되지 않습니다. 즉, 비교적 긴 상대 경로를 만들어야 합니다. 도구 체인에 <ph id="ph4">`md`</ph> 파일을 lib 폴더에 복사하도록 지시하는 구성 파일을 정의하여 이 설정을 제어할 수 있습니다.</target>
          <note from="bb-metadata"> wordcount="52" adjWordcount="52" curWordcount="52"</note></trans-unit>
          <group id="sentence-108">
            <trans-unit id="142" translate="no" xml:space="preserve">
              <source>Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path.</source>
              <target state="final">Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="31" adjWordcount="31" curWordcount="31"</note></trans-unit>
            <trans-unit id="143" translate="no" xml:space="preserve">
              <source>We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph1">`md`</ph> files to the lib folder.</source>
              <target state="final">We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph1">`md`</ph> files to the lib folder.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-109" merged-trans="yes">
          <trans-unit id="p109" translate="yes" xml:space="preserve">
            <source>Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>. By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph5">`png`</ph> and <ph id="ph6">`json`</ph>), so we just need to tell it to also copy <ph id="ph7">`md`</ph> files.</source>
            <target state="final"><ph id="ph2">`config`</ph> 디렉터리에 파일 <ph id="ph1">`copy-static-assets.json`</ph>을 만들어 <ph id="ph3">`src`</ph>에서 <ph id="ph4">`lib`</ph>로 일부 추가 파일을 복사하도록 빌드 시스템에 지시합니다. 기본적으로 이 빌드 작업은 기본 도구 체인 webpack 구성이 이해하는 확장(예: <ph id="ph5">`png`</ph> 및 <ph id="ph6">`json`</ph>)이 있는 파일을 복사하므로 <ph id="ph7">`md`</ph> 파일도 복사하도록 지시하기만 하면 됩니다.</target>
          <note from="bb-metadata"> wordcount="47" adjWordcount="47" curWordcount="47"</note></trans-unit>
          <group id="sentence-109">
            <trans-unit id="144" translate="no" xml:space="preserve">
              <source>Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>.</source>
              <target state="final">Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
            <trans-unit id="145" translate="no" xml:space="preserve">
              <source>By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph1">`png`</ph> and <ph id="ph2">`json`</ph>), so we just need to tell it to also copy <ph id="ph3">`md`</ph> files.</source>
              <target state="final">By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph1">`png`</ph> and <ph id="ph2">`json`</ph>), so we just need to tell it to also copy <ph id="ph3">`md`</ph> files.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="29" adjWordcount="29" curWordcount="29"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Now instead of using the relative path, you can use the file path in your <ph id="ph1">`require`</ph> statement, for example:</source>
          <target state="final">상대 경로를 사용하는 대신, <ph id="ph1">`require`</ph> 문에 파일 경로를 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can then reference this string in your code, for example:</source>
          <target state="final">그런 후 코드에서 이 문자열을 참조할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Step 4 - Build and test your code</source>
          <target state="final">4단계 - 코드 빌드 및 테스트</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To build and test your code, execute the following command in a console in the root of your project directory:</source>
          <target state="final">코드를 빌드하고 테스트하려면 프로젝트 디렉터리의 루트에서 콘솔의 다음 명령을 실행합니다.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
      </group>
    </body>
  </file>
</xliff>