<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="20170117_fetch-sphttpclient.md" source-language="en-US" target-language="it-IT" build-num="4946239">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-188fee3" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[eyJub2RlcyI6W3sicG9zIjpbMiwzNF0sImNvbnRlbnQiOiJmZXRjaCh1cmwsY29uZmlndXJhdGlvbixvcHRpb25zKSIsImxpbmtpZnkiOiJmZXRjaCh1cmwsY29uZmlndXJhdGlvbixvcHRpb25zKSIsIm5vZGVzIjpbeyJjb250ZW50IjoiZmV0Y2godXJsLGNvbmZpZ3VyYXRpb24sb3B0aW9ucykiLCJwb3MiOlswLDMyXX1dfSx7InBvcyI6WzM1LDIyNl0sImNvbnRlbnQiOiI8YnB0IGlkPVwicDFcIj4qKjwvYnB0Pk5vdGU6PGVwdCBpZD1cInAxXCI+Kio8L2VwdD4gVGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3IGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4gU2hhcmVQb2ludCBGcmFtZXdvcmsgY2xpZW50LXNpZGUgd2ViIHBhcnRzIGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdXNlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiIsIm5vZGVzIjpbeyJjb250ZW50IjoiPGJwdCBpZD1cInAxXCI+Kio8L2JwdD5Ob3RlOjxlcHQgaWQ9XCJwMVwiPioqPC9lcHQ+IFRoZSBTaGFyZVBvaW50IEZyYW1ld29yayBpcyBjdXJyZW50bHkgaW4gcHJldmlldyBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2UuIiwicG9zIjpbMCw4NF0sInNvdXJjZSI6IioqTm90ZToqKiBUaGUgU2hhcmVQb2ludCBGcmFtZXdvcmsgaXMgY3VycmVudGx5IGluIHByZXZpZXcgYW5kIGlzIHN1YmplY3QgdG8gY2hhbmdlLiJ9LHsiY29udGVudCI6IlNoYXJlUG9pbnQgRnJhbWV3b3JrIGNsaWVudC1zaWRlIHdlYiBwYXJ0cyBhcmUgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgZm9yIHVzZSBpbiBwcm9kdWN0aW9uIGVudmlyb25tZW50cy4iLCJwb3MiOls4NSwxOTFdfV0sImlzUGFyYWdyYXBoIjp0cnVlLCJzb3VyY2UiOiIqKk5vdGU6KiogVGhlIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3IGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4gU2hhcmVQb2ludCBGcmFtZXdvcmsgY2xpZW50LXNpZGUgd2ViIHBhcnRzIGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdXNlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiJ9LHsiY29udGVudCI6IkdlbmVyYWxseSwgdGhlIHBhcmFtZXRlcnMgYW5kIHNlbWFudGljcyBmb3IgU1BIdHRwQ2xpZW50LmZldGNoKCkgYXJlIGVzc2VudGlhbGx5IHRoZSBzYW1lIGFzIHRoZSBXSEFUV0cgQVBJIHN0YW5kYXJkIHRoYXQgaXMgZG9jdW1lbnRlZCBoZXJlOiBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8gVGhlIFNQSHR0cENsaWVudCBzdWJjbGFzcyBhZGRzIHNvbWUgYWRkaXRpb25hbCBiZWhhdmlvcnMgdGhhdCBhcmUgY29udmVuaWVudCB3aGVuIHdvcmtpbmcgd2l0aCBTaGFyZVBvaW50IE9EQVRBIEFQSSdzICh3aGljaCBjYW4gYmUgYXZvaWRlZCBieSB1c2luZyBIdHRwQ2xpZW50IGluc3RlYWQpOiAtIERlZmF1bHQgXCJBY2NlcHRcIiBhbmQgXCJDb250ZW50LVR5cGVcIiBoZWFkZXJzIGFyZSBhZGRlZCBpZiBub3QgZXhwbGljaXRseSBzcGVjaWZpZWQuIC0gRm9yIHdyaXRlIG9wZXJhdGlvbnMsIGFuIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyIGlzIGF1dG9tYXRpY2FsbHkgYWRkZWQgLSBUaGUgcmVxdWVzdCBkaWdlc3QgdG9rZW4gaXMgYXV0b21hdGljYWxseSBmZXRjaGVkIGFuZCBzdG9yZWQgaW4gYSBjYWNoZSwgd2l0aCBzdXBwb3J0IGZvciBwcmVsb2FkaW5nIEZvciBhIHdyaXRlIG9wZXJhdGlvbiwgU1BIdHRwQ2xpZW50IHdpbGwgYXV0b21hdGljYWxseSBhZGQgdGhlIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyLCB3aGljaCBtYXkgbmVlZCB0byBiZSBvYnRhaW5lZCBieSBpc3N1aW5nIGEgc2VwZXJhdGUgcmVxdWVzdCBzdWNoIGFzIFwiaHR0cHM6Ly9leGFtcGxlLmNvbS9zaXRlcy9zYW1wbGUvX2FwaS9jb250ZXh0aW5mb1wiLiBUeXBpY2FsbHkgdGhlIGFwcHJvcHJpYXRlIFNQV2ViIFVSTCBjYW4gYmUgZ3Vlc3NlZCBieSBsb29raW5nIGZvciBhIHJlc2VydmVkIFVSTCBzZWdtZW50IHN1Y2ggYXMgXCJfYXBpXCIgaW4gdGhlIG9yaWdpbmFsIFVSTCBwYXNzZWQgdG8gZmV0Y2goKTsgaWYgbm90LCB1c2UgSVNQSHR0cENsaWVudE9wdGlvbnMud2ViVXJsIHRvIHNwZWNpZnkgaXQgZXhwbGljaXRseS4iLCJwb3MiOlsyMzAsMTI1NF0sIm5vZGVzIjpbeyJjb250ZW50IjoiR2VuZXJhbGx5LCB0aGUgcGFyYW1ldGVycyBhbmQgc2VtYW50aWNzIGZvciBTUEh0dHBDbGllbnQuZmV0Y2goKSBhcmUgZXNzZW50aWFsbHkgdGhlIHNhbWUgYXMgdGhlIFdIQVRXRyBBUEkgc3RhbmRhcmQgdGhhdCBpcyBkb2N1bWVudGVkIGhlcmU6IGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyBUaGUgU1BIdHRwQ2xpZW50IHN1YmNsYXNzIGFkZHMgc29tZSBhZGRpdGlvbmFsIGJlaGF2aW9ycyB0aGF0IGFyZSBjb252ZW5pZW50IHdoZW4gd29ya2luZyB3aXRoIFNoYXJlUG9pbnQgT0RBVEEgQVBJJ3MgKHdoaWNoIGNhbiBiZSBhdm9pZGVkIGJ5IHVzaW5nIEh0dHBDbGllbnQgaW5zdGVhZCk6IC0gRGVmYXVsdCBcIkFjY2VwdFwiIGFuZCBcIkNvbnRlbnQtVHlwZVwiIGhlYWRlcnMgYXJlIGFkZGVkIGlmIG5vdCBleHBsaWNpdGx5IHNwZWNpZmllZC4iLCJwb3MiOlswLDQyN119LHsiY29udGVudCI6Ii0gRm9yIHdyaXRlIG9wZXJhdGlvbnMsIGFuIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyIGlzIGF1dG9tYXRpY2FsbHkgYWRkZWQgLSBUaGUgcmVxdWVzdCBkaWdlc3QgdG9rZW4gaXMgYXV0b21hdGljYWxseSBmZXRjaGVkIGFuZCBzdG9yZWQgaW4gYSBjYWNoZSwgd2l0aCBzdXBwb3J0IGZvciBwcmVsb2FkaW5nIEZvciBhIHdyaXRlIG9wZXJhdGlvbiwgU1BIdHRwQ2xpZW50IHdpbGwgYXV0b21hdGljYWxseSBhZGQgdGhlIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyLCB3aGljaCBtYXkgbmVlZCB0byBiZSBvYnRhaW5lZCBieSBpc3N1aW5nIGEgc2VwZXJhdGUgcmVxdWVzdCBzdWNoIGFzIFwiaHR0cHM6Ly9leGFtcGxlLmNvbS9zaXRlcy9zYW1wbGUvX2FwaS9jb250ZXh0aW5mb1wiLiIsInBvcyI6WzQyOCw4MTVdfSx7ImNvbnRlbnQiOiJUeXBpY2FsbHkgdGhlIGFwcHJvcHJpYXRlIFNQV2ViIFVSTCBjYW4gYmUgZ3Vlc3NlZCBieSBsb29raW5nIGZvciBhIHJlc2VydmVkIFVSTCBzZWdtZW50IHN1Y2ggYXMgXCJfYXBpXCIgaW4gdGhlIG9yaWdpbmFsIFVSTCBwYXNzZWQgdG8gZmV0Y2goKTsgaWYgbm90LCB1c2UgSVNQSHR0cENsaWVudE9wdGlvbnMud2ViVXJsIHRvIHNwZWNpZnkgaXQgZXhwbGljaXRseS4iLCJwb3MiOls4MTYsMTAyNF19XSwiaXNQYXJhZ3JhcGgiOnRydWV9LHsicG9zIjpbMTI1NiwxNTM2XSwiY29udGVudCI6IjxicHQgaWQ9XCJwMVwiPioqPC9icHQ+U2lnbmF0dXJlOjxlcHQgaWQ9XCJwMVwiPioqPC9lcHQ+IDxicHQgaWQ9XCJwMlwiPl88L2JwdD5Ab3ZlcnJpZGUgcHVibGljIGZldGNoKHVybDogc3RyaW5nLCBjb25maWd1cmF0aW9uOiA8YnB0IGlkPVwicDNcIj5bPC9icHQ+U1BIdHRwQ2xpZW50Q29uZmlndXJhdGlvbjxlcHQgaWQ9XCJwM1wiPl0oLi4vc3AtaHR0cC9zcGh0dHBjbGllbnRjb25maWd1cmF0aW9uLm1kKTwvZXB0Piwgb3B0aW9uczogPGJwdCBpZD1cInA0XCI+WzwvYnB0PklTUEh0dHBDbGllbnRPcHRpb25zPGVwdCBpZD1cInA0XCI+XSguLi9zcC1odHRwL2lzcGh0dHBjbGllbnRvcHRpb25zLm1kKTwvZXB0Pik6IFByb21pc2UmbHQ7PGJwdCBpZD1cInA1XCI+WzwvYnB0PlNQSHR0cENsaWVudFJlc3BvbnNlPGVwdCBpZD1cInA1XCI+XSguLi9zcC1odHRwL3NwaHR0cGNsaWVudHJlc3BvbnNlLm1kKTwvZXB0PiZndDs7PGVwdCBpZD1cInAyXCI+XzwvZXB0PiIsInNvdXJjZSI6IioqU2lnbmF0dXJlOioqIF9Ab3ZlcnJpZGUgcHVibGljIGZldGNoKHVybDogc3RyaW5nLCBjb25maWd1cmF0aW9uOiBbU1BIdHRwQ2xpZW50Q29uZmlndXJhdGlvbl0oLi4vc3AtaHR0cC9zcGh0dHBjbGllbnRjb25maWd1cmF0aW9uLm1kKSxcbiAgICBvcHRpb25zOiBbSVNQSHR0cENsaWVudE9wdGlvbnNdKC4uL3NwLWh0dHAvaXNwaHR0cGNsaWVudG9wdGlvbnMubWQpKTogUHJvbWlzZTxbU1BIdHRwQ2xpZW50UmVzcG9uc2VdKC4uL3NwLWh0dHAvc3BodHRwY2xpZW50cmVzcG9uc2UubWQpPjtfIn0seyJwb3MiOlsxNTM4LDE1ODJdLCJjb250ZW50IjoiPGJwdCBpZD1cInAxXCI+Kio8L2JwdD5SZXR1cm5zPGVwdCBpZD1cInAxXCI+Kio8L2VwdD46IDxwaCBpZD1cInBoMVwiPmBQcm9taXNlJmx0O1NQSHR0cENsaWVudFJlc3BvbnNlJmd0O2A8L3BoPiIsInNvdXJjZSI6IioqUmV0dXJucyoqOiBgUHJvbWlzZTxTUEh0dHBDbGllbnRSZXNwb25zZT5gIn0seyJjb250ZW50IjoiYSBwcm9taXNlIHRoYXQgd2lsbCByZXR1cm4gdGhlIHJlc3VsdCIsInBvcyI6WzE1ODYsMTYyM119LHsicG9zIjpbMTYzMCwxNjQwXSwiY29udGVudCI6IlBhcmFtZXRlcnMiLCJsaW5raWZ5IjoiUGFyYW1ldGVycyIsIm5vZGVzIjpbeyJjb250ZW50IjoiUGFyYW1ldGVycyIsInBvcyI6WzAsMTBdfV19LHsiY29udGVudCI6IlBhcmFtZXRlciIsInBvcyI6WzE2NDUsMTY1NF19LHsiY29udGVudCI6IlR5cGUiLCJwb3MiOlsxNjYwLDE2NjRdfSx7ImNvbnRlbnQiOiJEZXNjcmlwdGlvbiIsInBvcyI6WzE2NzAsMTY4MV19LHsiY29udGVudCI6InRoZSBVUkwgdG8gZmV0Y2giLCJwb3MiOlsxNzU2LDE3NzJdfSx7ImNvbnRlbnQiOiJkZXRlcm1pbmVzIHRoZSBkZWZhdWx0IGJlaGF2aW9yIG9mIFNQSHR0cENsaWVudDsgbm9ybWFsbHkgdGhpcyBzaG91bGQgYmUgdGhlIGxhdGVzdCB2ZXJzaW9uIG51bWJlciBmcm9tIFNQSHR0cENsaWVudENvbmZpZ3VyYXRpb25zIiwicG9zIjpbMTg3MSwyMDAxXX0seyJjb250ZW50IjoiYWRkaXRpb25hbCBvcHRpb25zIHRoYXQgYWZmZWN0IHRoZSByZXF1ZXN0IiwicG9zIjpbMjA4NCwyMTI2XX1dLCJjb250ZW50IjoiIyBmZXRjaCh1cmwsY29uZmlndXJhdGlvbixvcHRpb25zKVxuKipOb3RlOioqIFRoZSBTaGFyZVBvaW50IEZyYW1ld29yayBpcyBjdXJyZW50bHkgaW4gcHJldmlldyBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2UuIFNoYXJlUG9pbnQgRnJhbWV3b3JrIGNsaWVudC1zaWRlIHdlYiBwYXJ0cyBhcmUgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgZm9yIHVzZSBpbiBwcm9kdWN0aW9uIGVudmlyb25tZW50cy5cblxuXG5cbkdlbmVyYWxseSwgdGhlIHBhcmFtZXRlcnMgYW5kIHNlbWFudGljcyBmb3IgU1BIdHRwQ2xpZW50LmZldGNoKCkgYXJlIGVzc2VudGlhbGx5IHRoZSBzYW1lIGFzIHRoZSBXSEFUV0cgQVBJIHN0YW5kYXJkIHRoYXQgaXMgZG9jdW1lbnRlZCBoZXJlOiBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8gVGhlIFNQSHR0cENsaWVudCBzdWJjbGFzcyBhZGRzIHNvbWUgYWRkaXRpb25hbCBiZWhhdmlvcnMgdGhhdCBhcmUgY29udmVuaWVudCB3aGVuIHdvcmtpbmcgd2l0aCBTaGFyZVBvaW50IE9EQVRBIEFQSSdzICh3aGljaCBjYW4gYmUgYXZvaWRlZCBieSB1c2luZyBIdHRwQ2xpZW50IGluc3RlYWQpOiAtIERlZmF1bHQgXCJBY2NlcHRcIiBhbmQgXCJDb250ZW50LVR5cGVcIiBoZWFkZXJzIGFyZSBhZGRlZCBpZiBub3QgZXhwbGljaXRseSBzcGVjaWZpZWQuIC0gRm9yIHdyaXRlIG9wZXJhdGlvbnMsIGFuIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyIGlzIGF1dG9tYXRpY2FsbHkgYWRkZWQgLSBUaGUgcmVxdWVzdCBkaWdlc3QgdG9rZW4gaXMgYXV0b21hdGljYWxseSBmZXRjaGVkIGFuZCBzdG9yZWQgaW4gYSBjYWNoZSwgd2l0aCBzdXBwb3J0IGZvciBwcmVsb2FkaW5nIEZvciBhIHdyaXRlIG9wZXJhdGlvbiwgU1BIdHRwQ2xpZW50IHdpbGwgYXV0b21hdGljYWxseSBhZGQgdGhlIFwiWC1SZXF1ZXN0RGlnZXN0XCIgaGVhZGVyLCB3aGljaCBtYXkgbmVlZCB0byBiZSBvYnRhaW5lZCBieSBpc3N1aW5nIGEgc2VwZXJhdGUgcmVxdWVzdCBzdWNoIGFzIFwiaHR0cHM6Ly9leGFtcGxlLmNvbS9zaXRlcy9zYW1wbGUvX2FwaS9jb250ZXh0aW5mb1wiLiBUeXBpY2FsbHkgdGhlIGFwcHJvcHJpYXRlIFNQV2ViIFVSTCBjYW4gYmUgZ3Vlc3NlZCBieSBsb29raW5nIGZvciBhIHJlc2VydmVkIFVSTCBzZWdtZW50IHN1Y2ggYXMgXCJfYXBpXCIgaW4gdGhlIG9yaWdpbmFsIFVSTCBwYXNzZWQgdG8gZmV0Y2goKTsgaWYgbm90LCB1c2UgSVNQSHR0cENsaWVudE9wdGlvbnMud2ViVXJsIHRvIHNwZWNpZnkgaXQgZXhwbGljaXRseS5cblxuKipTaWduYXR1cmU6KiogX0BvdmVycmlkZSBwdWJsaWMgZmV0Y2godXJsOiBzdHJpbmcsIGNvbmZpZ3VyYXRpb246IFtTUEh0dHBDbGllbnRDb25maWd1cmF0aW9uXSguLi9zcC1odHRwL3NwaHR0cGNsaWVudGNvbmZpZ3VyYXRpb24ubWQpLFxuICAgIG9wdGlvbnM6IFtJU1BIdHRwQ2xpZW50T3B0aW9uc10oLi4vc3AtaHR0cC9pc3BodHRwY2xpZW50b3B0aW9ucy5tZCkpOiBQcm9taXNlPFtTUEh0dHBDbGllbnRSZXNwb25zZV0oLi4vc3AtaHR0cC9zcGh0dHBjbGllbnRyZXNwb25zZS5tZCk+O19cblxuKipSZXR1cm5zKio6IGBQcm9taXNlPFNQSHR0cENsaWVudFJlc3BvbnNlPmBcblxuXG5cbmEgcHJvbWlzZSB0aGF0IHdpbGwgcmV0dXJuIHRoZSByZXN1bHRcblxuIyMjIyBQYXJhbWV0ZXJzXG5cblxufCBQYXJhbWV0ZXIgICAgfCBUeXBlICAgIHwgRGVzY3JpcHRpb24gfFxufDotLS0tLS0tLS0tLS0tfDotLS0tLS0tLS0tLS0tLS18Oi0tLS0tLS0tLS0tLXxcbnwgYHVybGAgICAgfCBgc3RyaW5nYCB8IHRoZSBVUkwgdG8gZmV0Y2ggfFxufCBgY29uZmlndXJhdGlvbmAgICAgfCBbYFNQSHR0cENsaWVudENvbmZpZ3VyYXRpb25gXSguLi9zcC1odHRwL3NwaHR0cGNsaWVudGNvbmZpZ3VyYXRpb24ubWQpIHwgZGV0ZXJtaW5lcyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBTUEh0dHBDbGllbnQ7IG5vcm1hbGx5IHRoaXMgc2hvdWxkIGJlIHRoZSBsYXRlc3QgdmVyc2lvbiBudW1iZXIgZnJvbSBTUEh0dHBDbGllbnRDb25maWd1cmF0aW9ucyB8XG58IGBvcHRpb25zYCAgICB8IFtgSVNQSHR0cENsaWVudE9wdGlvbnNgXSguLi9zcC1odHRwL2lzcGh0dHBjbGllbnRvcHRpb25zLm1kKSB8IGFkZGl0aW9uYWwgb3B0aW9ucyB0aGF0IGFmZmVjdCB0aGUgcmVxdWVzdCB8XG5cblxuIn0=]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">218</count>
        <count count-type="x-adjWordCount">187.4</count>
        <count count-type="x-curAdjWordCount">187.4</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">27</count>
        <count count-type="x-match100%">4</count>
        <count count-type="x-match99-90%">1</count>
        <count count-type="x-match89-75%">0</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>fetch(url,configuration,options)</source>
          <target state="final">fetch(url,configuration,options)</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change. SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
            <target state="final" state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>Nota:<ept id="p1">**</ept> al momento, SharePoint Framework è in versione di anteprima e potrebbe essere soggetto a modifiche. Le web part sul lato client di SharePoint Framework attualmente non sono supportate in ambienti di produzione.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>Nota:<ept id="p1">**</ept> al momento, SharePoint Framework è in versione di anteprima e potrebbe essere soggetto a modifiche. Le web part sul lato client di SharePoint Framework attualmente non sono supportate in ambienti di produzione.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="102" translate="no" xml:space="preserve">
              <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</source>
              <target state="final"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
              <target state="final">SharePoint Framework client-side web parts are not currently supported for use in production environments.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>Generally, the parameters and semantics for SPHttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/ The SPHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): - Default "Accept" and "Content-Type" headers are added if not explicitly specified. - For write operations, an "X-RequestDigest" header is automatically added - The request digest token is automatically fetched and stored in a cache, with support for preloading For a write operation, SPHttpClient will automatically add the "X-RequestDigest" header, which may need to be obtained by issuing a seperate request such as "https://example.com/sites/sample/_api/contextinfo". Typically the appropriate SPWeb URL can be guessed by looking for a reserved URL segment such as "_api" in the original URL passed to fetch(); if not, use ISPHttpClientOptions.webUrl to specify it explicitly.</source>
            <target state="final">Generalmente, i parametri e la semantica di SPHttpClient.fetch() sono praticamente uguali allo standard API WHATWG documentato qui: https://fetch.spec.whatwg.org/ La sottoclasse SPHttpClient aggiunge alcuni comportamenti che sono utili quando si lavora con le API ODATA di SharePoint (che possono essere evitate utilizzando in alternativa HttpClient): - Le intestazioni predefinite "Accept" e "Content-Type" vengono aggiunte se non specificato esplicitamente. - Per le operazioni di scrittura, un'intestazione "X-RequestDigest" viene aggiunta automaticamente - Il token digest della richiesta viene recuperato automaticamente e memorizzato in una cache, con il supporto di precaricamento Per un'operazione di scrittura, SPHttpClient aggiungerà automaticamente l'intestazione "X-RequestDigest", che potrebbe essere ottenuta inviando una richiesta separata come ad esempio "https://example.com/sites/sample/_api/contextinfo". In genere l'URL SPWeb appropriato può essere ipotizzato cercando un segmento URL riservato, ad esempio "_api" nell'URL originale passato a fetch(); in caso contrario, utilizzare ISPHttpClientOptions.webUrl per specificarlo in modo esplicito.</target>
          <note from="bb-metadata"> wordcount="139" adjWordcount="139" curWordcount="139"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="104" translate="no" xml:space="preserve">
              <source>Generally, the parameters and semantics for SPHttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/ The SPHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): - Default "Accept" and "Content-Type" headers are added if not explicitly specified.</source>
              <target state="final">Generally, the parameters and semantics for SPHttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/ The SPHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): - Default "Accept" and "Content-Type" headers are added if not explicitly specified.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="56" adjWordcount="56" curWordcount="56"</note></trans-unit>
            <trans-unit id="105" translate="no" xml:space="preserve">
              <source>- For write operations, an "X-RequestDigest" header is automatically added - The request digest token is automatically fetched and stored in a cache, with support for preloading For a write operation, SPHttpClient will automatically add the "X-RequestDigest" header, which may need to be obtained by issuing a seperate request such as "https://example.com/sites/sample/_api/contextinfo".</source>
              <target state="final">- For write operations, an "X-RequestDigest" header is automatically added - The request digest token is automatically fetched and stored in a cache, with support for preloading For a write operation, SPHttpClient will automatically add the "X-RequestDigest" header, which may need to be obtained by issuing a seperate request such as "https://example.com/sites/sample/_api/contextinfo".</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="50" adjWordcount="50" curWordcount="50"</note></trans-unit>
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>Typically the appropriate SPWeb URL can be guessed by looking for a reserved URL segment such as "_api" in the original URL passed to fetch(); if not, use ISPHttpClientOptions.webUrl to specify it explicitly.</source>
              <target state="final">Typically the appropriate SPWeb URL can be guessed by looking for a reserved URL segment such as "_api" in the original URL passed to fetch(); if not, use ISPHttpClientOptions.webUrl to specify it explicitly.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="33" adjWordcount="33" curWordcount="33"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Signature:<ept id="p1">**</ept> <bpt id="p2">_</bpt>@override public fetch(url: string, configuration: <bpt id="p3">[</bpt>SPHttpClientConfiguration<ept id="p3">](../sp-http/sphttpclientconfiguration.md)</ept>, options: <bpt id="p4">[</bpt>ISPHttpClientOptions<ept id="p4">](../sp-http/isphttpclientoptions.md)</ept>): Promise&lt;<bpt id="p5">[</bpt>SPHttpClientResponse<ept id="p5">](../sp-http/sphttpclientresponse.md)</ept>&gt;;<ept id="p2">_</ept></source>
          <target state="final"><bpt id="p1">**</bpt>Firma:<ept id="p1">**</ept> <bpt id="p2">_</bpt>@override public fetch(url: string, configurazione: <bpt id="p3">[</bpt>SPHttpClientConfiguration<ept id="p3">](../sp-http/sphttpclientconfiguration.md)</ept>, opzioni: <bpt id="p4">[</bpt>ISPHttpClientOptions<ept id="p4">](../sp-http/isphttpclientoptions.md)</ept>): Promise&lt;<bpt id="p5">[</bpt>SPHttpClientResponse<ept id="p5">](../sp-http/sphttpclientresponse.md)</ept>&gt;;<ept id="p2">_</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Returns<ept id="p1">**</ept>: <ph id="ph1">`Promise&lt;SPHttpClientResponse&gt;`</ph></source>
          <target state="final"><bpt id="p1">**</bpt>Restituisce<ept id="p1">**</ept>: <ph id="ph1">`Promise&lt;SPHttpClientResponse&gt;`</ph></target>
        <alt-trans match-quality="99%" tool="BlackBox/MSR MT"><source>Returns</source><target state-qualifier="tm-suggestion">Restituisce</target></alt-trans><note from="bb-metadata">fuzzyMatch="99" wordcount="1" adjWordcount="0.4" curWordcount="0.4" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>a promise that will return the result</source>
          <target state="final">una promessa che verrà restituito il risultato</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="final">Parametri</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Parametri</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="1" adjWordcount="0.25" curWordcount="0.25" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="final">Parametro</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Parametro</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="1" adjWordcount="0.25" curWordcount="0.25" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="final">Tipo</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Tipo</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="1" adjWordcount="0.25" curWordcount="0.25" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="final">Descrizione</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Descrizione</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="1" adjWordcount="0.25" curWordcount="0.25" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>the URL to fetch</source>
          <target state="final">l'URL per recuperare</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations</source>
          <target state="final">determina il comportamento predefinito di SPHttpClient; in genere dovrebbe essere il numero di versione più recente da SPHttpClientClientConfigurations</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>additional options that affect the request</source>
          <target state="final">altre opzioni che riguardano la richiesta</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
      </group>
    </body>
  </file>
</xliff>