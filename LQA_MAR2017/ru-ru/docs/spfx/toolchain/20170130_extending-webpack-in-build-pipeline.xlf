<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="extending-webpack-in-build-pipeline.md" source-language="en-US" target-language="ru-RU" build-num="-2075605014">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">758</count>
        <count count-type="x-adjWordCount">682.4</count>
        <count count-type="x-curAdjWordCount">682.4</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">27</count>
        <count count-type="x-match100%">0</count>
        <count count-type="x-match99-90%">56</count>
        <count count-type="x-match89-75%">30</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extending webpack in the SharePoint Framework toolchain</source>
          <target state="final">Расширение возможностей webpack в цепочке инструментов SharePoint Framework</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change. SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
            <target state="final" state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>Примечание.<ept id="p1">**</ept> Платформа SharePoint Framework находится на этапе бета-тестирования и может меняться. Сейчас клиентские веб-части SharePoint Framework не поддерживаются в производственной среде.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm"><bpt id="p1">**</bpt>Примечание.<ept id="p1">**</ept> Платформа SharePoint Framework находится на этапе тестирования и может меняться. В настоящее время клиентские веб-части SharePoint Framework нельзя использовать в рабочих средах.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="102" translate="no" xml:space="preserve">
              <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</source>
              <target state="final"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The SharePoint Framework is currently in preview and is subject to change.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>SharePoint Framework client-side web parts are not currently supported for use in production environments.</source>
              <target state="final">SharePoint Framework client-side web parts are not currently supported for use in production environments.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Webpack<ept id="p1">](https://webpack.github.io/)</ept> is a JavaScript module bundler that takes your JavaScript files and its dependencies and generates one or more JavaScript bundles so you can load different bundles for different scenarios.</source>
          <target state="final">Инструмент <bpt id="p1">[</bpt>webpack<ept id="p1">](https://webpack.github.io/)</ept> — это средство увязки модулей JavaScript в пакеты, которое создает один или несколько пакетов JavaScript из файлов и зависимостей JavaScript. Это позволяет загружать различные пакеты для разных сценариев.</target>
        <alt-trans match-quality="88%" tool="BlackBox/MSR MT"><source>Webpack is a module bundler that takes your web part files an dependencies and generates one or more JavaScript bundles so you can load different bundles for different scenarios.</source><target state-qualifier="tm-suggestion">Webpack — это средство увязки модулей в пакеты, которое создает один или несколько пакетов JavaScript из файлов веб-частей и зависимостей, благодаря чему можно загрузить различные пакеты для разных сценариев.</target></alt-trans><note from="bb-metadata">fuzzyMatch="88" wordcount="30" adjWordcount="15" curWordcount="15" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>The framework tool chain uses CommonJS for bundling. This enables you to define modules and where you want to use them. The tool chain also uses SystemJS, a universal module loader, to load your modules. This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source>
            <target state="final">Цепочка инструментов платформы использует CommonJS для увязки в пакеты. Это позволяет определять модули и их назначение. Цепочка инструментов также использует SystemJS, универсальный загрузчик модулей. Это позволяет определять области для веб-частей, так как каждая веб-часть выполняется в отдельном пространстве имен.</target>
          <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>The development tool chain uses CommonJS for bundling. This enables you to define modules and where you want to use them. The tool chain also uses SystemJS, a universal module loader, to load your modules. This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source><target state-qualifier="tm-suggestion">Набором средств разработки для объединения используется CommonJS. Это позволяет определить модули и место их использования. Цепочка инструментов использует SystemJS, универсальный загрузчик модулей. Это позволяет определить области для веб-частей, так как обеспечивает выполнение каждой веб-части в отдельном пространстве имен.</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="56" adjWordcount="22.4" curWordcount="22.4" tmLabel="20161116_NEW_SP_ FRAMEWORK_CONTENT"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="105" translate="no" xml:space="preserve">
              <source>The framework tool chain uses CommonJS for bundling.</source>
              <target state="final">The framework tool chain uses CommonJS for bundling.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>This enables you to define modules and where you want to use them.</source>
              <target state="final">This enables you to define modules and where you want to use them.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="13" adjWordcount="13" curWordcount="13"</note></trans-unit>
            <trans-unit id="107" translate="no" xml:space="preserve">
              <source>The tool chain also uses SystemJS, a universal module loader, to load your modules.</source>
              <target state="final">The tool chain also uses SystemJS, a universal module loader, to load your modules.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="14" adjWordcount="14" curWordcount="14"</note></trans-unit>
            <trans-unit id="108" translate="no" xml:space="preserve">
              <source>This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</source>
              <target state="final">This helps you to scope your web parts by making sure that each web part is executed in its own namespace.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One common task you would want to add to the SharePoint Framework toolchain is to extend the webpack configuration with custom loaders and plugins.</source>
          <target state="final">Одна из распространенных задач, добавляемых в цепочку инструментов SharePoint Framework, — расширение возможностей конфигурации webpack с помощью пользовательских загрузчиков и подключаемых модулей.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using webpack loaders</source>
          <target state="final">Использование загрузчиков webpack</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates. A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application. For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</source>
            <target state="final">Во время разработки часто требуется импортировать и использовать ресурсы, не относящиеся к JavaScript, например изображения или шаблоны. <bpt id="p1">[</bpt>Загрузчик webpack<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> преобразует ресурс так, чтобы его можно было использовать в приложении JavaScript. Например, шаблон Markdown можно скомпилировать и преобразовать в текстовую строку, а ресурс изображения — в изображение с кодировкой Base64.</target>
          <note from="bb-metadata"> wordcount="66" adjWordcount="66" curWordcount="66"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="111" translate="no" xml:space="preserve">
              <source>There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates.</source>
              <target state="final">There are many cases where one would like to import and utilize a non-JavaScript resource during development, typically this is done with images or templates.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="25" adjWordcount="25" curWordcount="25"</note></trans-unit>
            <trans-unit id="112" translate="no" xml:space="preserve">
              <source>A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application.</source>
              <target state="final">A <bpt id="p1">[</bpt>webpack loader<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept> will convert the resource into something that can be utilized by your JavaScript application.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="113" translate="no" xml:space="preserve">
              <source>For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</source>
              <target state="final">For example, a Markdown template may be compiled and converted to a text string, while a image resource may be converted to Base64 image.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are a number of useful loaders, several of which are already used by the standard SharePoint Framework webpack configuration, such as:</source>
          <target state="final">Существует ряд полезных загрузчиков, некоторые из которых уже используются в стандартной конфигурации webpack SharePoint Framework, например:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="22" adjWordcount="22" curWordcount="22"</note></trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>html-loader</source>
          <target state="final">html-loader;</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>json-loader</source>
          <target state="final">json-loader;</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>loader-load-themed-styles</source>
          <target state="final">loader-load-themed-styles.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="1" adjWordcount="1" curWordcount="1"</note></trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Extending the framework webpack configuration with custom loaders is a straightforward process which is documented <bpt id="p1">[</bpt>here in the webpack documentation<ept id="p1">](https://webpack.github.io/docs/loaders.html#writing-a-loader)</ept>.</source>
          <target state="final">Расширить конфигурацию webpack платформы, добавив пользовательские загрузчики, можно довольно просто. Этот процесс описан в <bpt id="p1">[</bpt>документации по webpack<ept id="p1">](https://webpack.github.io/docs/loaders.html#writing-a-loader)</ept>.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can find more details on the loaders from <bpt id="p1">[</bpt>webpack loaders documentation<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept></source>
          <target state="final">Дополнительные сведения о загрузчиках см. в <bpt id="p1">[</bpt>документации по загрузчикам webpack<ept id="p1">](https://webpack.github.io/docs/loaders.html)</ept>.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="12" adjWordcount="12" curWordcount="12"</note></trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example: Using the markdown-loader package</source>
          <target state="final">Пример: использование пакета markdown-loader</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source>As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.  It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</source>
            <target state="final">В качестве примера рассмотрим <bpt id="p1">[</bpt>пакет markdown-loader<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.  Это загрузчик, с помощью которого можно сослаться на файл <ph id="ph1">`.md`</ph> и вывести его в качестве строки HTML.</target>
          <note from="bb-metadata"> wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="121" translate="no" xml:space="preserve">
              <source>As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.</source>
              <target state="final">As an example, let's use the <bpt id="p1">[</bpt>markdown-loader package<ept id="p1">](https://www.npmjs.com/package/markdown-loader)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
            <trans-unit id="122" translate="no" xml:space="preserve">
              <source>It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</source>
              <target state="final">It's a loader which allows you to reference an <ph id="ph1">`.md`</ph> file and output it as HTML string.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can download the completed sample <bpt id="p1">[</bpt>here<ept id="p1">](https://aka.ms/spfx-extend-webpack-sample)</ept>.</source>
          <target state="final">Готовый пример можно скачать <bpt id="p1">[</bpt>здесь<ept id="p1">](https://aka.ms/spfx-extend-webpack-sample)</ept>.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Step 1 - Install the package</source>
          <target state="final">Этап 1. Установка пакета</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Let's reference markdown-loader in our project.</source>
          <target state="final">Добавим в проект ссылку на пакет markdown-loader.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Step 2 - Configure Webpack</source>
          <target state="final">Этап 2. Настройка webpack</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Now that we have the package installed, lets now configure the SharePoint Framework webpack configuration to include the markdown-loader.</source>
          <target state="final">Теперь, когда мы установили пакет, настроим конфигурацию webpack SharePoint Framework, добавив в нее пакет markdown-loader.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>documentation of markdown-loader<ept id="p1">](https://github.com/peerigon/markdown-loader)</ept>, it shows how to extend the webpack configuration to include the loader:</source>
          <target state="final">В <bpt id="p1">[</bpt>документации по markdown-loader<ept id="p1">](https://github.com/peerigon/markdown-loader)</ept> показано, как расширить возможности конфигурации webpack, включив в нее загрузчик:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We will use this information to configure it in our project.</source>
          <target state="final">Мы будем использовать эти сведения для настройки проекта.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack. The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project. SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</source>
            <target state="final">Чтобы добавить этот пользовательский загрузчик в конфигурацию webpack SharePoint Framework, необходимо поручить задаче сборки настройку webpack. Задачи сборки определяются в файле gulp (<ph id="ph1">`gulpfile.js`</ph>), который находится в корневой папке проекта. SharePoint Framework использует <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> для запуска задач, поэтому мы будем определять и регистрировать настраиваемые задачи с помощью этого средства.</target>
          <note from="bb-metadata"> wordcount="66" adjWordcount="66" curWordcount="66"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack.</source>
              <target state="final">In order to add this custom loader into the SharePoint Framework webpack configuration, we will need to instruct the build task to configure webpack.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
            <trans-unit id="131" translate="no" xml:space="preserve">
              <source>The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project.</source>
              <target state="final">The build tasks are defined in the gulp file - <ph id="ph1">`gulpfile.js`</ph> - which is located at the root of your project.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
            <trans-unit id="132" translate="no" xml:space="preserve">
              <source>SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</source>
              <target state="final">SharePoint Framework uses <bpt id="p1">[</bpt>gulp<ept id="p1">](http://gulpjs.com/)</ept> as its task runner and hence we use it to define and register custom tasks with the gulp task runner.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="24" adjWordcount="24" curWordcount="24"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Edit the <ph id="ph1">`gulpfile.js`</ph> and add the following code right before <ph id="ph2">`build.initialize(gulp);`</ph>:</source>
          <target state="final">Отредактируйте <ph id="ph1">`gulpfile.js`</ph>, добавив следующий код перед строкой <ph id="ph2">`build.initialize(gulp);`</ph>:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="9" adjWordcount="9" curWordcount="9"</note></trans-unit>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source>Notice that we simply push the loader config onto the list of existing loaders in the toolchain. It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</source>
            <target state="final">Обратите внимание, что мы просто добавляем конфигурацию загрузчика в список имеющихся загрузчиков в цепочке инструментов. Очень важно убедиться, что функция <ph id="ph1">`additionalConfiguration`</ph> заканчивается строкой <ph id="ph2">`return generatedConfiguration`</ph>. Это гарантирует, что функция возвращает конфигурацию загрузчика в цепочку инструментов.</target>
          <note from="bb-metadata"> wordcount="40" adjWordcount="40" curWordcount="40"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="134" translate="no" xml:space="preserve">
              <source>Notice that we simply push the loader config onto the list of existing loaders in the toolchain.</source>
              <target state="final">Notice that we simply push the loader config onto the list of existing loaders in the toolchain.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="135" translate="no" xml:space="preserve">
              <source>It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</source>
              <target state="final">It's important to ensure that your <ph id="ph1">`additionalConfiguration`</ph> function ends with the <ph id="ph2">`return generatedConfiguration`</ph> line, as this ensures that it  returns the loader configuration to the toolchain.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="23" adjWordcount="23" curWordcount="23"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>While you are able to completely replace the toolchain's default webpack configuration using this approach, to get the maximum benefit with performance and optimization, it is not recommended to do so unless stated otherwise in the documentation.</source>
          <target state="final">С помощью этого подхода вы можете полностью заменить конфигурацию webpack по умолчанию в цепочке инструментов, но для обеспечения максимальной производительности и оптимизации не рекомендуем этого делать, если обратное не указано в документации.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="37" adjWordcount="37" curWordcount="37"</note></trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Step 3 - Update your code</source>
          <target state="final">Этап 3. Обновление кода</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Now that we have configured the loader, lets update our code and add few files to test the scenario.</source>
          <target state="final">Теперь, когда мы настроили загрузчик, давайте обновим код и добавим несколько файлов, чтобы протестировать сценарий.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="19" adjWordcount="19" curWordcount="19"</note></trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create a file <ph id="ph1">`my-markdown.md`</ph> in the <ph id="ph2">`src`</ph> directory of your project folder with some Markdown text in it.</source>
          <target state="final">Создайте файл <ph id="ph1">`my-markdown.md`</ph> с текстом Markdown в каталоге <ph id="ph2">`src`</ph> папки проекта.</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source>When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string. To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</source>
            <target state="final">При сборке проекта загрузчик markdown-loader преобразует этот текст в строку HTML. Чтобы использовать эту строку HTML в каком-либо из исходных файлов <ph id="ph1">`*.ts`</ph>, добавьте следующую строку <ph id="ph2">`require()`</ph> в начале кода каждого файла после импорта:</target>
          <note from="bb-metadata"> wordcount="43" adjWordcount="43" curWordcount="43"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="140" translate="no" xml:space="preserve">
              <source>When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string.</source>
              <target state="final">When you build the project, the webpack markdown-loader will convert this markdown text to a HTML string.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
            <trans-unit id="141" translate="no" xml:space="preserve">
              <source>To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</source>
              <target state="final">To use this HTML string in any of your source <ph id="ph1">`*.ts`</ph> files, add the following <ph id="ph2">`require()`</ph> line at the top of the file after your imports, for example:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="26" adjWordcount="26" curWordcount="26"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-108" merged-trans="yes">
          <trans-unit id="p108" translate="yes" xml:space="preserve">
            <source>Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path. We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph4">`md`</ph> files to the lib folder.</source>
            <target state="final">По умолчанию webpack будет искать файл в папке <ph id="ph1">`lib`</ph>, но файлы <ph id="ph2">`.md`</ph> не копируются в папку <ph id="ph3">`lib`</ph> по умолчанию, поэтому необходимо составлять довольно длинный относительный путь. Мы можем изменить эту настройку, определив файл конфигурации, чтобы цепочка инструментов копировала файлы <ph id="ph4">`md`</ph> в папку lib.</target>
          <note from="bb-metadata"> wordcount="52" adjWordcount="52" curWordcount="52"</note></trans-unit>
          <group id="sentence-108">
            <trans-unit id="142" translate="no" xml:space="preserve">
              <source>Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path.</source>
              <target state="final">Webpack by default will look in the <ph id="ph1">`lib`</ph> folder for the file, but by default <ph id="ph2">`.md`</ph> files don't get copied to the <ph id="ph3">`lib`</ph> folder, meaning we need to create a rather lengthy relative path.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="31" adjWordcount="31" curWordcount="31"</note></trans-unit>
            <trans-unit id="143" translate="no" xml:space="preserve">
              <source>We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph1">`md`</ph> files to the lib folder.</source>
              <target state="final">We can control this setting by defining a config file to tell the toolchain to copy <ph id="ph1">`md`</ph> files to the lib folder.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="21" adjWordcount="21" curWordcount="21"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-109" merged-trans="yes">
          <trans-unit id="p109" translate="yes" xml:space="preserve">
            <source>Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>. By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph5">`png`</ph> and <ph id="ph6">`json`</ph>), so we just need to tell it to also copy <ph id="ph7">`md`</ph> files.</source>
            <target state="final">Создайте файл <ph id="ph1">`copy-static-assets.json`</ph> в каталоге <ph id="ph2">`config`</ph>, чтобы система сборки копировала некоторые дополнительные файлы из <ph id="ph3">`src`</ph> в <ph id="ph4">`lib`</ph>. По умолчанию эта задача сборки копирует файлы с расширениями, которые распознает стандартная конфигурация webpack цепочки инструментов (например, <ph id="ph5">`png`</ph> и <ph id="ph6">`json`</ph>), поэтому мы просто поручим ей также копировать файлы <ph id="ph7">`md`</ph>.</target>
          <note from="bb-metadata"> wordcount="47" adjWordcount="47" curWordcount="47"</note></trans-unit>
          <group id="sentence-109">
            <trans-unit id="144" translate="no" xml:space="preserve">
              <source>Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>.</source>
              <target state="final">Create a file <ph id="ph1">`copy-static-assets.json`</ph> in the <ph id="ph2">`config`</ph> directory to tell the build system to copy some additional files from <ph id="ph3">`src`</ph> to <ph id="ph4">`lib`</ph>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
            <trans-unit id="145" translate="no" xml:space="preserve">
              <source>By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph1">`png`</ph> and <ph id="ph2">`json`</ph>), so we just need to tell it to also copy <ph id="ph3">`md`</ph> files.</source>
              <target state="final">By default, this build task copies files with extensions that the default toolchain webpack configuration understands (like <ph id="ph1">`png`</ph> and <ph id="ph2">`json`</ph>), so we just need to tell it to also copy <ph id="ph3">`md`</ph> files.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="29" adjWordcount="29" curWordcount="29"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Now instead of using the relative path, you can use the file path in your <ph id="ph1">`require`</ph> statement, for example:</source>
          <target state="final">Теперь в операторе <ph id="ph1">`require`</ph> вместо относительного пути можно использовать путь к файлу, например:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="18" adjWordcount="18" curWordcount="18"</note></trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can then reference this string in your code, for example:</source>
          <target state="final">Вы можете ссылаться на эту строку в коде, например:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Step 4 - Build and test your code</source>
          <target state="final">Этап 4. Сборка и тестирование кода</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="7" adjWordcount="7" curWordcount="7"</note></trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To build and test your code, execute the following command in a console in the root of your project directory:</source>
          <target state="final">Чтобы собрать и протестировать код, выполните в консоли следующую команду для корневого каталога проекта:</target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="20" adjWordcount="20" curWordcount="20"</note></trans-unit>
      </group>
    </body>
  </file>
</xliff>