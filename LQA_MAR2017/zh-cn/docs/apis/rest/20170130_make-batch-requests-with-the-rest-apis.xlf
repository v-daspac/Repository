<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="make-batch-requests-with-the-rest-apis.md" source-language="en-US" target-language="zh-CN" build-num="581831972">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">420</count>
        <count count-type="x-adjWordCount">153.65</count>
        <count count-type="x-curAdjWordCount">153.65</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">82</count>
        <count count-type="x-match100%">43</count>
        <count count-type="x-match99-90%">136</count>
        <count count-type="x-match89-75%">141</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Make batch requests with the REST APIs</source>
          <target state="final">使用 REST API 进行批处理请求</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">使用 REST API 发出批处理请求</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="7" adjWordcount="1.75" curWordcount="1.75" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the  <ph id="ph1">`$batch`</ph> query option with the REST/OData APIs.</source>
          <target state="final">了解如何将 <ph id="ph1">`$batch`</ph> 查询选项与 REST/OData API 配合使用。</target>
        <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>Learn how to use the $batch<ph id="ph1">`$batch`</ph> query option with the REST/OData APIs.</source><target state-qualifier="tm-suggestion">了解如何将 $batch<ph id="ph1">`$batch`</ph> 查询选项与 REST/OData API 一起使用。</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="11" adjWordcount="4.4" curWordcount="4.4" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source>This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs. With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source>
            <target state="final">本文介绍如何对 Microsoft Office SharePoint Online（和本地 SharePoint 2016 及更高版本）的 REST/OData API 和 Office 365 REST API 的<bpt id="p1">[</bpt>文件和文件夹子集<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept>执行批处理查询和操作。借助此技术，可通过将多个操作合并到对服务器的单个请求和单个响应，提高外接程序的性能。</target>
          <alt-trans match-quality="89%" tool="BlackBox/MSR MT"><source>This article describes how you can batch queries and operations against the REST/OData API of spolong (and on-premise spnv 2016 and later)   and the  Files and folders subset http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations  of   the off365long REST APIs. With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source><target state-qualifier="tm-suggestion">本文介绍如何对 spolong（和本地 spnv 2016 及更高版本）的 REST/OData API 查询和操作以及 off365long REST API 的 文件和文件夹子集 http://msdn.microsoft.com/zh-cn/office/office365/api/files-rest-operations 进行批处理。通过此技术，您可以将多项操作合并到发给服务器的一个请求以及一个响应中，从而改进外接程序的性能。</target></alt-trans><note from="bb-metadata">fuzzyMatch="89" wordcount="63" adjWordcount="31.5" curWordcount="31.5" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs.</source>
              <target state="final">This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="36" adjWordcount="36" curWordcount="36"</note></trans-unit>
            <trans-unit id="104" translate="no" xml:space="preserve">
              <source>With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source>
              <target state="final">With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Executive summary of the $batch option</source>
          <target state="final">$batch 选项的执行摘要</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">$batch 选项的执行摘要</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="6" adjWordcount="1.5" curWordcount="1.5" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it. (Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p2">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p2">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</source>
            <target state="final">Microsoft SharePoint Online（和本地 SharePoint 2016 及更高版本）与 Office 365 API 可实现 OData <ph id="ph1">`$batch`</ph> 查询选项，可参阅<bpt id="p1">[</bpt>官方文档<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept>，了解有关其使用方式的详细信息。（也可查看 Andrew Connell 关于该主题的博客文章，开始部分是 <bpt id="p2">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p2">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>（第 1 部分 - SharePoint REST API 批处理）。）以下只是有关要点提示：</target>
          <alt-trans match-quality="87%" tool="BlackBox/MSR MT"><source>sposhort (and on-premise spnv 2016 and later)  and the off365APIs implement the OData $batch query option, so you can rely on  the official documentation http://www.odata.org/documentation/odata-version-3-0/batch-processing  for details about how to use it. (Another option is to see Andrew Connell's blog posts on the subject beginning at  Part 1 - SharePoint REST API Batching http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests .) The following is only a reminder of the major points:</source><target state-qualifier="tm-suggestion">sposhort（和本地 spnv 2016 及更高版本）和 off365APIs 实现 OData $batch 查询选项，因此您可以查看 正式文档 http://www.odata.org/documentation/odata-version-3-0/batch-processing 了解有关其使用方式的详细信息。（另一个选项是查看 Andrew Connell 关于此主题的博客文章，从 第 1 部分 - SharePoint REST API 批处理 http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests 开始。）下面只是一些要点提醒：</target></alt-trans><note from="bb-metadata">fuzzyMatch="87" wordcount="63" adjWordcount="31.5" curWordcount="31.5" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it.</source>
              <target state="final">SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="33" adjWordcount="33" curWordcount="33"</note></trans-unit>
            <trans-unit id="107" translate="no" xml:space="preserve">
              <source>(Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p1">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p1">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</source>
              <target state="final">(Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p1">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p1">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="30" adjWordcount="30" curWordcount="30"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The request URL consists of the root service URL and the  <ph id="ph1">`$batch`</ph> option; for example, <ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> or <ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</source>
          <target state="final">请求 URL 包含根服务 URL 和 <ph id="ph1">`$batch`</ph> 选项；例如，<ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> 或 <ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>。</target>
        <alt-trans match-quality="86%" tool="BlackBox/MSR MT"><source>The request URL consists of the root service URL and the $batch<ph id="ph1">`$batch`</ph> option; for example, https://fabrikam.sharepoint.com/_api/$batch<ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> or https://fabrikam.office365.com/api/v1.0/me/$batch<ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</source><target state-qualifier="tm-suggestion">请求 URL 由根服务 URL 和 $batch<ph id="ph1">`$batch`</ph> 选项组成，例如 https://fabrikam.sharepoint.com/_api/$batch<ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> 或 https://fabrikam.office365.com/api/v1.0/me/$batch<ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>。</target></alt-trans><note from="bb-metadata">fuzzyMatch="86" wordcount="15" adjWordcount="7.5" curWordcount="7.5" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The HTTP request body is MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  .</source>
          <target state="final">HTTP 请求正文属于 MIME 类型：<bpt id="p1">*</bpt>多部分/混合<ept id="p1">*</ept>。</target>
        <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>The HTTP request body is MIME type <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>.</source><target state-qualifier="tm-suggestion">HTTP 请求正文是 MIME 类型 <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>。</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="8" adjWordcount="3.2" curWordcount="3.2" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The body of the request is divided into parts that are separated from each other by a boundary string that is specified in the header of the request.</source>
          <target state="final" state-qualifier="leveraged-tm">请求的正文分成几个部分，各个部分之间用请求标头中指定的边界字符串分开。</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">请求的正文分成几个部分，各个部分之间用请求标头中指定的边界字符串分开。</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="28" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each part of the body has its own HTTP verb and REST URL, and its own internal body when applicable.</source>
          <target state="final">正文的每部分都有自己的 HTTP 谓词和 REST URL，以及自己的内部正文（若适用）。</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">正文的每个部分都有自己的 HTTP 动词和 REST URL 及其自己的内部正文（如果适用）。</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="20" adjWordcount="5" curWordcount="5" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations). A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</source>
            <target state="final">部分可以是读取操作（或函数调用）或者一个或多个写入操作的变更集（或函数调用）。变更集本身属于 MIME 类型（<bpt id="p1">*</bpt>多部分/混合<ept id="p1">*</ept>），具有包含插入、更新或删除操作的子部分。</target>
          <alt-trans match-quality="99%" tool="BlackBox/MSR MT"><source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations). A ChangeSet is itself a MIME type <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept> with subparts that contain insert, update, or delete operations.</source><target state-qualifier="tm-suggestion">一个部分可为一个读取操作（或函数调用），也可以为一个或多个写入操作（或函数调用）的 ChangeSet。ChangeSet 本身为 MIME 类型 <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>，其各个部分包含插入、更新或删除操作。</target></alt-trans><note from="bb-metadata">fuzzyMatch="99" wordcount="39" adjWordcount="15.6" curWordcount="15.6" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="112" translate="no" xml:space="preserve">
              <source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations).</source>
              <target state="final">A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations).</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="22" adjWordcount="22" curWordcount="22"</note></trans-unit>
            <trans-unit id="113" translate="no" xml:space="preserve">
              <source>A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</source>
              <target state="final">A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them. If any of the child operations fails, the others still complete and are not rolled back.</source>
            <target state="final"><bpt id="p1">**</bpt>重要提示<ept id="p1">**</ept>：目前，SharePoint 和 Office 365 API 不支持包含多个操作的变更集的“全有或全无”功能。如果任何子操作失败，其他操作仍将完成且不会回退。</target>
          <alt-trans match-quality="90%" tool="BlackBox/MSR MT"><source>At this time, spnv and off365APIs do not support "all or nothing" functionality for ChangeSets that have  more than one operation within them. If any of the child operations fails, the others still complete and are not rolled back.</source><target state-qualifier="tm-suggestion">目前，spnv 和 off365APIs 对包含多个操作的 ChangeSets 不支持“全部或全无”功能。如果任一子操作失败，其他操作仍会完成，并且不会回滚。</target></alt-trans><note from="bb-metadata">fuzzyMatch="90" wordcount="42" adjWordcount="16.8" curWordcount="16.8" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="114" translate="no" xml:space="preserve">
              <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them.</source>
              <target state="final"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="26" adjWordcount="26" curWordcount="26"</note></trans-unit>
            <trans-unit id="115" translate="no" xml:space="preserve">
              <source>If any of the child operations fails, the others still complete and are not rolled back.</source>
              <target state="final">If any of the child operations fails, the others still complete and are not rolled back.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Code samples</source>
          <target state="final">代码示例</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">代码示例</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="2" adjWordcount="0.5" curWordcount="0.5" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Samples of code that uses the  <ph id="ph1">`$batch`</ph> query option against the SharePoint REST/OData APIs:</source>
          <target state="final">针对 SharePoint REST/OData API 使用 <ph id="ph1">`$batch`</ph> 查询选项的代码示例：</target>
        <alt-trans match-quality="91%" tool="BlackBox/MSR MT"><source>Samples of code that uses the $batch query option against the spnv REST/OData APIs:</source><target state-qualifier="tm-suggestion">针对 spnv REST/OData API 使用 $batch 查询选项的代码示例：</target></alt-trans><note from="bb-metadata">fuzzyMatch="91" wordcount="13" adjWordcount="5.2" curWordcount="5.2" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>C#:<ept id="p1">**</ept> <bpt id="p2">[</bpt>OfficeDev/Core.ODataBatch<ept id="p2">](https://github.com/OfficeDev/PnP/tree/master/Samples/Core.ODataBatch)</ept></source>
          <target state="final"><bpt id="p1">**</bpt>C#:<ept id="p1">**</ept><bpt id="p2">[</bpt>OfficeDev/Core.ODataBatch<ept id="p2">](https://github.com/OfficeDev/PnP/tree/master/Samples/Core.ODataBatch)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JavaScript:<ept id="p1">**</ept> <bpt id="p2">[</bpt>andrewconnell/sp-o365-rest<ept id="p2">](https://github.com/andrewconnell/sp-o365-rest/blob/master/SpRestBatchSample/Scripts/App.js)</ept></source>
          <target state="final"><bpt id="p1">**</bpt>JavaScript：<ept id="p1">**</ept> <bpt id="p2">[</bpt>andrewconnell/sp-o365-rest<ept id="p2">](https://github.com/andrewconnell/sp-o365-rest/blob/master/SpRestBatchSample/Scripts/App.js)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example requests and responses</source>
          <target state="final">示例请求和响应</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">示例请求和响应</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="4" adjWordcount="1" curWordcount="1" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following is an example of a raw HTTP request that batches two GET operations that retrieve the titles of all the items in two different lists.</source>
          <target state="final" state-qualifier="leveraged-tm">下面是一个原始 HTTP 请求的示例，该请求对两个 GET 操作进行批处理，以检索两个不同列表中所有项目的标题。</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">下面是一个原始 HTTP 请求的示例，该请求对两个 GET 操作进行批处理，以检索两个不同列表中所有项目的标题。</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following is an example of the body of a raw HTTP request that batches a DELETE of a list and a GET of the SharePoint list-of-lists.</source>
          <target state="final" state-qualifier="leveraged-tm">下面是一个原始 HTTP 请求的正文示例，该请求对列表的 DELETE 和 SharePoint 列表的列表的 GET 进行批处理。</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">下面是一个原始 HTTP 请求的正文示例，该请求对列表的 DELETE 和 SharePoint 列表的列表的 GET 进行批处理。</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Links to helpful libraries</source>
          <target state="final">有用的库的链接</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">有用库的链接</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="4" adjWordcount="1" curWordcount="1" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>There are OData libraries that support OData batching for many languages. Two examples are below. For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source>
            <target state="final">存在支持多种语言的 OData 批处理的 OData 库。以下是两个示例。有关更加完整的列表，请参阅 <bpt id="p1">[</bpt>OData 库<ept id="p1">](http://www.odata.org/libraries/)</ept>。</target>
          <alt-trans match-quality="93%" tool="BlackBox/MSR MT"><source>There are OData libraries that support OData batching for many languages. Two examples are below. For a more complete list, see <bpt id="p1">[</bpt>OData Librarieshttp://www.odata.org/libraries/<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source><target state-qualifier="tm-suggestion">提供 OData 库，支持多种语言的 OData 批处理。下面是两个示例。有关更完整的列表，请参阅 <bpt id="p1">[</bpt>OData 库http://www.odata.org/libraries/<ept id="p1">](http://www.odata.org/libraries/)</ept>。</target></alt-trans><note from="bb-metadata">fuzzyMatch="93" wordcount="23" adjWordcount="9.2" curWordcount="9.2" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="124" translate="no" xml:space="preserve">
              <source>There are OData libraries that support OData batching for many languages.</source>
              <target state="final">There are OData libraries that support OData batching for many languages.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="125" translate="no" xml:space="preserve">
              <source>Two examples are below.</source>
              <target state="final">Two examples are below.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
            <trans-unit id="126" translate="no" xml:space="preserve">
              <source>For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source>
              <target state="final">For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>. See especially the  <bpt id="p2">**</bpt>ODataBatch<ept id="p2">**</ept>* classes.</source>
            <target state="final"><bpt id="p1">[</bpt>.NET OData 库<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>。请着重参阅 <bpt id="p2">**</bpt>ODataBatch<ept id="p2">**</ept>* 类。</target>
          <note from="bb-metadata"> wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="127" translate="no" xml:space="preserve">
              <source><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>.</source>
              <target state="final"><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
            <trans-unit id="128" translate="no" xml:space="preserve">
              <source>See especially the  <bpt id="p1">**</bpt>ODataBatch<ept id="p1">**</ept>* classes.</source>
              <target state="final">See especially the  <bpt id="p1">**</bpt>ODataBatch<ept id="p1">**</ept>* classes.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>. See especially  <bpt id="p2">[</bpt>Batch operations<ept id="p2">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</source>
            <target state="final"><bpt id="p1">[</bpt>Datajs 库<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>请着重参阅<bpt id="p2">[</bpt>批处理操作<ept id="p2">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>。</target>
          <note from="bb-metadata"> wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="129" translate="no" xml:space="preserve">
              <source><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>.</source>
              <target state="final"><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>See especially  <bpt id="p1">[</bpt>Batch operations<ept id="p1">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</source>
              <target state="final">See especially  <bpt id="p1">[</bpt>Batch operations<ept id="p1">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
          </group>
        </group>
      </group>
    </body>
  </file>
</xliff>