<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="make-batch-requests-with-the-rest-apis.md" source-language="en-US" target-language="de-DE" build-num="581831972">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <skl>
        <internal-file form="base64"><![CDATA[]]></internal-file>
      </skl>
      <count-group name="BlackBox wordcount">
        <count count-type="x-wordCount">420</count>
        <count count-type="x-adjWordCount">153.65</count>
        <count count-type="x-curAdjWordCount">153.65</count>
        <count count-type="x-repeatAdjWordCount">0</count>
        <count count-type="x-termWordCount">0</count>
      </count-group>
      <count-group name="BlackBox wordcount analysis">
        <count count-type="x-match102%">0</count>
        <count count-type="x-match101%">82</count>
        <count count-type="x-match100%">43</count>
        <count count-type="x-match99-90%">136</count>
        <count count-type="x-match89-75%">141</count>
        <count count-type="repetition">0</count>
      </count-group>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Make batch requests with the REST APIs</source>
          <target state="final">Durchführen von Batchanforderungen mit den REST-APIs</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Erstellen von Batchanforderungen mit den REST-APIs</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="7" adjWordcount="1.75" curWordcount="1.75" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the  <ph id="ph1">`$batch`</ph> query option with the REST/OData APIs.</source>
          <target state="final">Erfahren Sie, wie Sie die Abfrageoption <ph id="ph1">`$batch`</ph> mit den REST-/OData-APIs verwenden.</target>
        <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>Learn how to use the $batch<ph id="ph1">`$batch`</ph> query option with the REST/OData APIs.</source><target state-qualifier="tm-suggestion">In diesem Artikel erfahren Sie, wie Sie die Abfrageoption $batch<ph id="ph1">`$batch`</ph> zusammen mit den REST/OData-APIs verwenden.</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="11" adjWordcount="4.4" curWordcount="4.4" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-101" merged-trans="yes">
          <trans-unit id="p101" translate="yes" xml:space="preserve">
            <source>This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs. With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source>
            <target state="final">In diesem Artikel wird beschrieben, wie Sie Vorgänge und Abfragen an die REST-/OData-API von Microsoft SharePoint Online (sowie des lokalen SharePoint 2016 und höher) und die <bpt id="p1">[</bpt>Unterklasse Dateien und Ordner<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> der Office 365 REST-APIs zusammenfassen. Mit diesem Verfahren können Sie die Leistung Ihrer Add-ins verbessern, indem Sie mehrere Vorgänge in einer einzelnen Anforderung an den Server und einer einzelnen Antwort kombinieren.</target>
          <alt-trans match-quality="89%" tool="BlackBox/MSR MT"><source>This article describes how you can batch queries and operations against the REST/OData API of spolong (and on-premise spnv 2016 and later)   and the  Files and folders subset http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations  of   the off365long REST APIs. With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source><target state-qualifier="tm-suggestion">In diesem Artikel wird beschrieben, wie Sie Abfragen und Vorgänge für die REST/OData-API von spolong (und die lokalen spnv 2016 und höher) und die  Dateien- und Ordnerteilmenge http://msdn.microsoft.com/de-de/office/office365/api/files-rest-operations  der off365long-REST-APIs in Batches zusammenfassen. Mit diesem Verfahren können Sie die Leistung Ihres Add-Ins verbessern, indem viele Vorgänge in einer einzelnen Anforderung an den Server und einer einzelnen Antwort kombiniert werden.</target></alt-trans><note from="bb-metadata">fuzzyMatch="89" wordcount="63" adjWordcount="31.5" curWordcount="31.5" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-101">
            <trans-unit id="103" translate="no" xml:space="preserve">
              <source>This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs.</source>
              <target state="final">This article describes how you can batch queries and operations against the REST/OData API of Microsoft SharePoint Online (and on-premise SharePoint 2016 and later) and the  <bpt id="p1">[</bpt>Files and folders subset<ept id="p1">](http://msdn.microsoft.com/en-us/office/office365/api/files-rest-operations)</ept> of the Office 365 REST APIs.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="36" adjWordcount="36" curWordcount="36"</note></trans-unit>
            <trans-unit id="104" translate="no" xml:space="preserve">
              <source>With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</source>
              <target state="final">With this technique you can improve the performance of your add-in by combining many operations into a single request to the server and a single response back.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="27" adjWordcount="27" curWordcount="27"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Executive summary of the $batch option</source>
          <target state="final">Zusammenfassung der $batch-Option</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Zusammenfassung der $batch-Option</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="6" adjWordcount="1.5" curWordcount="1.5" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-102" merged-trans="yes">
          <trans-unit id="p102" translate="yes" xml:space="preserve">
            <source>SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it. (Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p2">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p2">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</source>
            <target state="final">SharePoint Online (sowie das lokale SharePoint 2016 und höher) und die Office 365-APIs implementieren die OData-<ph id="ph1">`$batch`</ph>-Abfrageoption. Details zu ihrer Verwendung können Sie der <bpt id="p1">[</bpt>offiziellen Dokumentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> entnehmen. Sie können auch die Blogbeiträge von Andrew Connell zu diesem Thema lesen, beginnend bei <bpt id="p2">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p2">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept> (Teil 1: Batchverarbeitung mit der SharePoint REST-API). Im Folgenden finden Sie eine Zusammenfassung der wichtigsten Punkte:</target>
          <alt-trans match-quality="87%" tool="BlackBox/MSR MT"><source>sposhort (and on-premise spnv 2016 and later)  and the off365APIs implement the OData $batch query option, so you can rely on  the official documentation http://www.odata.org/documentation/odata-version-3-0/batch-processing  for details about how to use it. (Another option is to see Andrew Connell's blog posts on the subject beginning at  Part 1 - SharePoint REST API Batching http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests .) The following is only a reminder of the major points:</source><target state-qualifier="tm-suggestion">sposhort (und die lokalen spnv 2016 und höher) und off365APIs implementieren die OData-Abfrageoption $batch. Sie können also auf  die offizielle Dokumentation http://www.odata.org/documentation/odata-version-3-0/batch-processing  zurückgreifen, um Details zu ihrer Verwendung zu erfahren. (Eine andere Möglichkeit ist Andrew Connells Blogbeitrag zu dem Thema unter  Teil 1 - Batchverarbeitung der SharePoint-REST-API http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests .) Im Folgenden werden nur die wichtigsten Punkte aufgeführt:</target></alt-trans><note from="bb-metadata">fuzzyMatch="87" wordcount="63" adjWordcount="31.5" curWordcount="31.5" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-102">
            <trans-unit id="106" translate="no" xml:space="preserve">
              <source>SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it.</source>
              <target state="final">SharePoint Online (and on-premise SharePoint 2016 and later) and the Office 365 APIs implement the OData  <ph id="ph1">`$batch`</ph> query option, so you can rely on <bpt id="p1">[</bpt>the official documentation<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing)</ept> for details about how to use it.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="33" adjWordcount="33" curWordcount="33"</note></trans-unit>
            <trans-unit id="107" translate="no" xml:space="preserve">
              <source>(Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p1">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p1">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</source>
              <target state="final">(Another option is to see Andrew Connell's blog posts on the subject beginning at <bpt id="p1">[</bpt>Part 1 - SharePoint REST API Batching<ept id="p1">](http://www.andrewconnell.com/blog/part-1-sharepoint-rest-api-batching-understanding-batching-requests)</ept>.) The following is only a reminder of the major points:</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="30" adjWordcount="30" curWordcount="30"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The request URL consists of the root service URL and the  <ph id="ph1">`$batch`</ph> option; for example, <ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> or <ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</source>
          <target state="final">Die URL der Anforderung besteht aus der Stammdienst-URL und der Option <ph id="ph1">`$batch`</ph>. Beispiel: <ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> oder <ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</target>
        <alt-trans match-quality="86%" tool="BlackBox/MSR MT"><source>The request URL consists of the root service URL and the $batch<ph id="ph1">`$batch`</ph> option; for example, https://fabrikam.sharepoint.com/_api/$batch<ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> or https://fabrikam.office365.com/api/v1.0/me/$batch<ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</source><target state-qualifier="tm-suggestion">Die Anforderungs-URL besteht aus der Stammdienst-URL und der Option $batch<ph id="ph1">`$batch`</ph>. Beispiel: https://fabrikam.sharepoint.com/_api/$batch<ph id="ph2">`https://fabrikam.sharepoint.com/_api/$batch`</ph> oder https://fabrikam.office365.com/api/v1.0/me/$batch<ph id="ph3">`https://fabrikam.office365.com/api/v1.0/me/$batch`</ph>.</target></alt-trans><note from="bb-metadata">fuzzyMatch="86" wordcount="15" adjWordcount="7.5" curWordcount="7.5" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The HTTP request body is MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  .</source>
          <target state="final">Der HTTP-Anforderungstext ist im MIME-Typ <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>.</target>
        <alt-trans match-quality="98%" tool="BlackBox/MSR MT"><source>The HTTP request body is MIME type <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>.</source><target state-qualifier="tm-suggestion">Der MIME-Typ für den Hauptteil der HTTP-Anforderung ist <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>.</target></alt-trans><note from="bb-metadata">fuzzyMatch="98" wordcount="8" adjWordcount="3.2" curWordcount="3.2" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The body of the request is divided into parts that are separated from each other by a boundary string that is specified in the header of the request.</source>
          <target state="final" state-qualifier="leveraged-tm">Der Text der Anforderung ist in Bereiche unterteilt, die durch eine Trennzeichenfolge voneinander getrennt sind, die im Header der Anforderung angegeben ist.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">Der Text der Anforderung ist in Bereiche unterteilt, die durch eine Trennzeichenfolge voneinander getrennt sind, die im Header der Anforderung angegeben ist.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="28" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each part of the body has its own HTTP verb and REST URL, and its own internal body when applicable.</source>
          <target state="final">Jeder Teil des Textkörpers verfügt über ein eigenes HTTP-Verb, eine eigene REST-URL sowie einen eigenen internen Textkörper, falls zutreffend.</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Jeder Teil des Textkörpers enthält ein eigenes HTTP-Verb und eine eigene REST-URL sowie bei Bedarf einen eigenen internen Textkörper.</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="20" adjWordcount="5" curWordcount="5" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-103" merged-trans="yes">
          <trans-unit id="p103" translate="yes" xml:space="preserve">
            <source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations). A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</source>
            <target state="final">Ein Teil kann ein Lesevorgang (oder Funktionsaufruf) sein, bzw. ein ChangeSet einer oder mehrerer Schreibvorgänge (oder Funktionsaufrufe). Ein ChangeSet ist selbst ein MIME-Typ <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept> mit Unterteilen, die Einfüge-, Aktualisierungs- oder Löschvorgänge enthalten.</target>
          <alt-trans match-quality="99%" tool="BlackBox/MSR MT"><source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations). A ChangeSet is itself a MIME type <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept> with subparts that contain insert, update, or delete operations.</source><target state-qualifier="tm-suggestion">Ein Teil kann ein Lesevorgang (oder Funktionsaufruf) oder ein ChangeSet aus mindestens einem Schreibvorgang (oder Funktionsaufruf) sein. Ein ChangeSet ist selbst vom MIME-Typ <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept> mit Unterteilen, die Einfügungs-, Aktualisierungs- oder Löschvorgänge enthalten.</target></alt-trans><note from="bb-metadata">fuzzyMatch="99" wordcount="39" adjWordcount="15.6" curWordcount="15.6" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-103">
            <trans-unit id="112" translate="no" xml:space="preserve">
              <source>A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations).</source>
              <target state="final">A part can be a read operation (or function invocation), or a ChangeSet of one or more write operations (or function invocations).</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="22" adjWordcount="22" curWordcount="22"</note></trans-unit>
            <trans-unit id="113" translate="no" xml:space="preserve">
              <source>A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</source>
              <target state="final">A ChangeSet is itself a MIME type  <bpt id="p1">*</bpt>multipart/mixed<ept id="p1">*</ept>  with subparts that contain insert, update, or delete operations.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="17" adjWordcount="17" curWordcount="17"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-104" merged-trans="yes">
          <trans-unit id="p104" translate="yes" xml:space="preserve">
            <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them. If any of the child operations fails, the others still complete and are not rolled back.</source>
            <target state="final"><bpt id="p1">**</bpt>Wichtig<ept id="p1">**</ept> Derzeit unterstützen SharePoint- und Office 365-APIs nicht die Funktion „alles oder nichts“ für ChangeSets mit mehr als einem Vorgang. Wenn einer der untergeordneten Vorgänge fehlschlägt, werden die anderen ausgeführt und nicht rückgängig gemacht.</target>
          <alt-trans match-quality="90%" tool="BlackBox/MSR MT"><source>At this time, spnv and off365APIs do not support "all or nothing" functionality for ChangeSets that have  more than one operation within them. If any of the child operations fails, the others still complete and are not rolled back.</source><target state-qualifier="tm-suggestion">Zu diesem Zeitpunkt wird in spnv und off365APIs keine "Alles oder nichts"-Funktionalität für ChangeSets mit mehreren Vorgängen unterstützt. Wenn in einem der untergeordneten Vorgänge ein Fehler auftritt, werden die anderen dennoch abgeschlossen und nicht zurückgesetzt.</target></alt-trans><note from="bb-metadata">fuzzyMatch="90" wordcount="42" adjWordcount="16.8" curWordcount="16.8" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-104">
            <trans-unit id="114" translate="no" xml:space="preserve">
              <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them.</source>
              <target state="final"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  At this time, SharePoint and Office 365 APIs do not support "all or nothing" functionality for ChangeSets that have more than one operation within them.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="26" adjWordcount="26" curWordcount="26"</note></trans-unit>
            <trans-unit id="115" translate="no" xml:space="preserve">
              <source>If any of the child operations fails, the others still complete and are not rolled back.</source>
              <target state="final">If any of the child operations fails, the others still complete and are not rolled back.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="16" adjWordcount="16" curWordcount="16"</note></trans-unit>
          </group>
        </group>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Code samples</source>
          <target state="final">Codebeispiele</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Codebeispiele</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="2" adjWordcount="0.5" curWordcount="0.5" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Samples of code that uses the  <ph id="ph1">`$batch`</ph> query option against the SharePoint REST/OData APIs:</source>
          <target state="final">Beispiele für Code, der die Abfrageoption <ph id="ph1">`$batch`</ph> für die SharePoint REST/OData-APIs verwendet:</target>
        <alt-trans match-quality="91%" tool="BlackBox/MSR MT"><source>Samples of code that uses the $batch query option against the spnv REST/OData APIs:</source><target state-qualifier="tm-suggestion">Beispiele für Code, der die Abfrageoption $batch für die REST/OData-APIs von spnv verwendet:</target></alt-trans><note from="bb-metadata">fuzzyMatch="91" wordcount="13" adjWordcount="5.2" curWordcount="5.2" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>C#:<ept id="p1">**</ept> <bpt id="p2">[</bpt>OfficeDev/Core.ODataBatch<ept id="p2">](https://github.com/OfficeDev/PnP/tree/master/Samples/Core.ODataBatch)</ept></source>
          <target state="final"><bpt id="p1">**</bpt>C#:<ept id="p1">**</ept> <bpt id="p2">[</bpt>OfficeDev/Core.ODataBatch<ept id="p2">](https://github.com/OfficeDev/PnP/tree/master/Samples/Core.ODataBatch)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JavaScript:<ept id="p1">**</ept> <bpt id="p2">[</bpt>andrewconnell/sp-o365-rest<ept id="p2">](https://github.com/andrewconnell/sp-o365-rest/blob/master/SpRestBatchSample/Scripts/App.js)</ept></source>
          <target state="final"><bpt id="p1">**</bpt>JavaScript:<ept id="p1">**</ept> <bpt id="p2">[</bpt>andrewconnell/sp-o365-rest<ept id="p2">](https://github.com/andrewconnell/sp-o365-rest/blob/master/SpRestBatchSample/Scripts/App.js)</ept></target>
        <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example requests and responses</source>
          <target state="final">Beispielanforderungen und -antworten</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Beispielanforderungen und -antworten</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="4" adjWordcount="1" curWordcount="1" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following is an example of a raw HTTP request that batches two GET operations that retrieve the titles of all the items in two different lists.</source>
          <target state="final" state-qualifier="leveraged-tm">Das folgende Beispiel zeigt eine unformatierte HTTP-Anforderung, die zwei GET-Vorgänge zusammenfasst, die die Titel aller Elemente in zwei verschiedenen Listen abrufen.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">Das folgende Beispiel zeigt eine unformatierte HTTP-Anforderung, die zwei GET-Vorgänge zusammenfasst, die die Titel aller Elemente in zwei verschiedenen Listen abrufen.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following is an example of the body of a raw HTTP request that batches a DELETE of a list and a GET of the SharePoint list-of-lists.</source>
          <target state="final" state-qualifier="leveraged-tm">Das folgende Beispiel zeigt den Textkörper einer unformatierten HTTP-Anforderung, die ein DELETE einer Liste und ein GET der SharePoint-Liste der Listen zusammenfasst.</target><alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="leveraged-tm">Das folgende Beispiel zeigt den Textkörper einer unformatierten HTTP-Anforderung, die ein DELETE einer Liste und ein GET der SharePoint-Liste der Listen zusammenfasst.</target></alt-trans><note from="bb-metadata">fuzzyMatch="101" wordcount="27" adjWordcount="0" curWordcount="0" tmLabel="SEED"</note></trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Links to helpful libraries</source>
          <target state="final">Links zu hilfreichen Bibliotheken</target>
        <alt-trans match-quality="100%" tool="BlackBox/MSR MT"><target state-qualifier="tm-suggestion">Links zu nützlichen Bibliotheken</target></alt-trans><note from="bb-metadata">fuzzyMatch="100" wordcount="4" adjWordcount="1" curWordcount="1" tmLabel="SEED"</note></trans-unit>
        <group id="paragraph-105" merged-trans="yes">
          <trans-unit id="p105" translate="yes" xml:space="preserve">
            <source>There are OData libraries that support OData batching for many languages. Two examples are below. For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source>
            <target state="final">Es gibt zahlreiche OData-Bibliotheken, die die OData-Batchverarbeitung für viele Sprachen unterstützen. Zwei Beispiele sind nachstehend aufgeführt. Eine vollständige Liste finden Sie unter <bpt id="p1">[</bpt>OData Libraries OData-Bibliotheken<ept id="p1">](http://www.odata.org/libraries/)</ept>.</target>
          <alt-trans match-quality="93%" tool="BlackBox/MSR MT"><source>There are OData libraries that support OData batching for many languages. Two examples are below. For a more complete list, see <bpt id="p1">[</bpt>OData Librarieshttp://www.odata.org/libraries/<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source><target state-qualifier="tm-suggestion">Es gibt OData-Bibliotheken, die OData-Batchverarbeitung für viele Sprachen unterstützen. Zwei Beispiele sind nachstehend aufgeführt. Eine vollständige Liste finden Sie unter <bpt id="p1">[</bpt>OData-Bibliothekenhttp://www.odata.org/libraries/<ept id="p1">](http://www.odata.org/libraries/)</ept>.</target></alt-trans><note from="bb-metadata">fuzzyMatch="93" wordcount="23" adjWordcount="9.2" curWordcount="9.2" tmLabel="SEED"</note></trans-unit>
          <group id="sentence-105">
            <trans-unit id="124" translate="no" xml:space="preserve">
              <source>There are OData libraries that support OData batching for many languages.</source>
              <target state="final">There are OData libraries that support OData batching for many languages.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="11" adjWordcount="11" curWordcount="11"</note></trans-unit>
            <trans-unit id="125" translate="no" xml:space="preserve">
              <source>Two examples are below.</source>
              <target state="final">Two examples are below.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
            <trans-unit id="126" translate="no" xml:space="preserve">
              <source>For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</source>
              <target state="final">For a more complete list, see  <bpt id="p1">[</bpt>OData Libraries<ept id="p1">](http://www.odata.org/libraries/)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-106" merged-trans="yes">
          <trans-unit id="p106" translate="yes" xml:space="preserve">
            <source><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>. See especially the  <bpt id="p2">**</bpt>ODataBatch<ept id="p2">**</ept>* classes.</source>
            <target state="final"><bpt id="p1">[</bpt>.NET OData-Bibliothek<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>. Siehe insbesondere die <bpt id="p2">**</bpt>ODataBatch<ept id="p2">**</ept>*-Klassen.</target>
          <note from="bb-metadata"> wordcount="8" adjWordcount="8" curWordcount="8"</note></trans-unit>
          <group id="sentence-106">
            <trans-unit id="127" translate="no" xml:space="preserve">
              <source><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>.</source>
              <target state="final"><bpt id="p1">[</bpt>.NET OData library<ept id="p1">](http://msdn.microsoft.com/en-us/office/microsoft.data.odata%28v=vs.90%29)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="3" adjWordcount="3" curWordcount="3"</note></trans-unit>
            <trans-unit id="128" translate="no" xml:space="preserve">
              <source>See especially the  <bpt id="p1">**</bpt>ODataBatch<ept id="p1">**</ept>* classes.</source>
              <target state="final">See especially the  <bpt id="p1">**</bpt>ODataBatch<ept id="p1">**</ept>* classes.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="5" adjWordcount="5" curWordcount="5"</note></trans-unit>
          </group>
        </group>
        <group id="paragraph-107" merged-trans="yes">
          <trans-unit id="p107" translate="yes" xml:space="preserve">
            <source><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>. See especially  <bpt id="p2">[</bpt>Batch operations<ept id="p2">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</source>
            <target state="final"><bpt id="p1">[</bpt>Datajs-Bibliothek<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>. Siehe insbesondere <bpt id="p2">[</bpt>Batchvorgänge<ept id="p2">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</target>
          <note from="bb-metadata"> wordcount="6" adjWordcount="6" curWordcount="6"</note></trans-unit>
          <group id="sentence-107">
            <trans-unit id="129" translate="no" xml:space="preserve">
              <source><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>.</source>
              <target state="final"><bpt id="p1">[</bpt>Datajs library<ept id="p1">](http://datajs.codeplex.com/documentation)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="2" adjWordcount="2" curWordcount="2"</note></trans-unit>
            <trans-unit id="130" translate="no" xml:space="preserve">
              <source>See especially  <bpt id="p1">[</bpt>Batch operations<ept id="p1">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</source>
              <target state="final">See especially  <bpt id="p1">[</bpt>Batch operations<ept id="p1">](http://datajs.codeplex.com/wikipage?title=datajs%20OData%20API&amp;amp;referringTitle=Documentation#Batch)</ept>.</target>
            <note from="bb-metadata">fuzzyMatch="0" wordcount="4" adjWordcount="4" curWordcount="4"</note></trans-unit>
          </group>
        </group>
      </group>
    </body>
  </file>
</xliff>